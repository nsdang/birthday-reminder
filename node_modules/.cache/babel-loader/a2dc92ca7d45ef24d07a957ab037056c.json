{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/HomePage/Toolbar.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Grid, Hidden, Typography, Tooltip, ButtonGroup, IconButton, Button } from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {}\n  };\n});\nvar viewOptions = [{\n  label: 'Month',\n  value: 'dayGridMonth',\n  icon: ViewConfigIcon\n}, {\n  label: 'Week',\n  value: 'timeGridWeek',\n  icon: ViewWeekIcon\n}, {\n  label: 'Day',\n  value: 'timeGridDay',\n  icon: ViewDayIcon\n}, {\n  label: 'Agenda',\n  value: 'listWeek',\n  icon: ViewAgendaIcon\n}];\n\nfunction Toolbar(_ref) {\n  var _this = this;\n\n  var date = _ref.date,\n      view = _ref.view,\n      onDatePrev = _ref.onDatePrev,\n      onDateNext = _ref.onDateNext,\n      onEventAdd = _ref.onEventAdd,\n      onViewChange = _ref.onViewChange,\n      onDateToday = _ref.onDateToday,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"date\", \"view\", \"onDatePrev\", \"onDateNext\", \"onEventAdd\", \"onViewChange\", \"onDateToday\", \"className\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    alignItems: \"flex-end\",\n    container: true,\n    justify: \"space-between\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Calendar\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, \"Here's what you planned\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: onEventAdd,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, \"Add event\"))), /*#__PURE__*/React.createElement(Grid, {\n    alignItems: \"center\",\n    container: true,\n    justify: \"space-between\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    onClick: onDatePrev,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, \"Prev\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onDateToday,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: onDateNext,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Next\"))), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, moment(date).format('MMMM YYYY'))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, viewOptions.map(function (viewOption) {\n    var Icon = viewOption.icon;\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: viewOption.value,\n      title: viewOption.label,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      color: viewOption.value === view ? 'primary' : 'default',\n      onClick: function onClick() {\n        return onViewChange(viewOption.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }\n    })));\n  })))));\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\nexport default Toolbar;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/HomePage/Toolbar.js"],"names":["React","clsx","moment","PropTypes","makeStyles","Grid","Hidden","Typography","Tooltip","ButtonGroup","IconButton","Button","ViewConfigIcon","ViewWeekIcon","ViewDayIcon","ViewAgendaIcon","useStyles","root","viewOptions","label","value","icon","Toolbar","date","view","onDatePrev","onDateNext","onEventAdd","onViewChange","onDateToday","className","rest","classes","format","map","viewOption","Icon","propTypes","children","node","string","any","isRequired","func"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Grid,\n  Hidden,\n  Typography,\n  Tooltip,\n  ButtonGroup,\n  IconButton,\n  Button\n} from '@material-ui/core';\nimport ViewConfigIcon from '@material-ui/icons/ViewComfyOutlined';\nimport ViewWeekIcon from '@material-ui/icons/ViewWeekOutlined';\nimport ViewDayIcon from '@material-ui/icons/ViewDayOutlined';\nimport ViewAgendaIcon from '@material-ui/icons/ViewAgendaOutlined';\n\nconst useStyles = makeStyles(() => ({\n  root: {}\n}));\n\nconst viewOptions = [\n  {\n    label: 'Month',\n    value: 'dayGridMonth',\n    icon: ViewConfigIcon\n  },\n  {\n    label: 'Week',\n    value: 'timeGridWeek',\n    icon: ViewWeekIcon\n  },\n  {\n    label: 'Day',\n    value: 'timeGridDay',\n    icon: ViewDayIcon\n  },\n  {\n    label: 'Agenda',\n    value: 'listWeek',\n    icon: ViewAgendaIcon\n  }\n];\n\nfunction Toolbar({\n  date,\n  view,\n  onDatePrev,\n  onDateNext,\n  onEventAdd,\n  onViewChange,\n  onDateToday,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Calendar\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h3\"\n          >\n            Here's what you planned\n          </Typography>\n        </Grid>\n        <Grid item>\n          <Button\n            color=\"primary\"\n            onClick={onEventAdd}\n            variant=\"contained\"\n          >\n            Add event\n          </Button>\n        </Grid>\n      </Grid>\n      <Grid\n        alignItems=\"center\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <ButtonGroup>\n            <Button onClick={onDatePrev}>Prev</Button>\n            <Button onClick={onDateToday}>Today</Button>\n            <Button onClick={onDateNext}>Next</Button>\n          </ButtonGroup>\n        </Grid>\n        <Hidden smDown>\n          <Grid item>\n            <Typography variant=\"h3\">\n              {moment(date).format('MMMM YYYY')}\n            </Typography>\n          </Grid>\n          <Grid item>\n            {viewOptions.map(viewOption => {\n              const Icon = viewOption.icon;\n\n              return (\n                <Tooltip\n                  key={viewOption.value}\n                  title={viewOption.label}\n                >\n                  <IconButton\n                    color={viewOption.value === view ? 'primary' : 'default'}\n                    onClick={() => onViewChange(viewOption.value)}\n                  >\n                    <Icon />\n                  </IconButton>\n                </Tooltip>\n              );\n            })}\n          </Grid>\n        </Hidden>\n      </Grid>\n    </div>\n  );\n}\n\nToolbar.propTypes = {\n  children: PropTypes.node,\n  className: PropTypes.string,\n  date: PropTypes.any.isRequired,\n  onDateNext: PropTypes.func,\n  onDatePrev: PropTypes.func,\n  onDateToday: PropTypes.func,\n  onEventAdd: PropTypes.func,\n  onViewChange: PropTypes.func,\n  view: PropTypes.string.isRequired\n};\n\nexport default Toolbar;\n"]},"metadata":{},"sourceType":"module"}