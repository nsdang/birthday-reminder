{"ast":null,"code":"import _regeneratorRuntime from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/dnguyen/Desktop/Projects/birthday-reminder/src/views/Login/LoginForm.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport validate from \"validate.js\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { login } from \"src/actions\";\nimport { Alert } from \"@material-ui/lab\";\nimport firebaseConfig from \"../../firebase-config.js\";\nimport firebase from \"firebase\";\nvar schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    },\n    email: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: \"is required\"\n    }\n  }\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    fields: {\n      margin: theme.spacing(-1),\n      display: \"flex\",\n      flexWrap: \"wrap\",\n      \"& > *\": {\n        flexGrow: 1,\n        margin: theme.spacing(1)\n      }\n    },\n    submitButton: {\n      marginTop: theme.spacing(2),\n      width: \"100%\"\n    }\n  };\n});\n\nfunction LoginForm(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var history = useHistory();\n  var dispatch = useDispatch();\n\n  var _useState = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setFormState(function (prevFormState) {\n      return _objectSpread({}, prevFormState, {\n        values: _objectSpread({}, prevFormState.values, _defineProperty({}, event.target.name, event.target.type === \"checkbox\" ? event.target.checked : event.target.value)),\n        touched: _objectSpread({}, prevFormState.touched, _defineProperty({}, event.target.name, true))\n      });\n    });\n  };\n\n  var handleSubmit =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(event) {\n      var db;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault(); // dispatch(login());\n\n              if (!firebase.apps.length) {\n                firebase.initializeApp(firebaseConfig);\n              }\n\n              db = firebase.firestore();\n              db.settings({\n                timestampsInSnapshots: true\n              });\n              db.collection(\"users\").where(\"email\", \"==\", formState.values.email).get().then(function (querySnapshot) {\n                if (querySnapshot.empty) {\n                  alert(\"Wrong email address or password. Please try again!\");\n                }\n\n                querySnapshot.forEach(function (doc) {\n                  if (doc.data().password === formState.values.password) {\n                    history.push(\"/\");\n                  } else {\n                    alert(\"Wrong email address or password. Please try again!\");\n                  }\n                });\n              }).catch(function (error) {\n                console.log(\"Error getting documents: \", error);\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var hasError = function hasError(field) {\n    return !!(formState.touched[field] && formState.errors[field]);\n  };\n\n  useEffect(function () {\n    var errors = validate(formState.values, schema);\n    setFormState(function (prevFormState) {\n      return _objectSpread({}, prevFormState, {\n        isValid: !errors,\n        errors: errors || {}\n      });\n    });\n  }, [formState.values]);\n  return React.createElement(\"form\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.fields,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    error: hasError(\"email\"),\n    fullWidth: true,\n    helperText: hasError(\"email\") ? formState.errors.email[0] : null,\n    label: \"Email address\",\n    name: \"email\",\n    onChange: handleChange,\n    value: formState.values.email || \"\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    error: hasError(\"password\"),\n    fullWidth: true,\n    helperText: hasError(\"password\") ? formState.errors.password[0] : null,\n    label: \"Password\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: formState.values.password || \"\",\n    variant: \"outlined\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  })), React.createElement(Button, {\n    className: classes.submitButton,\n    color: \"secondary\",\n    disabled: !formState.isValid,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, \"Sign in\"));\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string\n};\nexport default LoginForm;","map":{"version":3,"sources":["/Users/dnguyen/Desktop/Projects/birthday-reminder/src/views/Login/LoginForm.js"],"names":["React","useState","useEffect","useHistory","validate","clsx","PropTypes","useDispatch","makeStyles","Button","TextField","login","Alert","firebaseConfig","firebase","schema","email","presence","allowEmpty","message","password","useStyles","theme","root","fields","margin","spacing","display","flexWrap","flexGrow","submitButton","marginTop","width","LoginForm","className","rest","classes","history","dispatch","isValid","values","touched","errors","formState","setFormState","handleChange","event","persist","prevFormState","target","name","type","checked","value","handleSubmit","preventDefault","apps","length","initializeApp","db","firestore","settings","timestampsInSnapshots","collection","where","get","then","querySnapshot","empty","alert","forEach","doc","data","push","catch","error","console","log","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router\";\nimport validate from \"validate.js\";\nimport clsx from \"clsx\";\nimport PropTypes from \"prop-types\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Button, TextField } from \"@material-ui/core\";\nimport { login } from \"src/actions\";\nimport { Alert } from \"@material-ui/lab\";\nimport firebaseConfig from \"../../firebase-config.js\";\nimport firebase from \"firebase\";\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: \"is required\" },\n    email: true,\n  },\n  password: {\n    presence: { allowEmpty: false, message: \"is required\" },\n  },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  fields: {\n    margin: theme.spacing(-1),\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    \"& > *\": {\n      flexGrow: 1,\n      margin: theme.spacing(1),\n    },\n  },\n  submitButton: {\n    marginTop: theme.spacing(2),\n    width: \"100%\",\n  },\n}));\n\nfunction LoginForm({ className, ...rest }) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {},\n  });\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((prevFormState) => ({\n      ...prevFormState,\n      values: {\n        ...prevFormState.values,\n        [event.target.name]:\n          event.target.type === \"checkbox\"\n            ? event.target.checked\n            : event.target.value,\n      },\n      touched: {\n        ...prevFormState.touched,\n        [event.target.name]: true,\n      },\n    }));\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    // dispatch(login());\n\n    if (!firebase.apps.length) {\n      firebase.initializeApp(firebaseConfig);\n    }\n    const db = firebase.firestore();\n    db.settings({\n      timestampsInSnapshots: true,\n    });\n\n    db.collection(\"users\")\n      .where(\"email\", \"==\", formState.values.email)\n      .get()\n      .then(function(querySnapshot) {\n        if (querySnapshot.empty){\n          alert(\"Wrong email address or password. Please try again!\");\n        }\n        querySnapshot.forEach(function(doc) {\n          if (doc.data().password === formState.values.password) {\n            history.push(\"/\");\n          } else {\n            alert(\"Wrong email address or password. Please try again!\");\n          }\n        });\n      })\n      .catch(function(error) {\n        console.log(\"Error getting documents: \", error);\n      });\n  };\n\n  const hasError = (field) =>\n    !!(formState.touched[field] && formState.errors[field]);\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((prevFormState) => ({\n      ...prevFormState,\n      isValid: !errors,\n      errors: errors || {},\n    }));\n  }, [formState.values]);\n\n  return (\n    <form\n      {...rest}\n      className={clsx(classes.root, className)}\n      onSubmit={handleSubmit}\n    >\n      <div className={classes.fields}>\n        <TextField\n          error={hasError(\"email\")}\n          fullWidth\n          helperText={hasError(\"email\") ? formState.errors.email[0] : null}\n          label=\"Email address\"\n          name=\"email\"\n          onChange={handleChange}\n          value={formState.values.email || \"\"}\n          variant=\"outlined\"\n        />\n        <TextField\n          error={hasError(\"password\")}\n          fullWidth\n          helperText={\n            hasError(\"password\") ? formState.errors.password[0] : null\n          }\n          label=\"Password\"\n          name=\"password\"\n          onChange={handleChange}\n          type=\"password\"\n          value={formState.values.password || \"\"}\n          variant=\"outlined\"\n        />\n      </div>\n      <Button\n        className={classes.submitButton}\n        color=\"secondary\"\n        disabled={!formState.isValid}\n        size=\"large\"\n        type=\"submit\"\n        variant=\"contained\"\n      >\n        Sign in\n      </Button>\n    </form>\n  );\n}\n\nLoginForm.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}