{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/CustomerActivity.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Divider, List, ListItem, ListItemAvatar, ListItemText, Avatar, Typography, Link } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    statsContainer: {\n      display: 'flex'\n    },\n    statsItem: {\n      padding: theme.spacing(3),\n      flexGrow: 1,\n      '&:first-of-type': {\n        borderRight: \"1px solid \".concat(theme.palette.divider)\n      }\n    },\n    content: {\n      padding: 0\n    },\n    date: {\n      whiteSpace: 'nowrap'\n    }\n  };\n});\n\nfunction CustomerActivity(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      customers = _useState2[0],\n      setCustomers = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchCustomers = function fetchCustomers() {\n      axios.get('/api/dashboard/customer-activity').then(function (response) {\n        if (mounted) {\n          setCustomers(response.data.customers);\n        }\n      });\n    };\n\n    fetchCustomers();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    title: \"Customer Activity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.statsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.statsItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    component: \"h4\",\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Registered\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, \"15,245\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.statsItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    component: \"h4\",\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, \"Online\"), /*#__PURE__*/React.createElement(Typography, {\n    align: \"center\",\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, \"357\"))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, customers.map(function (customer, i) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      divider: i < customers.length - 1,\n      key: customer.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Customer\",\n      component: RouterLink,\n      src: customer.author.avatar,\n      to: \"/management/customers/1\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, getInitials(customer.author.name))), /*#__PURE__*/React.createElement(ListItemText, {\n      disableTypography: true,\n      primary: /*#__PURE__*/React.createElement(Typography, {\n        component: RouterLink,\n        to: \"/management/customers/1\",\n        variant: \"h6\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }\n      }, customer.author.name),\n      secondary: /*#__PURE__*/React.createElement(Typography, {\n        variant: \"body2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 19\n        }\n      }, customer.description, \" |\", ' ', customer.type === 'payment' && /*#__PURE__*/React.createElement(Link, {\n        color: \"inherit\",\n        component: RouterLink,\n        to: \"#\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 23\n        }\n      }, \"See invoice\")),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.date,\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }, moment(customer.created_at).fromNow()));\n  }))));\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\nexport default CustomerActivity;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/CustomerActivity.js"],"names":["React","useState","useEffect","Link","RouterLink","clsx","moment","PropTypes","makeStyles","Card","CardHeader","CardContent","Divider","List","ListItem","ListItemAvatar","ListItemText","Avatar","Typography","axios","getInitials","useStyles","theme","root","statsContainer","display","statsItem","padding","spacing","flexGrow","borderRight","palette","divider","content","date","whiteSpace","CustomerActivity","className","rest","classes","customers","setCustomers","mounted","fetchCustomers","get","then","response","data","map","customer","i","length","id","author","avatar","name","description","type","created_at","fromNow","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  Typography,\n  Link\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  statsContainer: {\n    display: 'flex'\n  },\n  statsItem: {\n    padding: theme.spacing(3),\n    flexGrow: 1,\n    '&:first-of-type': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  },\n  content: {\n    padding: 0\n  },\n  date: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction CustomerActivity({ className, ...rest }) {\n  const classes = useStyles();\n  const [customers, setCustomers] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchCustomers = () => {\n      axios.get('/api/dashboard/customer-activity').then(response => {\n        if (mounted) {\n          setCustomers(response.data.customers);\n        }\n      });\n    }\n\n    fetchCustomers();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader title=\"Customer Activity\" />\n      <Divider />\n      <div className={classes.statsContainer}>\n        <div className={classes.statsItem}>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Registered\n          </Typography>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n          >\n            15,245\n          </Typography>\n        </div>\n        <Divider />\n        <div className={classes.statsItem}>\n          <Typography\n            align=\"center\"\n            component=\"h4\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Online\n          </Typography>\n          <Typography\n            align=\"center\"\n            variant=\"h3\"\n          >\n            357\n          </Typography>\n        </div>\n      </div>\n      <Divider />\n      <CardContent className={classes.content}>\n        <List disablePadding>\n          {customers.map((customer, i) => (\n            <ListItem\n              divider={i < customers.length - 1}\n              key={customer.id}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Customer\"\n                  component={RouterLink}\n                  src={customer.author.avatar}\n                  to=\"/management/customers/1\"\n                >\n                  {getInitials(customer.author.name)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                disableTypography\n                primary={\n                  <Typography\n                    component={RouterLink}\n                    to=\"/management/customers/1\"\n                    variant=\"h6\"\n                  >\n                    {customer.author.name}\n                  </Typography>\n                }\n                secondary={\n                  <Typography variant=\"body2\">\n                    {customer.description} |{' '}\n                    {customer.type === 'payment' && (\n                      <Link\n                        color=\"inherit\"\n                        component={RouterLink}\n                        to=\"#\"\n                      >\n                        See invoice\n                      </Link>\n                    )}\n                  </Typography>\n                }\n              />\n              <Typography\n                className={classes.date}\n                variant=\"body2\"\n              >\n                {moment(customer.created_at).fromNow()}\n              </Typography>\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n    </Card>\n  );\n}\n\nCustomerActivity.propTypes = {\n  className: PropTypes.string\n};\n\nexport default CustomerActivity;\n"]},"metadata":{},"sourceType":"module"}