{"ast":null,"code":"import _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Forms/SimpleForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, TextField, Button, Link, Checkbox, FormHelperText, Typography } from '@material-ui/core';\nvar schema = {\n  email: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    email: true\n  },\n  password: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    }\n  },\n  policy: {\n    presence: {\n      allowEmpty: false,\n      message: 'is required'\n    },\n    checked: true\n  }\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    policy: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    policyCheckbox: {\n      marginLeft: '-14px'\n    },\n    submitButton: {\n      marginTop: theme.spacing(2)\n    }\n  };\n});\n\nfunction SimpleForm(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      formState = _useState2[0],\n      setFormState = _useState2[1];\n\n  var handleChange = function handleChange(event) {\n    event.persist();\n    setFormState(function (prevFormState) {\n      return _objectSpread({}, prevFormState, {\n        values: _objectSpread({}, prevFormState.values, _defineProperty({}, event.target.name, event.target.type === 'checkbox' ? event.target.checked : event.target.value)),\n        touched: _objectSpread({}, prevFormState.touched, _defineProperty({}, event.target.name, true))\n      });\n    });\n  };\n\n  var hasError = function hasError(field) {\n    return !!(formState.touched[field] && formState.errors[field]);\n  };\n\n  useEffect(function () {\n    var errors = validate(formState.values, schema);\n    setFormState(function (prevFormState) {\n      return _objectSpread({}, prevFormState, {\n        isValid: !errors,\n        errors: errors || {}\n      });\n    });\n  }, [formState.values]);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    error: hasError('email'),\n    fullWidth: true,\n    helperText: hasError('email') ? formState.errors.email[0] : null,\n    label: \"Email address\",\n    margin: \"normal\",\n    name: \"email\",\n    onChange: handleChange,\n    value: formState.values.email || '',\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    error: hasError('password'),\n    fullWidth: true,\n    helperText: hasError('password') ? formState.errors.password[0] : null,\n    label: \"Password\",\n    margin: \"normal\",\n    name: \"password\",\n    onChange: handleChange,\n    type: \"password\",\n    value: formState.values.password || '',\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.policy,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: formState.values.policy || false,\n    className: classes.policyCheckbox,\n    color: \"primary\",\n    name: \"policy\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    variant: \"body1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }\n  }, \"I have read the\", ' ', /*#__PURE__*/React.createElement(Link, {\n    color: \"secondary\",\n    component: RouterLink,\n    to: \"#\",\n    underline: \"always\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, \"Terms and Conditions\"))), hasError('policy') && /*#__PURE__*/React.createElement(FormHelperText, {\n    error: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, formState.errors.policy[0]), /*#__PURE__*/React.createElement(Button, {\n    className: classes.submitButton,\n    color: \"secondary\",\n    disabled: !formState.isValid,\n    fullWidth: true,\n    size: \"large\",\n    type: \"submit\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Click to Sign Up\"))));\n}\n\nSimpleForm.propTypes = {\n  className: PropTypes.string\n};\nexport default SimpleForm;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Forms/SimpleForm.js"],"names":["React","useState","useEffect","Link","RouterLink","PropTypes","clsx","validate","makeStyles","Card","CardContent","TextField","Button","Checkbox","FormHelperText","Typography","schema","email","presence","allowEmpty","message","password","policy","checked","useStyles","theme","root","display","alignItems","policyCheckbox","marginLeft","submitButton","marginTop","spacing","SimpleForm","className","rest","classes","isValid","values","touched","errors","formState","setFormState","handleChange","event","persist","prevFormState","target","name","type","value","hasError","field","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport validate from 'validate.js';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  TextField,\n  Button,\n  Link,\n  Checkbox,\n  FormHelperText,\n  Typography,\n} from '@material-ui/core';\n\nconst schema = {\n  email: {\n    presence: { allowEmpty: false, message: 'is required' },\n    email: true\n  },\n  password: {\n    presence: { allowEmpty: false, message: 'is required' }\n  },\n  policy: {\n    presence: { allowEmpty: false, message: 'is required' },\n    checked: true\n  }\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  policy: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  policyCheckbox: {\n    marginLeft: '-14px'\n  },\n  submitButton: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction SimpleForm({ className, ...rest }) {\n  const classes = useStyles();\n  const [formState, setFormState] = useState({\n    isValid: false,\n    values: {},\n    touched: {},\n    errors: {}\n  });\n\n  const handleChange = (event) => {\n    event.persist();\n\n    setFormState((prevFormState) => ({\n      ...prevFormState,\n      values: {\n        ...prevFormState.values,\n        [event.target.name]:\n          event.target.type === 'checkbox'\n            ? event.target.checked\n            : event.target.value\n      },\n      touched: {\n        ...prevFormState.touched,\n        [event.target.name]: true\n      }\n    }));\n  };\n\n  const hasError = (field) => (!!(formState.touched[field] && formState.errors[field]));\n\n  useEffect(() => {\n    const errors = validate(formState.values, schema);\n\n    setFormState((prevFormState) => ({\n      ...prevFormState,\n      isValid: !errors,\n      errors: errors || {}\n    }));\n  }, [formState.values]);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <form autoComplete=\"off\">\n          <TextField\n            error={hasError('email')}\n            fullWidth\n            helperText={hasError('email') ? formState.errors.email[0] : null}\n            label=\"Email address\"\n            margin=\"normal\"\n            name=\"email\"\n            onChange={handleChange}\n            value={formState.values.email || ''}\n            variant=\"outlined\"\n          />\n          <TextField\n            error={hasError('password')}\n            fullWidth\n            helperText={\n              hasError('password') ? formState.errors.password[0] : null\n            }\n            label=\"Password\"\n            margin=\"normal\"\n            name=\"password\"\n            onChange={handleChange}\n            type=\"password\"\n            value={formState.values.password || ''}\n            variant=\"outlined\"\n          />\n          <div className={classes.policy}>\n            <Checkbox\n              checked={formState.values.policy || false}\n              className={classes.policyCheckbox}\n              color=\"primary\"\n              name=\"policy\"\n              onChange={handleChange}\n            />\n            <Typography\n              color=\"textSecondary\"\n              variant=\"body1\"\n            >\n            I have read the\n              {' '}\n              <Link\n                color=\"secondary\"\n                component={RouterLink}\n                to=\"#\"\n                underline=\"always\"\n                variant=\"h6\"\n              >\n              Terms and Conditions\n              </Link>\n            </Typography>\n          </div>\n          {hasError('policy') && (\n            <FormHelperText error>{formState.errors.policy[0]}</FormHelperText>\n          )}\n          <Button\n            className={classes.submitButton}\n            color=\"secondary\"\n            disabled={!formState.isValid}\n            fullWidth\n            size=\"large\"\n            type=\"submit\"\n            variant=\"contained\"\n          >\n            Click to Sign Up\n          </Button>\n        </form>\n      </CardContent>\n    </Card>\n  );\n}\n\nSimpleForm.propTypes = {\n  className: PropTypes.string\n};\n\nexport default SimpleForm;\n"]},"metadata":{},"sourceType":"module"}