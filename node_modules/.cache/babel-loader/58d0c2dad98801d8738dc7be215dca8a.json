{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/components/StackAvatars.js\";\nimport React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Avatar } from '@material-ui/core';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      display: 'flex',\n      paddingLeft: 20\n    },\n    avatar: {\n      border: \"3px solid \".concat(theme.palette.common.white),\n      marginLeft: -20,\n      '&:hover': {\n        zIndex: 2\n      }\n    },\n    more: {\n      backgroundColor: theme.palette.error.main,\n      color: theme.palette.error.contrastText,\n      fontSize: 14,\n      fontWeight: theme.typography.fontWeightMedium\n    }\n  };\n});\n\nfunction StackAvatars(_ref) {\n  var _this = this;\n\n  var avatars = _ref.avatars,\n      limit = _ref.limit,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"avatars\", \"limit\", \"className\"]);\n\n  var classes = useStyles();\n  var avatarNodes = avatars.slice(0, limit).map(function (item) {\n    return /*#__PURE__*/React.createElement(Tooltip, {\n      key: uuid(),\n      title: \"View\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      src: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }));\n  });\n\n  if (avatars.length > limit) {\n    avatarNodes.push( /*#__PURE__*/React.createElement(Tooltip, {\n      key: uuid(),\n      title: \"View\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: clsx(classes.avatar, classes.more),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, \"+\", avatars.length - limit)));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), avatarNodes);\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\nexport default memo(StackAvatars);","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/components/StackAvatars.js"],"names":["React","memo","PropTypes","clsx","uuid","makeStyles","Tooltip","Avatar","useStyles","theme","root","display","paddingLeft","avatar","border","palette","common","white","marginLeft","zIndex","more","backgroundColor","error","main","color","contrastText","fontSize","fontWeight","typography","fontWeightMedium","StackAvatars","avatars","limit","className","rest","classes","avatarNodes","slice","map","item","length","push","propTypes","array","string","number","defaultProps"],"mappings":"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","sourcesContent":["import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport uuid from 'uuid/v1';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Avatar } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    paddingLeft: 20\n  },\n  avatar: {\n    border: `3px solid ${theme.palette.common.white}`,\n    marginLeft: -20,\n    '&:hover': {\n      zIndex: 2\n    }\n  },\n  more: {\n    backgroundColor: theme.palette.error.main,\n    color: theme.palette.error.contrastText,\n    fontSize: 14,\n    fontWeight: theme.typography.fontWeightMedium\n  }\n}));\n\nfunction StackAvatars({\n  avatars, limit, className, ...rest\n}) {\n  const classes = useStyles();\n\n  const avatarNodes = avatars.slice(0, limit).map((item) => (\n    <Tooltip\n      key={uuid()}\n      title=\"View\"\n    >\n      <Avatar\n        className={classes.avatar}\n        src={item}\n      />\n    </Tooltip>\n  ));\n\n  if (avatars.length > limit) {\n    avatarNodes.push(\n      <Tooltip\n        key={uuid()}\n        title=\"View\"\n      >\n        <Avatar className={clsx(classes.avatar, classes.more)}>\n          +\n          {avatars.length - limit}\n        </Avatar>\n      </Tooltip>\n    );\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      {avatarNodes}\n    </div>\n  );\n}\n\nStackAvatars.propTypes = {\n  avatars: PropTypes.array,\n  className: PropTypes.string,\n  limit: PropTypes.number\n};\n\nStackAvatars.defaultProps = {\n  avatars: [],\n  limit: 3\n};\n\nexport default memo(StackAvatars);\n"]},"metadata":{},"sourceType":"module"}