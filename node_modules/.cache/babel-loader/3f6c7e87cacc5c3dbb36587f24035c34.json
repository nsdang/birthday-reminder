{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Profile/Reviews/OverallReviews.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\nimport ReviewStars from 'src/components/ReviewStars';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    stars: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    rating: {\n      marginLeft: theme.spacing(2),\n      fontWeight: theme.typography.fontWeightBold\n    }\n  };\n});\n\nfunction OverallReviews(_ref) {\n  var ratings = _ref.ratings,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"ratings\", \"className\"]);\n\n  var classes = useStyles();\n  var rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce(function (prev, current) {\n      return prev + current;\n    }, 0) / ratings.length;\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    alignItems: \"center\",\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, \"Overall Reviews\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.stars,\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ReviewStars, {\n    value: rating,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.rating,\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, rating)), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.total,\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, ratings.length, ' ', \"reviews in total\")))));\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\nexport default OverallReviews;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Profile/Reviews/OverallReviews.js"],"names":["React","PropTypes","clsx","makeStyles","Card","CardContent","Grid","Typography","ReviewStars","useStyles","theme","root","stars","display","alignItems","rating","marginLeft","spacing","fontWeight","typography","fontWeightBold","OverallReviews","ratings","className","rest","classes","length","reduce","prev","current","total","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardContent,\n  Grid,\n  Typography\n} from '@material-ui/core';\nimport ReviewStars from 'src/components/ReviewStars';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  stars: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  rating: {\n    marginLeft: theme.spacing(2),\n    fontWeight: theme.typography.fontWeightBold\n  }\n}));\n\nfunction OverallReviews({ ratings, className, ...rest }) {\n  const classes = useStyles();\n  let rating = 0;\n\n  if (ratings.length > 0) {\n    rating = ratings.reduce((prev, current) => prev + current, 0) / ratings.length;\n  }\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent>\n        <Grid\n          alignItems=\"center\"\n          container\n          spacing={3}\n        >\n          <Grid item>\n            <Typography variant=\"h5\">Overall Reviews</Typography>\n          </Grid>\n          <Grid\n            className={classes.stars}\n            item\n          >\n            <ReviewStars value={rating} />\n            <Typography\n              className={classes.rating}\n              variant=\"h6\"\n            >\n              {rating}\n            </Typography>\n          </Grid>\n          <Grid item>\n            <Typography\n              className={classes.total}\n              color=\"textSecondary\"\n              variant=\"body2\"\n            >\n              {ratings.length}\n              {' '}\n              reviews in total\n            </Typography>\n          </Grid>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}\n\nOverallReviews.propTypes = {\n  className: PropTypes.string,\n  ratings: PropTypes.array.isRequired\n};\n\nexport default OverallReviews;\n"]},"metadata":{},"sourceType":"module"}