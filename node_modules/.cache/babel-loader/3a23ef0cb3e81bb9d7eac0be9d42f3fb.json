{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectDetails/Header/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, colors } from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Label from 'src/components/Label';\nimport Application from './Application';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    label: {\n      marginTop: theme.spacing(1)\n    },\n    shareButton: {\n      backgroundColor: theme.palette.common.white,\n      marginRight: theme.spacing(2)\n    },\n    shareIcon: {\n      marginRight: theme.spacing(1)\n    },\n    applyButton: {\n      color: theme.palette.common.white,\n      backgroundColor: colors.green[600],\n      '&:hover': {\n        backgroundColor: colors.green[900]\n      }\n    }\n  };\n});\n\nfunction Header(_ref) {\n  var project = _ref.project,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"project\", \"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openApplication = _useState2[0],\n      setOpenApplication = _useState2[1];\n\n  var handleApplicationOpen = function handleApplicationOpen() {\n    setOpenApplication(true);\n  };\n\n  var handleApplicationClose = function handleApplicationClose() {\n    setOpenApplication(false);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    alignItems: \"flex-end\",\n    container: true,\n    justify: \"space-between\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"Browse projects\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    gutterBottom: true,\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }\n  }, project.title), /*#__PURE__*/React.createElement(Label, {\n    className: classes.label,\n    color: colors.green[600],\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 11\n    }\n  }, \"Active project\")), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.shareButton,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ShareIcon, {\n    className: classes.shareIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }), \"Share\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.applyButton,\n    onClick: handleApplicationOpen,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, \"Apply for a role\"))), /*#__PURE__*/React.createElement(Application, {\n    author: project.author,\n    onApply: handleApplicationClose,\n    onClose: handleApplicationClose,\n    open: openApplication,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }));\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\nHeader.defaultProps = {};\nexport default Header;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectDetails/Header/index.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Typography","Grid","Button","colors","ShareIcon","Label","Application","useStyles","theme","root","label","marginTop","spacing","shareButton","backgroundColor","palette","common","white","marginRight","shareIcon","applyButton","color","green","Header","project","className","rest","classes","openApplication","setOpenApplication","handleApplicationOpen","handleApplicationClose","title","author","propTypes","string","object","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n  Grid,\n  Button,\n  colors\n} from '@material-ui/core';\nimport ShareIcon from '@material-ui/icons/Share';\nimport Label from 'src/components/Label';\nimport Application from './Application';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  label: {\n    marginTop: theme.spacing(1)\n  },\n  shareButton: {\n    backgroundColor: theme.palette.common.white,\n    marginRight: theme.spacing(2)\n  },\n  shareIcon: {\n    marginRight: theme.spacing(1)\n  },\n  applyButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  }\n}));\n\nfunction Header({ project, className, ...rest }) {\n  const classes = useStyles();\n  const [openApplication, setOpenApplication] = useState(false);\n\n  const handleApplicationOpen = () => {\n    setOpenApplication(true);\n  };\n\n  const handleApplicationClose = () => {\n    setOpenApplication(false);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        alignItems=\"flex-end\"\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid item>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Browse projects\n          </Typography>\n          <Typography\n            component=\"h1\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            {project.title}\n          </Typography>\n          <Label\n            className={classes.label}\n            color={colors.green[600]}\n            variant=\"outlined\"\n          >\n            Active project\n          </Label>\n        </Grid>\n        <Grid item>\n          <Button\n            className={classes.shareButton}\n            variant=\"contained\"\n          >\n            <ShareIcon className={classes.shareIcon} />\n            Share\n          </Button>\n          <Button\n            className={classes.applyButton}\n            onClick={handleApplicationOpen}\n            variant=\"contained\"\n          >\n            Apply for a role\n          </Button>\n        </Grid>\n      </Grid>\n      <Application\n        author={project.author}\n        onApply={handleApplicationClose}\n        onClose={handleApplicationClose}\n        open={openApplication}\n      />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}