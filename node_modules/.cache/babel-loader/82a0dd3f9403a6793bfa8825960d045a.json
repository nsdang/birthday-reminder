{"ast":null,"code":"import _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/components/RichEditor/EditorToolbar.js\",\n    _this2 = this;\n\n/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Button } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport CodeIcon from '@material-ui/icons/Code';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\nvar useStyles1 = makeStyles(function (theme) {\n  return {\n    root: {},\n    inner: {\n      padding: theme.spacing(1),\n      display: 'flex',\n      alignItems: 'center'\n    }\n  };\n});\nvar useStyles2 = makeStyles(function (theme) {\n  return {\n    button: {\n      padding: 0,\n      width: 32,\n      height: 32,\n      minWidth: 32,\n      color: theme.palette.icon,\n      '& + &': {\n        marginLeft: theme.spacing(1)\n      }\n    },\n    activeButton: {\n      backgroundColor: fade(theme.palette.primary.main, 0.1),\n      color: theme.palette.primary.main\n    }\n  };\n});\nvar BLOCK_TYPES = [{\n  blockType: 'header-one',\n  tooltip: 'Heading 1',\n  text: 'H1'\n}, {\n  blockType: 'header-two',\n  tooltip: 'Heading 2',\n  text: 'H2'\n}, {\n  blockType: 'header-three',\n  tooltip: 'Heading 3',\n  text: 'H3'\n}, {\n  blockType: 'header-four',\n  tooltip: 'Heading 4',\n  text: 'H4'\n}, {\n  blockType: 'header-five',\n  tooltip: 'Heading 5',\n  text: 'H5'\n}, {\n  blockType: 'header-six',\n  tooltip: 'Heading 6',\n  text: 'H6'\n}, {\n  blockType: 'blockquote',\n  tooltip: 'Blockquote',\n  icon: FormatQuoteIcon\n}, {\n  blockType: 'unordered-list-item',\n  tooltip: 'Unordered list',\n  icon: FormatListBulletedIcon\n}, {\n  blockType: 'ordered-list-item',\n  tooltip: 'Ordered list',\n  icon: FormatListNumberedIcon\n}, {\n  blockType: 'code-block',\n  tooltip: 'Code Block',\n  icon: CodeIcon\n}, {\n  blockType: 'left',\n  tooltip: 'Align left',\n  icon: FormatAlignLeftIcon\n}, {\n  blockType: 'center',\n  tooltip: 'Align center',\n  icon: FormatAlignCenterIcon\n}, {\n  blockType: 'right',\n  tooltip: 'Align right',\n  icon: FormatAlignRightIcon\n}, {\n  blockType: 'justify',\n  tooltip: 'Justify',\n  icon: FormatAlignJustifyIcon\n}];\nvar INLINE_STYLES = [{\n  inlineStyle: 'BOLD',\n  tooltip: 'Bold',\n  icon: FormatBoldIcon\n}, {\n  inlineStyle: 'ITALIC',\n  tooltip: 'Italic',\n  icon: FormatItalicIcon\n}, {\n  inlineStyle: 'UNDERLINE',\n  tooltip: 'Underline',\n  icon: FormatUnderlined\n}, {\n  inlineStyle: 'CODE',\n  tooltip: 'Monospace',\n  icon: CodeIcon\n}];\n\nfunction ButtonBase(_ref) {\n  var active = _ref.active,\n      tooltip = _ref.tooltip,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"active\", \"tooltip\", \"children\"]);\n\n  var classes = useStyles2();\n  return /*#__PURE__*/React.createElement(Tooltip, {\n    title: tooltip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Button, Object.assign({}, rest, {\n    className: clsx(classes.button, _defineProperty({}, classes.activeButton, active)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }), children));\n}\n\nButtonBase.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  tooltip: PropTypes.string\n};\n\nfunction BlockTypeButtons(_ref2) {\n  var _this = this;\n\n  var editorState = _ref2.editorState,\n      onToggle = _ref2.onToggle;\n  var selection = editorState.getSelection();\n  var blockType = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getType();\n  var blockData = editorState.getCurrentContent().getBlockForKey(selection.getStartKey()).getData();\n\n  var handleClick = function handleClick(event, value) {\n    event.preventDefault();\n    onToggle('blockType', value);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, BLOCK_TYPES.map(function (button) {\n    var active = false;\n\n    if (['left', 'center', 'right', 'justify'].includes(button.blockType)) {\n      active = blockData.get('text-align') === button.blockType;\n    } else {\n      active = button.blockType === blockType;\n    }\n\n    return /*#__PURE__*/React.createElement(ButtonBase, {\n      active: active,\n      key: button.blockType,\n      onClick: function onClick(event) {\n        return handleClick(event, button.blockType);\n      },\n      tooltip: button.tooltip,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }\n    }, button.icon ? /*#__PURE__*/React.createElement(button.icon, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 28\n      }\n    }) : button.text);\n  }));\n}\n\nBlockTypeButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nvar InlineStyleButtons = function InlineStyleButtons(props) {\n  var editorState = props.editorState,\n      onToggle = props.onToggle;\n\n  var handleClick = function handleClick(event, inlineStyle) {\n    event.preventDefault();\n    onToggle('inlineStyle', inlineStyle);\n  };\n\n  var currentStyle = editorState.getCurrentInlineStyle();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, INLINE_STYLES.map(function (button) {\n    return /*#__PURE__*/React.createElement(ButtonBase, {\n      active: currentStyle.has(button.inlineStyle),\n      key: button.inlineStyle,\n      onClick: function onClick(event) {\n        return handleClick(event, button.inlineStyle);\n      },\n      tooltip: button.tooltip,\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }\n    }, button.icon ? /*#__PURE__*/React.createElement(button.icon, {\n      __self: _this2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 26\n      }\n    }) : button.text);\n  }));\n};\n\nInlineStyleButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nfunction EditorToolbar(_ref3) {\n  var editorState = _ref3.editorState,\n      onToggle = _ref3.onToggle,\n      className = _ref3.className,\n      rest = _objectWithoutProperties(_ref3, [\"editorState\", \"onToggle\", \"className\"]);\n\n  var classes = useStyles1();\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlockTypeButtons, {\n    editorState: editorState,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(InlineStyleButtons, {\n    editorState: editorState,\n    onToggle: onToggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 11\n    }\n  }))));\n}\n\nEditorToolbar.propTypes = {\n  className: PropTypes.string,\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\nexport default EditorToolbar;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/components/RichEditor/EditorToolbar.js"],"names":["React","PropTypes","clsx","PerfectScrollbar","makeStyles","Tooltip","Button","fade","CodeIcon","FormatListBulletedIcon","FormatListNumberedIcon","FormatItalicIcon","FormatBoldIcon","FormatUnderlined","FormatQuoteIcon","FormatAlignLeftIcon","FormatAlignCenterIcon","FormatAlignRightIcon","FormatAlignJustifyIcon","useStyles1","theme","root","inner","padding","spacing","display","alignItems","useStyles2","button","width","height","minWidth","color","palette","icon","marginLeft","activeButton","backgroundColor","primary","main","BLOCK_TYPES","blockType","tooltip","text","INLINE_STYLES","inlineStyle","ButtonBase","active","children","rest","classes","propTypes","bool","node","onClick","func","string","BlockTypeButtons","editorState","onToggle","selection","getSelection","getCurrentContent","getBlockForKey","getStartKey","getType","blockData","getData","handleClick","event","value","preventDefault","map","includes","get","any","isRequired","InlineStyleButtons","props","currentStyle","getCurrentInlineStyle","has","EditorToolbar","className"],"mappings":"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","sourcesContent":["/* eslint-disable react/no-multi-comp */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Tooltip, Button } from '@material-ui/core';\nimport { fade } from '@material-ui/core/styles/colorManipulator';\nimport CodeIcon from '@material-ui/icons/Code';\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\nimport FormatListNumberedIcon from '@material-ui/icons/FormatListNumbered';\nimport FormatItalicIcon from '@material-ui/icons/FormatItalic';\nimport FormatBoldIcon from '@material-ui/icons/FormatBold';\nimport FormatUnderlined from '@material-ui/icons/FormatUnderlined';\nimport FormatQuoteIcon from '@material-ui/icons/FormatQuote';\nimport FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport FormatAlignJustifyIcon from '@material-ui/icons/FormatAlignJustify';\n\nconst useStyles1 = makeStyles((theme) => ({\n  root: {},\n  inner: {\n    padding: theme.spacing(1),\n    display: 'flex',\n    alignItems: 'center'\n  }\n}));\n\nconst useStyles2 = makeStyles((theme) => ({\n  button: {\n    padding: 0,\n    width: 32,\n    height: 32,\n    minWidth: 32,\n    color: theme.palette.icon,\n    '& + &': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  activeButton: {\n    backgroundColor: fade(theme.palette.primary.main, 0.1),\n    color: theme.palette.primary.main\n  }\n}));\n\nconst BLOCK_TYPES = [\n  {\n    blockType: 'header-one',\n    tooltip: 'Heading 1',\n    text: 'H1'\n  },\n  {\n    blockType: 'header-two',\n    tooltip: 'Heading 2',\n    text: 'H2'\n  },\n  {\n    blockType: 'header-three',\n    tooltip: 'Heading 3',\n    text: 'H3'\n  },\n  {\n    blockType: 'header-four',\n    tooltip: 'Heading 4',\n    text: 'H4'\n  },\n  {\n    blockType: 'header-five',\n    tooltip: 'Heading 5',\n    text: 'H5'\n  },\n  {\n    blockType: 'header-six',\n    tooltip: 'Heading 6',\n    text: 'H6'\n  },\n  {\n    blockType: 'blockquote',\n    tooltip: 'Blockquote',\n    icon: FormatQuoteIcon\n  },\n  {\n    blockType: 'unordered-list-item',\n    tooltip: 'Unordered list',\n    icon: FormatListBulletedIcon\n  },\n  {\n    blockType: 'ordered-list-item',\n    tooltip: 'Ordered list',\n    icon: FormatListNumberedIcon\n  },\n  {\n    blockType: 'code-block',\n    tooltip: 'Code Block',\n    icon: CodeIcon\n  },\n  {\n    blockType: 'left',\n    tooltip: 'Align left',\n    icon: FormatAlignLeftIcon\n  },\n  {\n    blockType: 'center',\n    tooltip: 'Align center',\n    icon: FormatAlignCenterIcon\n  },\n  {\n    blockType: 'right',\n    tooltip: 'Align right',\n    icon: FormatAlignRightIcon\n  },\n  {\n    blockType: 'justify',\n    tooltip: 'Justify',\n    icon: FormatAlignJustifyIcon\n  }\n];\n\nconst INLINE_STYLES = [\n  {\n    inlineStyle: 'BOLD',\n    tooltip: 'Bold',\n    icon: FormatBoldIcon\n  },\n  {\n    inlineStyle: 'ITALIC',\n    tooltip: 'Italic',\n    icon: FormatItalicIcon\n  },\n  {\n    inlineStyle: 'UNDERLINE',\n    tooltip: 'Underline',\n    icon: FormatUnderlined\n  },\n  {\n    inlineStyle: 'CODE',\n    tooltip: 'Monospace',\n    icon: CodeIcon\n  }\n];\n\nfunction ButtonBase({\n  active, tooltip, children, ...rest\n}) {\n  const classes = useStyles2();\n\n  return (\n    <Tooltip title={tooltip}>\n      <Button\n        {...rest}\n        className={clsx(classes.button, {\n          [classes.activeButton]: active\n        })}\n      >\n        {children}\n      </Button>\n    </Tooltip>\n  );\n}\n\nButtonBase.propTypes = {\n  active: PropTypes.bool,\n  children: PropTypes.node,\n  onClick: PropTypes.func,\n  tooltip: PropTypes.string\n};\n\nfunction BlockTypeButtons({ editorState, onToggle }) {\n  const selection = editorState.getSelection();\n  const blockType = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getType();\n  const blockData = editorState\n    .getCurrentContent()\n    .getBlockForKey(selection.getStartKey())\n    .getData();\n\n  const handleClick = (event, value) => {\n    event.preventDefault();\n    onToggle('blockType', value);\n  };\n\n  return (\n    <>\n      {BLOCK_TYPES.map((button) => {\n        let active = false;\n\n        if (['left', 'center', 'right', 'justify'].includes(button.blockType)) {\n          active = blockData.get('text-align') === button.blockType;\n        } else {\n          active = button.blockType === blockType;\n        }\n\n        return (\n          <ButtonBase\n            active={active}\n            key={button.blockType}\n            onClick={(event) => handleClick(event, button.blockType)}\n            tooltip={button.tooltip}\n          >\n            {button.icon ? <button.icon /> : button.text}\n          </ButtonBase>\n        );\n      })}\n    </>\n  );\n}\n\nBlockTypeButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nconst InlineStyleButtons = (props) => {\n  const { editorState, onToggle } = props;\n\n  const handleClick = (event, inlineStyle) => {\n    event.preventDefault();\n    onToggle('inlineStyle', inlineStyle);\n  };\n\n  const currentStyle = editorState.getCurrentInlineStyle();\n\n  return (\n    <>\n      {INLINE_STYLES.map((button) => (\n        <ButtonBase\n          active={currentStyle.has(button.inlineStyle)}\n          key={button.inlineStyle}\n          onClick={(event) => handleClick(event, button.inlineStyle)}\n          tooltip={button.tooltip}\n        >\n          {button.icon ? <button.icon /> : button.text}\n        </ButtonBase>\n      ))}\n    </>\n  );\n};\n\nInlineStyleButtons.propTypes = {\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nfunction EditorToolbar({\n  editorState, onToggle, className, ...rest\n}) {\n  const classes = useStyles1();\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <PerfectScrollbar>\n        <div className={classes.inner}>\n          <BlockTypeButtons\n            editorState={editorState}\n            onToggle={onToggle}\n          />\n          <InlineStyleButtons\n            editorState={editorState}\n            onToggle={onToggle}\n          />\n        </div>\n      </PerfectScrollbar>\n    </div>\n  );\n}\n\nEditorToolbar.propTypes = {\n  className: PropTypes.string,\n  editorState: PropTypes.any.isRequired,\n  onToggle: PropTypes.func\n};\n\nexport default EditorToolbar;\n"]},"metadata":{},"sourceType":"module"}