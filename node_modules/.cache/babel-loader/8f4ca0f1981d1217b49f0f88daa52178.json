{"ast":null,"code":"import _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Mail/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport EmailFolders from './EmailFolders';\nimport EmailList from './EmailList';\nimport EmailDetails from './EmailDetails';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100%',\n      display: 'flex',\n      overflow: 'hidden',\n      transition: theme.transitions.create('transform', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      '@media (max-width: 780px)': {\n        '& $emailFolders, & $emailList, & $emailDetails': {\n          flexBasis: '100%',\n          width: '100%',\n          maxWidth: 'none',\n          flexShrink: '0',\n          transition: 'transform .5s ease',\n          transform: 'translateX(0)'\n        }\n      }\n    },\n    openFolder: {\n      '@media (max-width: 780px)': {\n        '& $emailFolders, & $emailList, & $emailDetails': {\n          transform: 'translateX(-100%)'\n        }\n      }\n    },\n    emailFolders: {\n      flexBasis: 280,\n      flexShrink: 0,\n      flexGrow: 0,\n      borderRight: \"1px solid \".concat(theme.palette.divider)\n    },\n    emailList: {\n      flexGrow: 1\n    },\n    emailDetails: {\n      flexGrow: 1\n    }\n  };\n});\n\nfunction Mail() {\n  var _clsx;\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      emails = _useState2[0],\n      setEmails = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openFolder = _useState4[0],\n      setOpenFolder = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedEmail = _useState6[0],\n      setSelectedEmail = _useState6[1];\n\n  var handleFolderOpen = function handleFolderOpen() {\n    setOpenFolder(true);\n    setSelectedEmail(null);\n  };\n\n  var handleFolderClose = function handleFolderClose() {\n    setOpenFolder(false);\n  };\n\n  var handleEmailOpen = function handleEmailOpen() {\n    setSelectedEmail(emails[0]);\n  };\n\n  var handleEmailClose = function handleEmailClose() {\n    setSelectedEmail(null);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchEmails = function fetchEmails() {\n      axios.get('/api/mail').then(function (response) {\n        if (mounted) {\n          setEmails(response.data.emails);\n        }\n      });\n    };\n\n    fetchEmails();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Page, {\n    className: clsx((_clsx = {}, _defineProperty(_clsx, classes.root, true), _defineProperty(_clsx, classes.openFolder, openFolder), _clsx)),\n    title: \"Mail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(EmailFolders, {\n    className: classes.emailFolders,\n    onFolderOpen: handleFolderOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }), selectedEmail ? /*#__PURE__*/React.createElement(EmailDetails, {\n    className: classes.emailDetails,\n    email: selectedEmail,\n    onEmailClose: handleEmailClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(EmailList, {\n    className: classes.emailList,\n    emails: emails,\n    onBack: handleFolderClose,\n    onEmailOpen: handleEmailOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Mail;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Mail/index.js"],"names":["React","useState","useEffect","clsx","makeStyles","axios","Page","EmailFolders","EmailList","EmailDetails","useStyles","theme","root","height","display","overflow","transition","transitions","create","easing","sharp","duration","leavingScreen","flexBasis","width","maxWidth","flexShrink","transform","openFolder","emailFolders","flexGrow","borderRight","palette","divider","emailList","emailDetails","Mail","classes","emails","setEmails","setOpenFolder","selectedEmail","setSelectedEmail","handleFolderOpen","handleFolderClose","handleEmailOpen","handleEmailClose","mounted","fetchEmails","get","then","response","data"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport EmailFolders from './EmailFolders';\nimport EmailList from './EmailList';\nimport EmailDetails from './EmailDetails';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    display: 'flex',\n    overflow: 'hidden',\n    transition: theme.transitions.create('transform', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    '@media (max-width: 780px)': {\n      '& $emailFolders, & $emailList, & $emailDetails': {\n        flexBasis: '100%',\n        width: '100%',\n        maxWidth: 'none',\n        flexShrink: '0',\n        transition: 'transform .5s ease',\n        transform: 'translateX(0)'\n      }\n    }\n  },\n  openFolder: {\n    '@media (max-width: 780px)': {\n      '& $emailFolders, & $emailList, & $emailDetails': {\n        transform: 'translateX(-100%)'\n      }\n    }\n  },\n  emailFolders: {\n    flexBasis: 280,\n    flexShrink: 0,\n    flexGrow: 0,\n    borderRight: `1px solid ${theme.palette.divider}`\n  },\n  emailList: {\n    flexGrow: 1\n  },\n  emailDetails: {\n    flexGrow: 1\n  }\n}));\n\nfunction Mail() {\n  const classes = useStyles();\n  const [emails, setEmails] = useState([]);\n  const [openFolder, setOpenFolder] = useState(false);\n  const [selectedEmail, setSelectedEmail] = useState(null);\n\n  const handleFolderOpen = () => {\n    setOpenFolder(true);\n    setSelectedEmail(null);\n  };\n\n  const handleFolderClose = () => {\n    setOpenFolder(false);\n  };\n\n  const handleEmailOpen = () => {\n    setSelectedEmail(emails[0]);\n  };\n\n  const handleEmailClose = () => {\n    setSelectedEmail(null);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchEmails = () => {\n      axios.get('/api/mail').then((response) => {\n        if (mounted) {\n          setEmails(response.data.emails);\n        }\n      });\n    };\n\n    fetchEmails();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Page\n      className={clsx({\n        [classes.root]: true,\n        [classes.openFolder]: openFolder\n      })}\n      title=\"Mail\"\n    >\n      <EmailFolders\n        className={classes.emailFolders}\n        onFolderOpen={handleFolderOpen}\n      />\n      {selectedEmail ? (\n        <EmailDetails\n          className={classes.emailDetails}\n          email={selectedEmail}\n          onEmailClose={handleEmailClose}\n        />\n      ) : (\n        <EmailList\n          className={classes.emailList}\n          emails={emails}\n          onBack={handleFolderClose}\n          onEmailOpen={handleEmailOpen}\n        />\n      )}\n    </Page>\n  );\n}\n\nexport default Mail;\n"]},"metadata":{},"sourceType":"module"}