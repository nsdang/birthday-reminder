{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/CustomerManagementList/Results.js\";\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Card, CardActions, CardContent, CardHeader, Checkbox, Divider, Button, Link, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport ReviewStars from 'src/components/ReviewStars';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TableEditBar from 'src/components/TableEditBar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    content: {\n      padding: 0\n    },\n    inner: {\n      minWidth: 700\n    },\n    nameCell: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    avatar: {\n      height: 42,\n      width: 42,\n      marginRight: theme.spacing(1)\n    },\n    actions: {\n      padding: theme.spacing(1),\n      justifyContent: 'flex-end'\n    }\n  };\n});\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      customers = _ref.customers,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"customers\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedCustomers = _useState2[0],\n      setSelectedCustomers = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rowsPerPage = _useState6[0],\n      setRowsPerPage = _useState6[1];\n\n  var handleSelectAll = function handleSelectAll(event) {\n    var selectedCustomers = event.target.checked ? customers.map(function (customer) {\n      return customer.id;\n    }) : [];\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  var handleSelectOne = function handleSelectOne(event, id) {\n    var selectedIndex = selectedCustomers.indexOf(id);\n    var newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers.slice(1));\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers.slice(0, selectedIndex), selectedCustomers.slice(selectedIndex + 1));\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  var handleChangePage = function handleChangePage(event, page) {\n    setPage(page);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }, customers.length, ' ', \"Records found. Page\", ' ', page + 1, ' ', \"of\", ' ', Math.ceil(customers.length / rowsPerPage)), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 19\n      }\n    }),\n    title: \"All customers\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedCustomers.length === customers.length,\n    color: \"primary\",\n    indeterminate: selectedCustomers.length > 0 && selectedCustomers.length < customers.length,\n    onChange: handleSelectAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Location\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  }, \"Money spent\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 21\n    }\n  }, \"Type\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }, \"Projects held\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Reviews\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }\n  }, customers.slice(0, rowsPerPage).map(function (customer) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: customer.id,\n      selected: selectedCustomers.indexOf(customer.id) !== -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedCustomers.indexOf(customer.id) !== -1,\n      color: \"primary\",\n      onChange: function onChange(event) {\n        return handleSelectOne(event, customer.id);\n      },\n      value: selectedCustomers.indexOf(customer.id) !== -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.nameCell,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      className: classes.avatar,\n      src: customer.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 27\n      }\n    }, getInitials(customer.name)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      color: \"inherit\",\n      component: RouterLink,\n      to: \"/management/customers/1\",\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, customer.name), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, customer.email)))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 23\n      }\n    }, customer.location), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, customer.currency, customer.spent), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, customer.type), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 23\n      }\n    }, customer.projects), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(ReviewStars, {\n      value: customer.rating,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      component: RouterLink,\n      size: \"small\",\n      to: \"/management/customers/1\",\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, \"View\")));\n  })))))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: customers.length,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableEditBar, {\n    selected: selectedCustomers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }));\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array\n};\nResults.defaultProps = {\n  customers: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/CustomerManagementList/Results.js"],"names":["React","useState","Link","RouterLink","clsx","PropTypes","PerfectScrollbar","makeStyles","Avatar","Card","CardActions","CardContent","CardHeader","Checkbox","Divider","Button","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","getInitials","ReviewStars","GenericMoreButton","TableEditBar","useStyles","theme","root","content","padding","inner","minWidth","nameCell","display","alignItems","avatar","height","width","marginRight","spacing","actions","justifyContent","Results","className","customers","rest","classes","selectedCustomers","setSelectedCustomers","page","setPage","rowsPerPage","setRowsPerPage","handleSelectAll","event","target","checked","map","customer","id","handleSelectOne","selectedIndex","indexOf","newSelectedCustomers","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","Math","ceil","name","email","location","currency","spent","type","projects","rating","propTypes","string","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Button,\n  Link,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nimport ReviewStars from 'src/components/ReviewStars';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TableEditBar from 'src/components/TableEditBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 700\n  },\n  nameCell: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  avatar: {\n    height: 42,\n    width: 42,\n    marginRight: theme.spacing(1)\n  },\n  actions: {\n    padding: theme.spacing(1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nfunction Results({ className, customers, ...rest }) {\n  const classes = useStyles();\n  const [selectedCustomers, setSelectedCustomers] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = (event) => {\n    const selectedCustomers = event.target.checked\n      ? customers.map((customer) => customer.id)\n      : [];\n\n    setSelectedCustomers(selectedCustomers);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedCustomers.indexOf(id);\n    let newSelectedCustomers = [];\n\n    if (selectedIndex === -1) {\n      newSelectedCustomers = newSelectedCustomers.concat(selectedCustomers, id);\n    } else if (selectedIndex === 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(1)\n      );\n    } else if (selectedIndex === selectedCustomers.length - 1) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, -1)\n      );\n    } else if (selectedIndex > 0) {\n      newSelectedCustomers = newSelectedCustomers.concat(\n        selectedCustomers.slice(0, selectedIndex),\n        selectedCustomers.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedCustomers(newSelectedCustomers);\n  };\n\n  const handleChangePage = (event, page) => {\n    setPage(page);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {customers.length}\n        {' '}\n        Records found. Page\n        {' '}\n        {page + 1}\n        {' '}\n        of\n        {' '}\n        {Math.ceil(customers.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"All customers\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedCustomers.length === customers.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedCustomers.length > 0\n                          && selectedCustomers.length < customers.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Name</TableCell>\n                    <TableCell>Location</TableCell>\n                    <TableCell>Money spent</TableCell>\n                    <TableCell>Type</TableCell>\n                    <TableCell>Projects held</TableCell>\n                    <TableCell>Reviews</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {customers.slice(0, rowsPerPage).map((customer) => (\n                    <TableRow\n                      hover\n                      key={customer.id}\n                      selected={selectedCustomers.indexOf(customer.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={\n                            selectedCustomers.indexOf(customer.id) !== -1\n                          }\n                          color=\"primary\"\n                          onChange={(event) => handleSelectOne(event, customer.id)}\n                          value={selectedCustomers.indexOf(customer.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        <div className={classes.nameCell}>\n                          <Avatar\n                            className={classes.avatar}\n                            src={customer.avatar}\n                          >\n                            {getInitials(customer.name)}\n                          </Avatar>\n                          <div>\n                            <Link\n                              color=\"inherit\"\n                              component={RouterLink}\n                              to=\"/management/customers/1\"\n                              variant=\"h6\"\n                            >\n                              {customer.name}\n                            </Link>\n                            <div>{customer.email}</div>\n                          </div>\n                        </div>\n                      </TableCell>\n                      <TableCell>{customer.location}</TableCell>\n                      <TableCell>\n                        {customer.currency}\n                        {customer.spent}\n                      </TableCell>\n                      <TableCell>{customer.type}</TableCell>\n                      <TableCell>{customer.projects}</TableCell>\n                      <TableCell>\n                        <ReviewStars value={customer.rating} />\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/customers/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={customers.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedCustomers} />\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  customers: PropTypes.array\n};\n\nResults.defaultProps = {\n  customers: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}