{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/OrderManagementList/Results.js\";\nimport React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Card, CardActions, CardContent, CardHeader, Checkbox, Divider, Typography, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, colors } from '@material-ui/core';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TableEditBar from 'src/components/TableEditBar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    filterButton: {\n      marginRight: theme.spacing(2)\n    },\n    content: {\n      padding: 0\n    },\n    inner: {\n      minWidth: 1150\n    },\n    actions: {\n      padding: theme.spacing(0, 1),\n      justifyContent: 'flex-end'\n    }\n  };\n});\nvar paymentStatusColors = {\n  canceled: colors.grey[600],\n  pending: colors.orange[600],\n  completed: colors.green[600],\n  rejected: colors.red[600]\n};\n\nfunction Results(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      orders = _ref.orders,\n      rest = _objectWithoutProperties(_ref, [\"className\", \"orders\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedOrders = _useState2[0],\n      setSelectedOrders = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      page = _useState4[0],\n      setPage = _useState4[1];\n\n  var _useState5 = useState(10),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rowsPerPage = _useState6[0],\n      setRowsPerPage = _useState6[1];\n\n  var handleSelectAll = function handleSelectAll(event) {\n    var newSelectedOrders = event.target.checked ? orders.map(function (order) {\n      return order.id;\n    }) : [];\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  var handleSelectOne = function handleSelectOne(event, id) {\n    var selectedIndex = selectedOrders.indexOf(id);\n    var newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, selectedIndex), selectedOrders.slice(selectedIndex + 1));\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(event.target.value);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    color: \"textSecondary\",\n    gutterBottom: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, orders.length, ' ', \"Records found. Page\", ' ', page + 1, ' ', \"of\", ' ', Math.ceil(orders.length / rowsPerPage)), /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 19\n      }\n    }),\n    title: \"Orders\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    padding: \"checkbox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Checkbox, {\n    checked: selectedOrders.length === orders.length,\n    color: \"primary\",\n    indeterminate: selectedOrders.length > 0 && selectedOrders.length < orders.length,\n    onChange: handleSelectAll,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 23\n    }\n  })), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, \"Ref\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"Customer\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, \"Method\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }, \"Total\"), /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 21\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, orders.slice(0, rowsPerPage).map(function (order) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      key: order.id,\n      selected: selectedOrders.indexOf(order.id) !== -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      padding: \"checkbox\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      checked: selectedOrders.indexOf(order.id) !== -1,\n      color: \"primary\",\n      onChange: function onChange(event) {\n        return handleSelectOne(event, order.id);\n      },\n      value: selectedOrders.indexOf(order.id) !== -1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, order.payment.ref, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }\n    }, moment(order.created_at).format('DD MMM YYYY | hh:mm'))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 23\n      }\n    }, order.customer.name), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, order.payment.method), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 23\n      }\n    }, order.payment.currency, order.payment.total), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Label, {\n      color: paymentStatusColors[order.payment.status],\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 25\n      }\n    }, order.payment.status)), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"right\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      color: \"primary\",\n      component: RouterLink,\n      size: \"small\",\n      to: \"/management/orders/1\",\n      variant: \"outlined\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, \"View\")));\n  })))))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TablePagination, {\n    component: \"div\",\n    count: orders.length,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    page: page,\n    rowsPerPage: rowsPerPage,\n    rowsPerPageOptions: [5, 10, 25],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(TableEditBar, {\n    selected: selectedOrders,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }));\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array\n};\nResults.defaultProps = {\n  orders: []\n};\nexport default Results;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/OrderManagementList/Results.js"],"names":["React","useState","Link","RouterLink","clsx","moment","PropTypes","PerfectScrollbar","makeStyles","Button","Card","CardActions","CardContent","CardHeader","Checkbox","Divider","Typography","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","colors","Label","GenericMoreButton","TableEditBar","useStyles","theme","root","filterButton","marginRight","spacing","content","padding","inner","minWidth","actions","justifyContent","paymentStatusColors","canceled","grey","pending","orange","completed","green","rejected","red","Results","className","orders","rest","classes","selectedOrders","setSelectedOrders","page","setPage","rowsPerPage","setRowsPerPage","handleSelectAll","event","newSelectedOrders","target","checked","map","order","id","handleSelectOne","selectedIndex","indexOf","concat","slice","length","handleChangePage","newPage","handleChangeRowsPerPage","value","Math","ceil","payment","ref","created_at","format","customer","name","method","currency","total","status","propTypes","string","array","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  Checkbox,\n  Divider,\n  Typography,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  colors\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TableEditBar from 'src/components/TableEditBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  filterButton: {\n    marginRight: theme.spacing(2)\n  },\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 1150\n  },\n  actions: {\n    padding: theme.spacing(0, 1),\n    justifyContent: 'flex-end'\n  }\n}));\n\nconst paymentStatusColors = {\n  canceled: colors.grey[600],\n  pending: colors.orange[600],\n  completed: colors.green[600],\n  rejected: colors.red[600]\n};\n\nfunction Results({ className, orders, ...rest }) {\n  const classes = useStyles();\n  const [selectedOrders, setSelectedOrders] = useState([]);\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(10);\n\n  const handleSelectAll = (event) => {\n    const newSelectedOrders = event.target.checked\n      ? orders.map((order) => order.id)\n      : [];\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleSelectOne = (event, id) => {\n    const selectedIndex = selectedOrders.indexOf(id);\n    let newSelectedOrders = [];\n\n    if (selectedIndex === -1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders, id);\n    } else if (selectedIndex === 0) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(1));\n    } else if (selectedIndex === selectedOrders.length - 1) {\n      newSelectedOrders = newSelectedOrders.concat(selectedOrders.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelectedOrders = newSelectedOrders.concat(\n        selectedOrders.slice(0, selectedIndex),\n        selectedOrders.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelectedOrders(newSelectedOrders);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(event.target.value);\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Typography\n        color=\"textSecondary\"\n        gutterBottom\n        variant=\"body2\"\n      >\n        {orders.length}\n        {' '}\n        Records found. Page\n        {' '}\n        {page + 1}\n        {' '}\n        of\n        {' '}\n        {Math.ceil(orders.length / rowsPerPage)}\n      </Typography>\n      <Card>\n        <CardHeader\n          action={<GenericMoreButton />}\n          title=\"Orders\"\n        />\n        <Divider />\n        <CardContent className={classes.content}>\n          <PerfectScrollbar>\n            <div className={classes.inner}>\n              <Table>\n                <TableHead>\n                  <TableRow>\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={selectedOrders.length === orders.length}\n                        color=\"primary\"\n                        indeterminate={\n                          selectedOrders.length > 0\n                          && selectedOrders.length < orders.length\n                        }\n                        onChange={handleSelectAll}\n                      />\n                    </TableCell>\n                    <TableCell>Ref</TableCell>\n                    <TableCell>Customer</TableCell>\n                    <TableCell>Method</TableCell>\n                    <TableCell>Total</TableCell>\n                    <TableCell>Status</TableCell>\n                    <TableCell align=\"right\">Actions</TableCell>\n                  </TableRow>\n                </TableHead>\n                <TableBody>\n                  {orders.slice(0, rowsPerPage).map((order) => (\n                    <TableRow\n                      key={order.id}\n                      selected={selectedOrders.indexOf(order.id) !== -1}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={selectedOrders.indexOf(order.id) !== -1}\n                          color=\"primary\"\n                          onChange={(event) => handleSelectOne(event, order.id)}\n                          value={selectedOrders.indexOf(order.id) !== -1}\n                        />\n                      </TableCell>\n                      <TableCell>\n                        {order.payment.ref}\n                        <Typography variant=\"body2\">\n                          {moment(order.created_at).format(\n                            'DD MMM YYYY | hh:mm'\n                          )}\n                        </Typography>\n                      </TableCell>\n\n                      <TableCell>{order.customer.name}</TableCell>\n                      <TableCell>{order.payment.method}</TableCell>\n                      <TableCell>\n                        {order.payment.currency}\n                        {order.payment.total}\n                      </TableCell>\n                      <TableCell>\n                        <Label\n                          color={paymentStatusColors[order.payment.status]}\n                          variant=\"outlined\"\n                        >\n                          {order.payment.status}\n                        </Label>\n                      </TableCell>\n                      <TableCell align=\"right\">\n                        <Button\n                          color=\"primary\"\n                          component={RouterLink}\n                          size=\"small\"\n                          to=\"/management/orders/1\"\n                          variant=\"outlined\"\n                        >\n                          View\n                        </Button>\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          </PerfectScrollbar>\n        </CardContent>\n        <CardActions className={classes.actions}>\n          <TablePagination\n            component=\"div\"\n            count={orders.length}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n            page={page}\n            rowsPerPage={rowsPerPage}\n            rowsPerPageOptions={[5, 10, 25]}\n          />\n        </CardActions>\n      </Card>\n      <TableEditBar selected={selectedOrders} />\n    </div>\n  );\n}\n\nResults.propTypes = {\n  className: PropTypes.string,\n  orders: PropTypes.array\n};\n\nResults.defaultProps = {\n  orders: []\n};\n\nexport default Results;\n"]},"metadata":{},"sourceType":"module"}