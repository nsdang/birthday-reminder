{"ast":null,"code":"import _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Chat/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport ConversationList from './ConversationList';\nimport ConversationDetails from './ConversationDetails';\nimport ConversationPlaceholder from './ConversationPlaceholder';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100%',\n      cursor: 'pointer',\n      display: 'flex',\n      overflow: 'hidden',\n      '@media (max-width: 863px)': {\n        '& $conversationList, & $conversationDetails': {\n          flexBasis: '100%',\n          width: '100%',\n          maxWidth: 'none',\n          flexShrink: '0',\n          transform: 'translateX(0)'\n        }\n      }\n    },\n    openConversion: {\n      '@media (max-width: 863px)': {\n        '& $conversationList, & $conversationDetails': {\n          transform: 'translateX(-100%)'\n        }\n      }\n    },\n    conversationList: {\n      width: 300,\n      flexBasis: 300,\n      flexShrink: 0,\n      '@media (min-width: 864px)': {\n        borderRight: \"1px solid \".concat(theme.palette.divider)\n      }\n    },\n    conversationDetails: {\n      flexGrow: 1\n    },\n    conversationPlaceholder: {\n      flexGrow: 1\n    }\n  };\n});\n\nfunction Chat() {\n  var _clsx;\n\n  var classes = useStyles();\n  var params = useParams();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      conversations = _useState2[0],\n      setConversations = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchConversations = function fetchConversations() {\n      axios.get('/api/chat/conversations').then(function (response) {\n        if (mounted) {\n          setConversations(response.data.conversations);\n        }\n      });\n    };\n\n    fetchConversations();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  var selectedConversation;\n\n  if (params.id) {\n    selectedConversation = conversations.find(function (c) {\n      return c.id === params.id;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Page, {\n    className: clsx((_clsx = {}, _defineProperty(_clsx, classes.root, true), _defineProperty(_clsx, classes.openConversion, selectedConversation), _clsx)),\n    title: \"Chat\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(ConversationList, {\n    className: classes.conversationList,\n    conversations: conversations,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }), selectedConversation ? /*#__PURE__*/React.createElement(ConversationDetails, {\n    className: classes.conversationDetails,\n    conversation: selectedConversation,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }\n  }) : /*#__PURE__*/React.createElement(ConversationPlaceholder, {\n    className: classes.conversationPlaceholder,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }\n  }));\n}\n\nexport default Chat;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Chat/index.js"],"names":["React","useState","useEffect","useParams","clsx","makeStyles","axios","Page","ConversationList","ConversationDetails","ConversationPlaceholder","useStyles","theme","root","height","cursor","display","overflow","flexBasis","width","maxWidth","flexShrink","transform","openConversion","conversationList","borderRight","palette","divider","conversationDetails","flexGrow","conversationPlaceholder","Chat","classes","params","conversations","setConversations","mounted","fetchConversations","get","then","response","data","selectedConversation","id","find","c"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport axios from 'src/utils/axios';\nimport Page from 'src/components/Page';\nimport ConversationList from './ConversationList';\nimport ConversationDetails from './ConversationDetails';\nimport ConversationPlaceholder from './ConversationPlaceholder';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    cursor: 'pointer',\n    display: 'flex',\n    overflow: 'hidden',\n    '@media (max-width: 863px)': {\n      '& $conversationList, & $conversationDetails': {\n        flexBasis: '100%',\n        width: '100%',\n        maxWidth: 'none',\n        flexShrink: '0',\n        transform: 'translateX(0)'\n      }\n    }\n  },\n  openConversion: {\n    '@media (max-width: 863px)': {\n      '& $conversationList, & $conversationDetails': {\n        transform: 'translateX(-100%)'\n      }\n    }\n  },\n  conversationList: {\n    width: 300,\n    flexBasis: 300,\n    flexShrink: 0,\n    '@media (min-width: 864px)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  },\n  conversationDetails: {\n    flexGrow: 1\n  },\n  conversationPlaceholder: {\n    flexGrow: 1\n  }\n}));\n\nfunction Chat() {\n  const classes = useStyles();\n  const params = useParams();\n  const [conversations, setConversations] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchConversations = () => {\n      axios.get('/api/chat/conversations').then((response) => {\n        if (mounted) {\n          setConversations(response.data.conversations);\n        }\n      });\n    };\n\n    fetchConversations();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  let selectedConversation;\n\n  if (params.id) {\n    selectedConversation = conversations.find(\n      (c) => c.id === params.id\n    );\n  }\n\n  return (\n    <Page\n      className={clsx({\n        [classes.root]: true,\n        [classes.openConversion]: selectedConversation\n      })}\n      title=\"Chat\"\n    >\n      <ConversationList\n        className={classes.conversationList}\n        conversations={conversations}\n      />\n      {selectedConversation ? (\n        <ConversationDetails\n          className={classes.conversationDetails}\n          conversation={selectedConversation}\n        />\n      ) : (\n        <ConversationPlaceholder className={classes.conversationPlaceholder} />\n      )}\n    </Page>\n  );\n}\n\nexport default Chat;\n"]},"metadata":{},"sourceType":"module"}