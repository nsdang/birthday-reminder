{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardDefault/TeamTasks/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, List, Button, Divider } from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TaskItem from './TaskItem';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    content: {\n      padding: 0\n    },\n    inner: {\n      minWidth: 400\n    },\n    actions: {\n      justifyContent: 'flex-end'\n    },\n    arrowForwardIcon: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n});\n\nfunction TeamTasks(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      tasks = _useState2[0],\n      setTasks = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchTasks = function fetchTasks() {\n      axios.get('/api/tasks').then(function (response) {\n        if (mounted) {\n          setTasks(response.data.tasks);\n        }\n      });\n    };\n\n    fetchTasks();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }),\n    title: \"Team Tasks\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, tasks.map(function (task, i) {\n    return /*#__PURE__*/React.createElement(TaskItem, {\n      divider: i < tasks.length - 1,\n      key: task.id,\n      task: task,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }\n    });\n  }))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    component: RouterLink,\n    size: \"small\",\n    to: \"/kanban-board\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"See all\", /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    className: classes.arrowForwardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }))));\n}\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\nexport default TeamTasks;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardDefault/TeamTasks/index.js"],"names":["React","useState","useEffect","Link","RouterLink","clsx","PropTypes","PerfectScrollbar","makeStyles","Card","CardActions","CardHeader","CardContent","List","Button","Divider","ArrowForwardIcon","axios","GenericMoreButton","TaskItem","useStyles","theme","root","content","padding","inner","minWidth","actions","justifyContent","arrowForwardIcon","marginLeft","spacing","TeamTasks","className","rest","classes","tasks","setTasks","mounted","fetchTasks","get","then","response","data","map","task","i","length","id","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  List,\n  Button,\n  Divider\n} from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport TaskItem from './TaskItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0\n  },\n  inner: {\n    minWidth: 400\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  arrowForwardIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction TeamTasks({ className, ...rest }) {\n  const classes = useStyles();\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchTasks = () => {\n      axios.get('/api/tasks').then((response) => {\n        if (mounted) {\n          setTasks(response.data.tasks);\n        }\n      });\n    };\n\n    fetchTasks();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Team Tasks\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <List>\n              {tasks.map((task, i) => (\n                <TaskItem\n                  divider={i < tasks.length - 1}\n                  key={task.id}\n                  task={task}\n                />\n              ))}\n            </List>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          size=\"small\"\n          to=\"/kanban-board\"\n          variant=\"text\"\n        >\n          See all\n          <ArrowForwardIcon className={classes.arrowForwardIcon} />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nTeamTasks.propTypes = {\n  className: PropTypes.string\n};\n\nexport default TeamTasks;\n"]},"metadata":{},"sourceType":"module"}