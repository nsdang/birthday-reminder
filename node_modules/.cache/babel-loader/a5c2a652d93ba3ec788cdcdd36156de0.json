{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectManagementList/ProjectCard.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Card, CardContent, Link, Typography, colors } from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nvar useStyles = makeStyles(function (theme) {\n  var _content;\n\n  return {\n    root: {\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      marginBottom: theme.spacing(2)\n    },\n    content: (_content = {\n      padding: theme.spacing(2),\n      flexGrow: 1,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'space-between'\n    }, _defineProperty(_content, theme.breakpoints.down('sm'), {\n      width: '100%',\n      flexWrap: 'wrap'\n    }), _defineProperty(_content, '&:last-child', {\n      paddingBottom: theme.spacing(2)\n    }), _content),\n    header: _defineProperty({\n      maxWidth: '100%',\n      width: 240,\n      display: 'flex'\n    }, theme.breakpoints.down('sm'), {\n      marginBottom: theme.spacing(2),\n      flexBasis: '100%'\n    }),\n    avatar: {\n      marginRight: theme.spacing(2)\n    },\n    stats: _defineProperty({\n      padding: theme.spacing(1)\n    }, theme.breakpoints.down('sm'), {\n      flexBasis: '50%'\n    }),\n    actions: _defineProperty({\n      padding: theme.spacing(1)\n    }, theme.breakpoints.down('sm'), {\n      flexBasis: '50%'\n    })\n  };\n});\n\nfunction ProjectCard(_ref) {\n  var project = _ref.project,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"project\", \"className\"]);\n\n  var classes = useStyles();\n  var statusColors = {\n    'In progress': colors.orange[600],\n    Canceled: colors.grey[600],\n    Completed: colors.green[600]\n  };\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.header,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Author\",\n    className: classes.avatar,\n    src: project.author.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, getInitials(project.author.name)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    color: \"textPrimary\",\n    component: RouterLink,\n    noWrap: true,\n    to: \"#\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, project.title), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, \"by\", ' ', /*#__PURE__*/React.createElement(Link, {\n    color: \"textPrimary\",\n    component: RouterLink,\n    to: \"/management/customers/1\",\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, project.author.name)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, project.currency, project.price), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }, \"Project price\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 11\n    }\n  }, project.members), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, \"Team members\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, moment(project.start_date).format('DD MMMM YYYY')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, \"Project started\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, moment(project.end_date).format('DD MMMM YYYY')), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, \"Project deadline\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    style: {\n      color: statusColors[project.status]\n    },\n    variant: \"h6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 11\n    }\n  }, project.status), /*#__PURE__*/React.createElement(Typography, {\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"Project status\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    size: \"small\",\n    variant: \"outlined\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 11\n    }\n  }, \"View\"))));\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\nexport default ProjectCard;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectManagementList/ProjectCard.js"],"names":["React","Link","RouterLink","PropTypes","clsx","moment","makeStyles","Avatar","Button","Card","CardContent","Typography","colors","getInitials","useStyles","theme","root","display","alignItems","flexWrap","marginBottom","spacing","content","padding","flexGrow","justifyContent","breakpoints","down","width","paddingBottom","header","maxWidth","flexBasis","avatar","marginRight","stats","actions","ProjectCard","project","className","rest","classes","statusColors","orange","Canceled","grey","Completed","green","author","name","title","currency","price","members","start_date","format","end_date","color","status","propTypes","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardContent,\n  Link,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    marginBottom: theme.spacing(2)\n  },\n  content: {\n    padding: theme.spacing(2),\n    flexGrow: 1,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-between',\n    [theme.breakpoints.down('sm')]: {\n      width: '100%',\n      flexWrap: 'wrap'\n    },\n    '&:last-child': {\n      paddingBottom: theme.spacing(2)\n    }\n  },\n  header: {\n    maxWidth: '100%',\n    width: 240,\n    display: 'flex',\n    [theme.breakpoints.down('sm')]: {\n      marginBottom: theme.spacing(2),\n      flexBasis: '100%'\n    }\n  },\n  avatar: {\n    marginRight: theme.spacing(2)\n  },\n  stats: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  },\n  actions: {\n    padding: theme.spacing(1),\n    [theme.breakpoints.down('sm')]: {\n      flexBasis: '50%'\n    }\n  }\n}));\n\nfunction ProjectCard({ project, className, ...rest }) {\n  const classes = useStyles();\n\n  const statusColors = {\n    'In progress': colors.orange[600],\n    Canceled: colors.grey[600],\n    Completed: colors.green[600]\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardContent className={classes.content}>\n        <div className={classes.header}>\n          <Avatar\n            alt=\"Author\"\n            className={classes.avatar}\n            src={project.author.avatar}\n          >\n            {getInitials(project.author.name)}\n          </Avatar>\n          <div>\n            <Link\n              color=\"textPrimary\"\n              component={RouterLink}\n              noWrap\n              to=\"#\"\n              variant=\"h5\"\n            >\n              {project.title}\n            </Link>\n            <Typography variant=\"body2\">\n              by\n              {' '}\n              <Link\n                color=\"textPrimary\"\n                component={RouterLink}\n                to=\"/management/customers/1\"\n                variant=\"h6\"\n              >\n                {project.author.name}\n              </Link>\n            </Typography>\n          </div>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {project.currency}\n            {project.price}\n          </Typography>\n          <Typography variant=\"body2\">Project price</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">{project.members}</Typography>\n          <Typography variant=\"body2\">Team members</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {moment(project.start_date).format('DD MMMM YYYY')}\n          </Typography>\n          <Typography variant=\"body2\">Project started</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography variant=\"h6\">\n            {moment(project.end_date).format('DD MMMM YYYY')}\n          </Typography>\n          <Typography variant=\"body2\">Project deadline</Typography>\n        </div>\n        <div className={classes.stats}>\n          <Typography\n            style={{ color: statusColors[project.status] }}\n            variant=\"h6\"\n          >\n            {project.status}\n          </Typography>\n          <Typography variant=\"body2\">Project status</Typography>\n        </div>\n        <div className={classes.actions}>\n          <Button\n            color=\"primary\"\n            size=\"small\"\n            variant=\"outlined\"\n          >\n            View\n          </Button>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nProjectCard.propTypes = {\n  className: PropTypes.string,\n  project: PropTypes.object.isRequired\n};\n\nexport default ProjectCard;\n"]},"metadata":{},"sourceType":"module"}