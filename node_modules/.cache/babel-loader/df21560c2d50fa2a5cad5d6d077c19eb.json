{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/layouts/Dashboard/TopBar.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Badge, Button, IconButton, Toolbar, Hidden, Input, colors, Popper, Paper, List, ListItem, ListItemIcon, ListItemText, ClickAwayListener } from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutline';\nimport InputIcon from '@material-ui/icons/Input'; // import MenuIcon from '@material-ui/icons/Menu';\n\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'src/utils/axios';\nimport NotificationsPopover from 'src/components/NotificationsPopover';\nimport PricingModal from 'src/components/PricingModal';\nimport { logout } from 'src/actions';\nimport ChatBar from './ChatBar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      boxShadow: 'none'\n    },\n    flexGrow: {\n      flexGrow: 1\n    },\n    search: {\n      backgroundColor: 'rgba(255,255,255, 0.1)',\n      borderRadius: 4,\n      flexBasis: 300,\n      height: 36,\n      padding: theme.spacing(0, 2),\n      display: 'flex',\n      alignItems: 'center'\n    },\n    searchIcon: {\n      marginRight: theme.spacing(2),\n      color: 'inherit'\n    },\n    searchInput: {\n      flexGrow: 1,\n      color: 'inherit',\n      '& input::placeholder': {\n        opacity: 1,\n        color: 'inherit'\n      }\n    },\n    searchPopper: {\n      zIndex: theme.zIndex.appBar + 100\n    },\n    searchPopperContent: {\n      marginTop: theme.spacing(1)\n    },\n    trialButton: {\n      marginLeft: theme.spacing(2),\n      color: theme.palette.common.white,\n      backgroundColor: colors.green[600],\n      '&:hover': {\n        backgroundColor: colors.green[900]\n      }\n    },\n    trialIcon: {\n      marginRight: theme.spacing(1)\n    },\n    menuButton: {\n      marginRight: theme.spacing(1)\n    },\n    chatButton: {\n      marginLeft: theme.spacing(1)\n    },\n    notificationsButton: {\n      marginLeft: theme.spacing(1)\n    },\n    notificationsBadge: {\n      backgroundColor: colors.orange[600]\n    },\n    logoutButton: {\n      marginLeft: theme.spacing(1)\n    },\n    logoutIcon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\nvar popularSearches = ['Devias React Dashboard', 'Devias', 'Admin Pannel', 'Project', 'Pages'];\n\nfunction TopBar(_ref) {\n  var onOpenNavBarMobile = _ref.onOpenNavBarMobile,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"onOpenNavBarMobile\", \"className\"]);\n\n  var classes = useStyles();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var notificationsRef = useRef(null);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openNotifications = _useState4[0],\n      setOpenNotifications = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openChatBar = _useState6[0],\n      setOpenChatBar = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      pricingModalOpen = _useState8[0],\n      setPricingModalOpen = _useState8[1];\n\n  var handleLogout = function handleLogout() {\n    history.push('/auth/login'); // dispatch(logout());\n  };\n\n  var handleChatBarOpen = function handleChatBarOpen() {\n    setOpenChatBar(true);\n  };\n\n  var handleChatBarClose = function handleChatBarClose() {\n    setOpenChatBar(false);\n  };\n\n  var handleNotificationsOpen = function handleNotificationsOpen() {\n    setOpenNotifications(true);\n  };\n\n  var handleNotificationsClose = function handleNotificationsClose() {\n    setOpenNotifications(false);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchNotifications = function fetchNotifications() {// Fetch data from server\n    };\n\n    fetchNotifications();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(AppBar, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexGrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.chatButton,\n    color: \"inherit\",\n    onClick: handleChatBarOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: 6,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PeopleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.notificationsButton,\n    color: \"inherit\",\n    onClick: handleNotificationsOpen,\n    ref: notificationsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: notifications.length,\n    classes: {\n      badge: classes.notificationsBadge\n    },\n    variant: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: classes.logoutButton,\n    color: \"inherit\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputIcon, {\n    className: classes.logoutIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }), \"Sign out\"))), /*#__PURE__*/React.createElement(NotificationsPopover, {\n    anchorEl: notificationsRef.current,\n    notifications: notifications,\n    onClose: handleNotificationsClose,\n    open: openNotifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ChatBar, {\n    onClose: handleChatBarClose,\n    open: openChatBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 7\n    }\n  }));\n}\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onOpenNavBarMobile: PropTypes.func\n};\nexport default TopBar;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/layouts/Dashboard/TopBar.js"],"names":["React","useState","useRef","useEffect","Link","RouterLink","useHistory","PropTypes","clsx","useDispatch","makeStyles","AppBar","Badge","Button","IconButton","Toolbar","Hidden","Input","colors","Popper","Paper","List","ListItem","ListItemIcon","ListItemText","ClickAwayListener","LockIcon","NotificationsIcon","PeopleIcon","InputIcon","SearchIcon","axios","NotificationsPopover","PricingModal","logout","ChatBar","useStyles","theme","root","boxShadow","flexGrow","search","backgroundColor","borderRadius","flexBasis","height","padding","spacing","display","alignItems","searchIcon","marginRight","color","searchInput","opacity","searchPopper","zIndex","appBar","searchPopperContent","marginTop","trialButton","marginLeft","palette","common","white","green","trialIcon","menuButton","chatButton","notificationsButton","notificationsBadge","orange","logoutButton","logoutIcon","popularSearches","TopBar","onOpenNavBarMobile","className","rest","classes","history","dispatch","notificationsRef","notifications","setNotifications","openNotifications","setOpenNotifications","openChatBar","setOpenChatBar","pricingModalOpen","setPricingModalOpen","handleLogout","push","handleChatBarOpen","handleChatBarClose","handleNotificationsOpen","handleNotificationsClose","mounted","fetchNotifications","length","badge","current","propTypes","string","func"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  AppBar,\n  Badge,\n  Button,\n  IconButton,\n  Toolbar,\n  Hidden,\n  Input,\n  colors,\n  Popper,\n  Paper,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ClickAwayListener\n} from '@material-ui/core';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutline';\nimport InputIcon from '@material-ui/icons/Input';\n// import MenuIcon from '@material-ui/icons/Menu';\nimport SearchIcon from '@material-ui/icons/Search';\nimport axios from 'src/utils/axios';\nimport NotificationsPopover from 'src/components/NotificationsPopover';\nimport PricingModal from 'src/components/PricingModal';\nimport { logout } from 'src/actions';\nimport ChatBar from './ChatBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: 'none',\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  search: {\n    backgroundColor: 'rgba(255,255,255, 0.1)',\n    borderRadius: 4,\n    flexBasis: 300,\n    height: 36,\n    padding: theme.spacing(0, 2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    marginRight: theme.spacing(2),\n    color: 'inherit'\n  },\n  searchInput: {\n    flexGrow: 1,\n    color: 'inherit',\n    '& input::placeholder': {\n      opacity: 1,\n      color: 'inherit'\n    }\n  },\n  searchPopper: {\n    zIndex: theme.zIndex.appBar + 100\n  },\n  searchPopperContent: {\n    marginTop: theme.spacing(1)\n  },\n  trialButton: {\n    marginLeft: theme.spacing(2),\n    color: theme.palette.common.white,\n    backgroundColor: colors.green[600],\n    '&:hover': {\n      backgroundColor: colors.green[900]\n    }\n  },\n  trialIcon: {\n    marginRight: theme.spacing(1)\n  },\n  menuButton: {\n    marginRight: theme.spacing(1)\n  },\n  chatButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsBadge: {\n    backgroundColor: colors.orange[600]\n  },\n  logoutButton: {\n    marginLeft: theme.spacing(1)\n  },\n  logoutIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nconst popularSearches = [\n  'Devias React Dashboard',\n  'Devias',\n  'Admin Pannel',\n  'Project',\n  'Pages'\n];\n\nfunction TopBar({\n  onOpenNavBarMobile,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const notificationsRef = useRef(null);\n  const [notifications, setNotifications] = useState([]);\n  const [openNotifications, setOpenNotifications] = useState(false);\n  const [openChatBar, setOpenChatBar] = useState(false);\n  const [pricingModalOpen, setPricingModalOpen] = useState(false);\n\n  const handleLogout = () => {\n    history.push('/auth/login');\n    // dispatch(logout());\n  };\n\n  const handleChatBarOpen = () => {\n    setOpenChatBar(true);\n  };\n\n  const handleChatBarClose = () => {\n    setOpenChatBar(false);\n  };\n\n  const handleNotificationsOpen = () => {\n    setOpenNotifications(true);\n  };\n\n  const handleNotificationsClose = () => {\n    setOpenNotifications(false);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchNotifications = () => {\n      // Fetch data from server\n    };\n\n    fetchNotifications();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n    >\n      <Toolbar>\n        {/* <Hidden lgUp>\n          <IconButton\n            className={classes.menuButton}\n            color=\"inherit\"\n            onClick={onOpenNavBarMobile}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden> */}\n        <div className={classes.flexGrow} />\n        <IconButton\n          className={classes.chatButton}\n          color=\"inherit\"\n          onClick={handleChatBarOpen}\n        >\n          <Badge\n            badgeContent={6}\n            color=\"secondary\"\n          >\n            <PeopleIcon />\n          </Badge>\n        </IconButton>\n        <Hidden mdDown>\n          <IconButton\n            className={classes.notificationsButton}\n            color=\"inherit\"\n            onClick={handleNotificationsOpen}\n            ref={notificationsRef}\n          >\n            <Badge\n              badgeContent={notifications.length}\n              classes={{ badge: classes.notificationsBadge }}\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <Button\n            className={classes.logoutButton}\n            color=\"inherit\"\n            onClick={handleLogout}\n          >\n            <InputIcon className={classes.logoutIcon} />\n            Sign out\n          </Button>\n        </Hidden>\n      </Toolbar>\n      <NotificationsPopover\n        anchorEl={notificationsRef.current}\n        notifications={notifications}\n        onClose={handleNotificationsClose}\n        open={openNotifications}\n      />\n      {/* <PricingModal\n        onClose={handlePricingModalClose}\n        open={pricingModalOpen}\n      /> */}\n      <ChatBar\n        onClose={handleChatBarClose}\n        open={openChatBar}\n      />\n    </AppBar>\n  );\n}\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onOpenNavBarMobile: PropTypes.func\n};\n\nexport default TopBar;\n"]},"metadata":{},"sourceType":"module"}