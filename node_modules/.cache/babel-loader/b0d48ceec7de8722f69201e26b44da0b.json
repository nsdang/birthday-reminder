{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Profile/Header.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Container, Avatar, Typography, Button, Hidden, IconButton, Snackbar, Tooltip, colors } from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ChatIcon from '@material-ui/icons/ChatOutlined';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nvar useStyles = makeStyles(function (theme) {\n  var _changeButton, _actions;\n\n  return {\n    root: {},\n    cover: {\n      position: 'relative',\n      height: 360,\n      backgroundSize: 'cover',\n      backgroundRepeat: 'no-repeat',\n      backgroundPosition: 'center',\n      '&:before': {\n        position: 'absolute',\n        content: '\" \"',\n        top: 0,\n        left: 0,\n        height: '100%',\n        width: '100%',\n        backgroundImage: 'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n      },\n      '&:hover': {\n        '& $changeButton': {\n          visibility: 'visible'\n        }\n      }\n    },\n    changeButton: (_changeButton = {\n      visibility: 'hidden',\n      position: 'absolute',\n      bottom: theme.spacing(3),\n      right: theme.spacing(3),\n      backgroundColor: colors.blueGrey[900],\n      color: theme.palette.common.white\n    }, _defineProperty(_changeButton, theme.breakpoints.down('md'), {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    }), _defineProperty(_changeButton, '&:hover', {\n      backgroundColor: colors.blueGrey[900]\n    }), _changeButton),\n    addPhotoIcon: {\n      marginRight: theme.spacing(1)\n    },\n    container: _defineProperty({\n      padding: theme.spacing(2, 3),\n      position: 'relative',\n      display: 'flex',\n      flexWrap: 'wrap'\n    }, theme.breakpoints.down('sm'), {\n      flexDirection: 'column'\n    }),\n    avatar: {\n      border: \"2px solid \".concat(theme.palette.common.white),\n      height: 120,\n      width: 120,\n      top: -60,\n      left: theme.spacing(3),\n      position: 'absolute'\n    },\n    details: {\n      marginLeft: 136\n    },\n    actions: (_actions = {\n      marginLeft: 'auto'\n    }, _defineProperty(_actions, theme.breakpoints.down('sm'), {\n      marginTop: theme.spacing(1)\n    }), _defineProperty(_actions, '& > * + *', {\n      marginLeft: theme.spacing(1)\n    }), _actions),\n    pendingButton: {\n      color: theme.palette.common.white,\n      backgroundColor: colors.red[600],\n      '&:hover': {\n        backgroundColor: colors.red[900]\n      }\n    },\n    personAddIcon: {\n      marginRight: theme.spacing(1)\n    },\n    mailIcon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction Header(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n  var user = {\n    name: 'Shen Zhi',\n    bio: 'Web Developer',\n    avatar: '/images/avatars/avatar_11.png',\n    cover: '/images/covers/cover_2.jpg',\n    connectedStatus: 'not_connected'\n  };\n\n  var _useState = useState(user.connectedStatus),\n      _useState2 = _slicedToArray(_useState, 2),\n      connectedStatus = _useState2[0],\n      setConnectedStatus = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openSnackbar = _useState4[0],\n      setOpenSnackbar = _useState4[1];\n\n  var handleConnectToggle = function handleConnectToggle() {\n    setConnectedStatus(function (prevConnectedStatus) {\n      return prevConnectedStatus === 'not_connected' ? 'pending' : 'not_connected';\n    });\n  };\n\n  var handleSnackbarClose = function handleSnackbarClose() {\n    setOpenSnackbar(false);\n  };\n\n  useEffect(function () {\n    if (connectedStatus === 'pending') {\n      setOpenSnackbar(true);\n    }\n  }, [connectedStatus]);\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.cover,\n    style: {\n      backgroundImage: \"url(\".concat(user.cover, \")\")\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.changeButton,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddPhotoIcon, {\n    className: classes.addPhotoIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }), \"Change Cover\")), /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Person\",\n    className: classes.avatar,\n    src: user.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 11\n    }\n  }, user.bio), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, user.name)), /*#__PURE__*/React.createElement(Hidden, {\n    smDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"secondary\",\n    component: RouterLink,\n    to: \"/chat\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    className: classes.mailIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }), \"Send message\"), connectedStatus === 'not_connected' && /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    onClick: handleConnectToggle,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PersonAddIcon, {\n    className: classes.personAddIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }), \"Add connection\"), connectedStatus === 'pending' && /*#__PURE__*/React.createElement(Button, {\n    className: classes.pendingButton,\n    onClick: handleConnectToggle,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(PersonAddIcon, {\n    className: classes.personAddIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }), \"Pending connection\"), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"More options\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(MoreIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 17\n    }\n  })))))), /*#__PURE__*/React.createElement(Snackbar, {\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration: 6000,\n    message: /*#__PURE__*/React.createElement(Typography, {\n      color: \"inherit\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, \"Sent connection request\"),\n    onClose: handleSnackbarClose,\n    open: openSnackbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }\n  }));\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\nexport default Header;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Profile/Header.js"],"names":["React","useState","useEffect","Link","RouterLink","PropTypes","clsx","makeStyles","Container","Avatar","Typography","Button","Hidden","IconButton","Snackbar","Tooltip","colors","AddPhotoIcon","PersonAddIcon","ChatIcon","MoreIcon","useStyles","theme","root","cover","position","height","backgroundSize","backgroundRepeat","backgroundPosition","content","top","left","width","backgroundImage","visibility","changeButton","bottom","spacing","right","backgroundColor","blueGrey","color","palette","common","white","breakpoints","down","addPhotoIcon","marginRight","container","padding","display","flexWrap","flexDirection","avatar","border","details","marginLeft","actions","marginTop","pendingButton","red","personAddIcon","mailIcon","Header","className","rest","classes","user","name","bio","connectedStatus","setConnectedStatus","openSnackbar","setOpenSnackbar","handleConnectToggle","prevConnectedStatus","handleSnackbarClose","vertical","horizontal","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Container,\n  Avatar,\n  Typography,\n  Button,\n  Hidden,\n  IconButton,\n  Snackbar,\n  Tooltip,\n  colors\n} from '@material-ui/core';\nimport AddPhotoIcon from '@material-ui/icons/AddPhotoAlternate';\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\nimport ChatIcon from '@material-ui/icons/ChatOutlined';\nimport MoreIcon from '@material-ui/icons/MoreVert';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  cover: {\n    position: 'relative',\n    height: 360,\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'center',\n    '&:before': {\n      position: 'absolute',\n      content: '\" \"',\n      top: 0,\n      left: 0,\n      height: '100%',\n      width: '100%',\n      backgroundImage: 'linear-gradient(-180deg, rgba(0,0,0,0.00) 58%, rgba(0,0,0,0.32) 100%)'\n    },\n    '&:hover': {\n      '& $changeButton': {\n        visibility: 'visible'\n      }\n    }\n  },\n  changeButton: {\n    visibility: 'hidden',\n    position: 'absolute',\n    bottom: theme.spacing(3),\n    right: theme.spacing(3),\n    backgroundColor: colors.blueGrey[900],\n    color: theme.palette.common.white,\n    [theme.breakpoints.down('md')]: {\n      top: theme.spacing(3),\n      bottom: 'auto'\n    },\n    '&:hover': {\n      backgroundColor: colors.blueGrey[900]\n    }\n  },\n  addPhotoIcon: {\n    marginRight: theme.spacing(1)\n  },\n  container: {\n    padding: theme.spacing(2, 3),\n    position: 'relative',\n    display: 'flex',\n    flexWrap: 'wrap',\n    [theme.breakpoints.down('sm')]: {\n      flexDirection: 'column'\n    }\n  },\n  avatar: {\n    border: `2px solid ${theme.palette.common.white}`,\n    height: 120,\n    width: 120,\n    top: -60,\n    left: theme.spacing(3),\n    position: 'absolute'\n  },\n  details: {\n    marginLeft: 136\n  },\n  actions: {\n    marginLeft: 'auto',\n    [theme.breakpoints.down('sm')]: {\n      marginTop: theme.spacing(1)\n    },\n    '& > * + *': {\n      marginLeft: theme.spacing(1)\n    }\n  },\n  pendingButton: {\n    color: theme.palette.common.white,\n    backgroundColor: colors.red[600],\n    '&:hover': {\n      backgroundColor: colors.red[900]\n    }\n  },\n  personAddIcon: {\n    marginRight: theme.spacing(1)\n  },\n  mailIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const user = {\n    name: 'Shen Zhi',\n    bio: 'Web Developer',\n    avatar: '/images/avatars/avatar_11.png',\n    cover: '/images/covers/cover_2.jpg',\n    connectedStatus: 'not_connected'\n  };\n  const [connectedStatus, setConnectedStatus] = useState(user.connectedStatus);\n  const [openSnackbar, setOpenSnackbar] = useState(false);\n\n  const handleConnectToggle = () => {\n    setConnectedStatus((prevConnectedStatus) => (prevConnectedStatus === 'not_connected' ? 'pending' : 'not_connected'));\n  };\n\n  const handleSnackbarClose = () => {\n    setOpenSnackbar(false);\n  };\n\n  useEffect(() => {\n    if (connectedStatus === 'pending') {\n      setOpenSnackbar(true);\n    }\n  }, [connectedStatus]);\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div\n        className={classes.cover}\n        style={{ backgroundImage: `url(${user.cover})` }}\n      >\n        <Button\n          className={classes.changeButton}\n          variant=\"contained\"\n        >\n          <AddPhotoIcon className={classes.addPhotoIcon} />\n          Change Cover\n        </Button>\n      </div>\n      <Container\n        maxWidth=\"lg\"\n        className={classes.container}\n      >\n        <Avatar\n          alt=\"Person\"\n          className={classes.avatar}\n          src={user.avatar}\n        />\n        <div className={classes.details}>\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            {user.bio}\n          </Typography>\n          <Typography\n            component=\"h1\"\n            variant=\"h4\"\n          >\n            {user.name}\n          </Typography>\n        </div>\n        <Hidden smDown>\n          <div className={classes.actions}>\n            <Button\n              color=\"secondary\"\n              component={RouterLink}\n              to=\"/chat\"\n              variant=\"contained\"\n            >\n              <ChatIcon className={classes.mailIcon} />\n              Send message\n            </Button>\n            {connectedStatus === 'not_connected' && (\n              <Button\n                color=\"primary\"\n                onClick={handleConnectToggle}\n                variant=\"contained\"\n              >\n                <PersonAddIcon className={classes.personAddIcon} />\n                Add connection\n              </Button>\n            )}\n            {connectedStatus === 'pending' && (\n              <Button\n                className={classes.pendingButton}\n                onClick={handleConnectToggle}\n                variant=\"contained\"\n              >\n                <PersonAddIcon className={classes.personAddIcon} />\n                Pending connection\n              </Button>\n            )}\n            <Tooltip title=\"More options\">\n              <IconButton>\n                <MoreIcon />\n              </IconButton>\n            </Tooltip>\n          </div>\n        </Hidden>\n      </Container>\n      <Snackbar\n        anchorOrigin={{\n          vertical: 'bottom',\n          horizontal: 'left'\n        }}\n        autoHideDuration={6000}\n        message={(\n          <Typography\n            color=\"inherit\"\n            variant=\"h6\"\n          >\n            Sent connection request\n          </Typography>\n        )}\n        onClose={handleSnackbarClose}\n        open={openSnackbar}\n      />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}