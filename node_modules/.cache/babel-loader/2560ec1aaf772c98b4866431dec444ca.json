{"ast":null,"code":"import _toConsumableArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectList/Filter/index.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Checkbox, Chip, Divider, FormControlLabel, Input, Card, colors } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    keywords: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center'\n    },\n    searchIcon: {\n      color: theme.palette.icon,\n      marginRight: theme.spacing(2)\n    },\n    chips: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap'\n    },\n    chip: {\n      margin: theme.spacing(1)\n    },\n    selects: {\n      display: 'flex',\n      alignItems: 'center',\n      flexWrap: 'wrap',\n      backgroundColor: colors.grey[50],\n      padding: theme.spacing(1)\n    },\n    inNetwork: {\n      marginLeft: 'auto'\n    }\n  };\n});\nvar selects = [{\n  label: 'Type',\n  options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n}, {\n  label: 'Level',\n  options: ['Novice', 'Expert']\n}, {\n  label: 'Location',\n  options: ['Africa', 'Asia', 'Australia', 'Europe', 'North America', 'South America']\n}, {\n  label: 'Roles',\n  options: ['Android', 'Web Developer', 'iOS']\n}];\n\nfunction Filter(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      inputValue = _useState2[0],\n      setInputValue = _useState2[1];\n\n  var _useState3 = useState(['Freelance', 'Full Time', 'Novice', 'Europe', 'Android', 'Web Developer']),\n      _useState4 = _slicedToArray(_useState3, 2),\n      chips = _useState4[0],\n      setChips = _useState4[1];\n\n  var handleInputChange = function handleInputChange(event) {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  var handleInputKeyup = function handleInputKeyup(event) {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips(function (prevChips) {\n          return [].concat(_toConsumableArray(prevChips), [inputValue]);\n        });\n        setInputValue('');\n      }\n    }\n  };\n\n  var handleChipDelete = function handleChipDelete(chip) {\n    setChips(function (prevChips) {\n      return prevChips.filter(function (prevChip) {\n        return chip !== prevChip;\n      });\n    });\n  };\n\n  var handleMultiSelectChange = function handleMultiSelectChange(value) {\n    setChips(value);\n  };\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.keywords,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    className: classes.searchIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    disableUnderline: true,\n    onChange: handleInputChange,\n    onKeyUp: handleInputKeyup,\n    placeholder: \"Enter a keyword\",\n    value: inputValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chips,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, chips.map(function (chip) {\n    return /*#__PURE__*/React.createElement(Chip, {\n      className: classes.chip,\n      key: chip,\n      label: chip,\n      onDelete: function onDelete() {\n        return handleChipDelete(chip);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }\n    });\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.selects,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }\n  }, selects.map(function (select) {\n    return /*#__PURE__*/React.createElement(MultiSelect, {\n      key: select.label,\n      label: select.label,\n      onChange: handleMultiSelectChange,\n      options: select.options,\n      value: chips,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }\n    });\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    className: classes.inNetwork,\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      color: \"primary\",\n      defaultChecked: true //\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }),\n    label: \"In network\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }\n  })));\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\nexport default Filter;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectList/Filter/index.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Checkbox","Chip","Divider","FormControlLabel","Input","Card","colors","SearchIcon","MultiSelect","useStyles","theme","root","keywords","padding","spacing","display","alignItems","searchIcon","color","palette","icon","marginRight","chips","flexWrap","chip","margin","selects","backgroundColor","grey","inNetwork","marginLeft","label","options","Filter","className","rest","classes","inputValue","setInputValue","setChips","handleInputChange","event","persist","target","value","handleInputKeyup","keyCode","includes","prevChips","handleChipDelete","filter","prevChip","handleMultiSelectChange","map","select","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Checkbox,\n  Chip,\n  Divider,\n  FormControlLabel,\n  Input,\n  Card,\n  colors\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport MultiSelect from './MultiSelect';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  keywords: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  searchIcon: {\n    color: theme.palette.icon,\n    marginRight: theme.spacing(2)\n  },\n  chips: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap'\n  },\n  chip: {\n    margin: theme.spacing(1)\n  },\n  selects: {\n    display: 'flex',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n    backgroundColor: colors.grey[50],\n    padding: theme.spacing(1)\n  },\n  inNetwork: {\n    marginLeft: 'auto'\n  }\n}));\n\nconst selects = [\n  {\n    label: 'Type',\n    options: ['Freelance', 'Full Time', 'Part Time', 'Internship']\n  },\n  {\n    label: 'Level',\n    options: ['Novice', 'Expert']\n  },\n  {\n    label: 'Location',\n    options: [\n      'Africa',\n      'Asia',\n      'Australia',\n      'Europe',\n      'North America',\n      'South America'\n    ]\n  },\n  {\n    label: 'Roles',\n    options: ['Android', 'Web Developer', 'iOS']\n  }\n];\n\nfunction Filter({ className, ...rest }) {\n  const classes = useStyles();\n  const [inputValue, setInputValue] = useState('');\n  const [chips, setChips] = useState([\n    'Freelance',\n    'Full Time',\n    'Novice',\n    'Europe',\n    'Android',\n    'Web Developer'\n  ]);\n\n  const handleInputChange = (event) => {\n    event.persist();\n    setInputValue(event.target.value);\n  };\n\n  const handleInputKeyup = (event) => {\n    event.persist();\n\n    if (event.keyCode === 13 && inputValue) {\n      if (!chips.includes(inputValue)) {\n        setChips((prevChips) => [...prevChips, inputValue]);\n        setInputValue('');\n      }\n    }\n  };\n\n  const handleChipDelete = (chip) => {\n    setChips((prevChips) => prevChips.filter((prevChip) => chip !== prevChip));\n  };\n\n  const handleMultiSelectChange = (value) => {\n    setChips(value);\n  };\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.keywords}>\n        <SearchIcon className={classes.searchIcon} />\n        <Input\n          disableUnderline\n          onChange={handleInputChange}\n          onKeyUp={handleInputKeyup}\n          placeholder=\"Enter a keyword\"\n          value={inputValue}\n        />\n      </div>\n      <Divider />\n      <div className={classes.chips}>\n        {chips.map((chip) => (\n          <Chip\n            className={classes.chip}\n            key={chip}\n            label={chip}\n            onDelete={() => handleChipDelete(chip)}\n          />\n        ))}\n      </div>\n      <Divider />\n      <div className={classes.selects}>\n        {selects.map((select) => (\n          <MultiSelect\n            key={select.label}\n            label={select.label}\n            onChange={handleMultiSelectChange}\n            options={select.options}\n            value={chips}\n          />\n        ))}\n        <FormControlLabel\n          className={classes.inNetwork}\n          control={(\n            <Checkbox\n              color=\"primary\"\n              defaultChecked //\n            />\n          )}\n          label=\"In network\"\n        />\n      </div>\n    </Card>\n  );\n}\n\nFilter.propTypes = {\n  className: PropTypes.string\n};\n\nexport default Filter;\n"]},"metadata":{},"sourceType":"module"}