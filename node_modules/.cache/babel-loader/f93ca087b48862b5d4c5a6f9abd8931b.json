{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/FinancialStats/Chart.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {\n      position: 'relative'\n    }\n  };\n});\n\nfunction Chart(_ref) {\n  var dataProp = _ref.data,\n      labels = _ref.labels,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"data\", \"labels\", \"className\"]);\n\n  var classes = useStyles();\n  var theme = useTheme();\n  var data = {\n    datasets: [{\n      label: 'This year',\n      backgroundColor: theme.palette.primary.main,\n      data: dataProp.thisYear,\n      barThickness: 12,\n      maxBarThickness: 10,\n      barPercentage: 0.5,\n      categoryPercentage: 0.5\n    }, {\n      label: 'Last year',\n      backgroundColor: colors.grey[200],\n      data: dataProp.lastYear,\n      barThickness: 12,\n      maxBarThickness: 10,\n      barPercentage: 0.5,\n      categoryPercentage: 0.5\n    }],\n    labels: labels\n  };\n  var options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [{\n        gridLines: {\n          display: false,\n          drawBorder: false\n        },\n        ticks: {\n          padding: 20,\n          fontColor: theme.palette.text.secondary\n        }\n      }],\n      yAxes: [{\n        gridLines: {\n          borderDash: [2],\n          borderDashOffset: [2],\n          color: theme.palette.divider,\n          drawBorder: false,\n          zeroLineBorderDash: [2],\n          zeroLineBorderDashOffset: [2],\n          zeroLineColor: theme.palette.divider\n        },\n        ticks: {\n          padding: 20,\n          fontColor: theme.palette.text.secondary,\n          beginAtZero: true,\n          min: 0,\n          maxTicksLimit: 5,\n          callback: function callback(value) {\n            return value > 0 ? value + 'K' : value;\n          }\n        }\n      }]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: function title() {},\n        label: function label(tooltipItem) {\n          var label = \"This year: \".concat(tooltipItem.yLabel);\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    data: data,\n    options: options,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }));\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\nexport default Chart;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/FinancialStats/Chart.js"],"names":["React","PropTypes","clsx","Bar","makeStyles","useTheme","colors","useStyles","root","position","Chart","dataProp","data","labels","className","rest","classes","theme","datasets","label","backgroundColor","palette","primary","main","thisYear","barThickness","maxBarThickness","barPercentage","categoryPercentage","grey","lastYear","options","responsive","maintainAspectRatio","animation","cornerRadius","legend","display","layout","padding","scales","xAxes","gridLines","drawBorder","ticks","fontColor","text","secondary","yAxes","borderDash","borderDashOffset","color","divider","zeroLineBorderDash","zeroLineBorderDashOffset","zeroLineColor","beginAtZero","min","maxTicksLimit","callback","value","tooltips","enabled","mode","intersect","caretSize","yPadding","xPadding","borderWidth","borderColor","common","white","titleFontColor","bodyFontColor","footerFontColor","callbacks","title","tooltipItem","yLabel","propTypes","string","object","isRequired","array"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { Bar } from 'react-chartjs-2';\nimport { makeStyles, useTheme } from '@material-ui/styles';\nimport { colors } from '@material-ui/core';\n\nconst useStyles = makeStyles(() => ({\n  root: {\n    position: 'relative'\n  }\n}));\n\nfunction Chart({ data: dataProp, labels, className, ...rest }) {\n  const classes = useStyles();\n  const theme = useTheme();\n\n  const data = {\n    datasets: [\n      {\n        label: 'This year',\n        backgroundColor: theme.palette.primary.main,\n        data: dataProp.thisYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      },\n      {\n        label: 'Last year',\n        backgroundColor: colors.grey[200],\n        data: dataProp.lastYear,\n        barThickness: 12,\n        maxBarThickness: 10,\n        barPercentage: 0.5,\n        categoryPercentage: 0.5\n      }\n    ],\n    labels\n  };\n\n  const options = {\n    responsive: true,\n    maintainAspectRatio: false,\n    animation: false,\n    cornerRadius: 20,\n    legend: {\n      display: false\n    },\n    layout: {\n      padding: 0\n    },\n    scales: {\n      xAxes: [\n        {\n          gridLines: {\n            display: false,\n            drawBorder: false\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary\n          }\n        }\n      ],\n      yAxes: [\n        {\n          gridLines: {\n            borderDash: [2],\n            borderDashOffset: [2],\n            color: theme.palette.divider,\n            drawBorder: false,\n            zeroLineBorderDash: [2],\n            zeroLineBorderDashOffset: [2],\n            zeroLineColor: theme.palette.divider\n          },\n          ticks: {\n            padding: 20,\n            fontColor: theme.palette.text.secondary,\n            beginAtZero: true,\n            min: 0,\n            maxTicksLimit: 5,\n            callback: value => {\n              return value > 0 ? value + 'K' : value;\n            }\n          }\n        }\n      ]\n    },\n    tooltips: {\n      enabled: true,\n      mode: 'index',\n      intersect: false,\n      caretSize: 10,\n      yPadding: 20,\n      xPadding: 20,\n      borderWidth: 1,\n      borderColor: theme.palette.divider,\n      backgroundColor: theme.palette.common.white,\n      titleFontColor: theme.palette.text.primary,\n      bodyFontColor: theme.palette.text.secondary,\n      footerFontColor: theme.palette.text.secondary,\n      callbacks: {\n        title: () => {},\n        label: tooltipItem => {\n          let label = `This year: ${tooltipItem.yLabel}`;\n\n          if (tooltipItem.yLabel > 0) {\n            label += 'K';\n          }\n\n          return label;\n        }\n      }\n    }\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Bar\n        data={data}\n        options={options}\n      />\n    </div>\n  );\n}\n\nChart.propTypes = {\n  className: PropTypes.string,\n  data: PropTypes.object.isRequired,\n  labels: PropTypes.array.isRequired\n};\n\nexport default Chart;\n"]},"metadata":{},"sourceType":"module"}