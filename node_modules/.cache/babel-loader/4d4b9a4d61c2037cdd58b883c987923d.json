{"ast":null,"code":"import _slicedToArray from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/dnguyen/Desktop/Projects/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/dnguyen/Desktop/Projects/birthday-reminder/src/layouts/Dashboard/ChatBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Drawer, List, ListSubheader } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawer: {\n      width: 280\n    },\n    root: {\n      backgroundColor: theme.palette.common.white\n    },\n    list: {\n      padding: theme.spacing(1, 3)\n    },\n    listItemText: {\n      marginRight: theme.spacing(1)\n    },\n    lastActivity: {\n      whiteSpace: 'nowrap'\n    }\n  };\n});\n\nfunction ChatBar(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"open\", \"onClose\", \"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchData = function fetchData() {\n      axios.get('/api/chat/activity').then(function (response) {\n        if (mounted) {\n          setData(response.data);\n        }\n      });\n    };\n\n    fetchData();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n\n  return React.createElement(Drawer, {\n    anchor: \"right\",\n    classes: {\n      paper: classes.drawer\n    },\n    elevation: 1,\n    onClose: onClose,\n    open: open,\n    variant: \"temporary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }), React.createElement(List, {\n    className: classes.list,\n    subheader: React.createElement(ListSubheader, {\n      disableGutters: true,\n      disableSticky: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Your Friend List\"),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  })));\n}\n\nChatBar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nexport default ChatBar;","map":{"version":3,"sources":["/Users/dnguyen/Desktop/Projects/birthday-reminder/src/layouts/Dashboard/ChatBar.js"],"names":["React","useState","useEffect","clsx","PropTypes","makeStyles","Drawer","List","ListSubheader","axios","useStyles","theme","drawer","width","root","backgroundColor","palette","common","white","list","padding","spacing","listItemText","marginRight","lastActivity","whiteSpace","ChatBar","open","onClose","className","rest","classes","data","setData","mounted","fetchData","get","then","response","paper","propTypes","string","func","bool"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,aAHF,QAIO,mBAJP;AAKA,OAAOC,KAAP,MAAkB,iBAAlB;AAEA,IAAMC,SAAS,GAAGL,UAAU,CAAC,UAACM,KAAD;AAAA,SAAY;AACvCC,IAAAA,MAAM,EAAE;AACNC,MAAAA,KAAK,EAAE;AADD,KAD+B;AAIvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAEJ,KAAK,CAACK,OAAN,CAAcC,MAAd,CAAqBC;AADlC,KAJiC;AAOvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,OAAO,EAAET,KAAK,CAACU,OAAN,CAAc,CAAd,EAAiB,CAAjB;AADL,KAPiC;AAUvCC,IAAAA,YAAY,EAAE;AACZC,MAAAA,WAAW,EAAEZ,KAAK,CAACU,OAAN,CAAc,CAAd;AADD,KAVyB;AAavCG,IAAAA,YAAY,EAAE;AACZC,MAAAA,UAAU,EAAE;AADA;AAbyB,GAAZ;AAAA,CAAD,CAA5B;;AAkBA,SAASC,OAAT,OAKG;AAAA,MAJDC,IAIC,QAJDA,IAIC;AAAA,MAHDC,OAGC,QAHDA,OAGC;AAAA,MAFDC,SAEC,QAFDA,SAEC;AAAA,MADEC,IACF;;AACD,MAAMC,OAAO,GAAGrB,SAAS,EAAzB;;AADC,kBAEuBT,QAAQ,CAAC,IAAD,CAF/B;AAAA;AAAA,MAEM+B,IAFN;AAAA,MAEYC,OAFZ;;AAID/B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgC,OAAO,GAAG,IAAd;;AAEA,QAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACtB1B,MAAAA,KAAK,CAAC2B,GAAN,CAAU,oBAAV,EAAgCC,IAAhC,CAAqC,UAACC,QAAD,EAAc;AACjD,YAAIJ,OAAJ,EAAa;AACXD,UAAAA,OAAO,CAACK,QAAQ,CAACN,IAAV,CAAP;AACD;AACF,OAJD;AAKD,KAND;;AAQAG,IAAAA,SAAS;AAET,WAAO,YAAM;AACXD,MAAAA,OAAO,GAAG,KAAV;AACD,KAFD;AAGD,GAhBQ,EAgBN,EAhBM,CAAT;;AAkBA,MAAI,CAACF,IAAL,EAAW;AACT,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,MAAD;AACA,IAAA,MAAM,EAAC,OADP;AAEA,IAAA,OAAO,EAAE;AAAEO,MAAAA,KAAK,EAAER,OAAO,CAACnB;AAAjB,KAFT;AAGA,IAAA,SAAS,EAAE,CAHX;AAIA,IAAA,OAAO,EAAEgB,OAJT;AAKA,IAAA,IAAI,EAAED,IALN;AAMA,IAAA,OAAO,EAAC,WANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAQA,6CACMG,IADN;AAEE,IAAA,SAAS,EAAE3B,IAAI,CAAC4B,OAAO,CAACjB,IAAT,EAAee,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAII,oBAAC,IAAD;AACE,IAAA,SAAS,EAAEE,OAAO,CAACZ,IADrB;AAEE,IAAA,SAAS,EACP,oBAAC,aAAD;AACE,MAAA,cAAc,MADhB;AAEE,MAAA,aAAa,MAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CARA,CADF;AA2BD;;AAEDO,OAAO,CAACc,SAAR,GAAoB;AAClBX,EAAAA,SAAS,EAAEzB,SAAS,CAACqC,MADH;AAElBb,EAAAA,OAAO,EAAExB,SAAS,CAACsC,IAFD;AAGlBf,EAAAA,IAAI,EAAEvB,SAAS,CAACuC;AAHE,CAApB;AAMA,eAAejB,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Drawer,\n  List,\n  ListSubheader,\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: 280\n  },\n  root: {\n    backgroundColor: theme.palette.common.white\n  },\n  list: {\n    padding: theme.spacing(1, 3)\n  },\n  listItemText: {\n    marginRight: theme.spacing(1)\n  },\n  lastActivity: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction ChatBar({\n  open,\n  onClose,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [data, setData] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchData = () => {\n      axios.get('/api/chat/activity').then((response) => {\n        if (mounted) {\n          setData(response.data);\n        }\n      });\n    };\n\n    fetchData();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <Drawer\n    anchor=\"right\"\n    classes={{ paper: classes.drawer }}\n    elevation={1}\n    onClose={onClose}\n    open={open}\n    variant=\"temporary\"\n  >\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n        <List\n          className={classes.list}\n          subheader={(\n            <ListSubheader\n              disableGutters\n              disableSticky\n            >\n              Your Friend List\n            </ListSubheader>\n          )}\n        ></List>\n    </div>\n  </Drawer>\n  );\n}\n\nChatBar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nexport default ChatBar;\n"]},"metadata":{},"sourceType":"module"}