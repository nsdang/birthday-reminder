{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/Header.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, ButtonGroup } from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarTodayOutlined';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    calendar: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end'\n    },\n    calendarButton: {\n      backgroundColor: theme.palette.common.white\n    },\n    calendarTodayIcon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction Header(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(moment().subtract(7, 'days')),\n      _useState2 = _slicedToArray(_useState, 2),\n      startDate = _useState2[0],\n      setStartDate = _useState2[1];\n\n  var _useState3 = useState(moment()),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endDate = _useState4[0],\n      setEndDate = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectEdge = _useState6[0],\n      setSelectEdge = _useState6[1];\n\n  var _useState7 = useState(moment()),\n      _useState8 = _slicedToArray(_useState7, 2),\n      calendarDate = _useState8[0],\n      setCalendarDate = _useState8[1];\n\n  var open = Boolean(selectEdge);\n\n  var handleCalendarOpen = function handleCalendarOpen(edge) {\n    setSelectEdge(edge);\n  };\n\n  var handleCalendarChange = function handleCalendarChange(date) {\n    setCalendarDate(date);\n  };\n\n  var handleCalendarClose = function handleCalendarClose() {\n    setCalendarDate(moment());\n    setSelectEdge(null);\n  };\n\n  var handleCalendarAccept = function handleCalendarAccept(date) {\n    setCalendarDate(moment());\n\n    if (selectEdge === 'start') {\n      setStartDate(date);\n\n      if (moment(date).isAfter(endDate)) {\n        setEndDate(date);\n      }\n    } else {\n      setEndDate(date);\n\n      if (moment(date).isBefore(startDate)) {\n        setStartDate(date);\n      }\n    }\n\n    setSelectEdge(null);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"space-between\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    lg: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h2\",\n    gutterBottom: true,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, \"Analytics\"), /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    gutterBottom: true,\n    variant: \"h3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, \"Finance Overview\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.calendar,\n    item: true,\n    lg: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ButtonGroup, {\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.calendarButton,\n    onClick: function onClick() {\n      return handleCalendarOpen('start');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CalendarTodayIcon, {\n    className: classes.calendarTodayIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }), startDate.format('DD MM YYYY')), /*#__PURE__*/React.createElement(Button, {\n    className: classes.calendarButton,\n    onClick: function onClick() {\n      return handleCalendarOpen('end');\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CalendarTodayIcon, {\n    className: classes.calendarTodayIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 15\n    }\n  }), endDate.format('DD MM YYYY'))))), /*#__PURE__*/React.createElement(DatePicker, {\n    maxDate: moment(),\n    onAccept: handleCalendarAccept,\n    onChange: handleCalendarChange,\n    onClose: handleCalendarClose,\n    open: open,\n    style: {\n      display: 'none'\n    } // Temporal fix to hide the input element\n    ,\n    value: calendarDate,\n    variant: \"dialog\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }));\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\nHeader.defaultProps = {};\nexport default Header;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/Header.js"],"names":["React","useState","PropTypes","clsx","moment","makeStyles","Typography","Grid","Button","ButtonGroup","DatePicker","CalendarTodayIcon","useStyles","theme","root","calendar","display","alignItems","justifyContent","calendarButton","backgroundColor","palette","common","white","calendarTodayIcon","marginRight","spacing","Header","className","rest","classes","subtract","startDate","setStartDate","endDate","setEndDate","selectEdge","setSelectEdge","calendarDate","setCalendarDate","open","Boolean","handleCalendarOpen","edge","handleCalendarChange","date","handleCalendarClose","handleCalendarAccept","isAfter","isBefore","format","propTypes","string","defaultProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, Grid, Button, ButtonGroup } from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport CalendarTodayIcon from '@material-ui/icons/CalendarTodayOutlined';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  calendar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  calendarButton: {\n    backgroundColor: theme.palette.common.white\n  },\n  calendarTodayIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction Header({ className, ...rest }) {\n  const classes = useStyles();\n  const [startDate, setStartDate] = useState(moment().subtract(7, 'days'));\n  const [endDate, setEndDate] = useState(moment());\n  const [selectEdge, setSelectEdge] = useState(null);\n  const [calendarDate, setCalendarDate] = useState(moment());\n  const open = Boolean(selectEdge);\n\n  const handleCalendarOpen = (edge) => {\n    setSelectEdge(edge);\n  }\n\n  const handleCalendarChange = (date) => {\n    setCalendarDate(date);\n  }\n\n  const handleCalendarClose = () => {\n    setCalendarDate(moment());\n    setSelectEdge(null);\n  }\n\n  const handleCalendarAccept = (date) => {\n    setCalendarDate(moment());\n\n    if (selectEdge === 'start') {\n      setStartDate(date);\n\n      if (moment(date).isAfter(endDate)) {\n        setEndDate(date);\n      }\n    } else {\n      setEndDate(date);\n\n      if (moment(date).isBefore(startDate)) {\n        setStartDate(date);\n      }\n    }\n\n    setSelectEdge(null);\n  }\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Grid\n        container\n        justify=\"space-between\"\n        spacing={3}\n      >\n        <Grid\n          item\n          lg={6}\n          xs={12}\n        >\n          <Typography\n            component=\"h2\"\n            gutterBottom\n            variant=\"overline\"\n          >\n            Analytics\n          </Typography>\n          <Typography\n            component=\"h1\"\n            gutterBottom\n            variant=\"h3\"\n          >\n            Finance Overview\n          </Typography>\n        </Grid>\n        <Grid\n          className={classes.calendar}\n          item\n          lg={6}\n          xs={12}\n        >\n          <ButtonGroup\n            variant=\"contained\"\n          >\n            <Button\n              className={classes.calendarButton}\n              onClick={() => handleCalendarOpen('start')}\n            >\n              <CalendarTodayIcon className={classes.calendarTodayIcon} />\n              {startDate.format('DD MM YYYY')}\n            </Button>\n            <Button\n              className={classes.calendarButton}\n              onClick={() => handleCalendarOpen('end')}\n            >\n              <CalendarTodayIcon className={classes.calendarTodayIcon} />\n              {endDate.format('DD MM YYYY')}\n            </Button>\n          </ButtonGroup>\n        </Grid>\n      </Grid>\n      <DatePicker\n        maxDate={moment()}\n        onAccept={handleCalendarAccept}\n        onChange={handleCalendarChange}\n        onClose={handleCalendarClose}\n        open={open}\n        style={{ display: 'none' }} // Temporal fix to hide the input element\n        value={calendarDate}\n        variant=\"dialog\"\n      />\n    </div>\n  );\n}\n\nHeader.propTypes = {\n  className: PropTypes.string\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}