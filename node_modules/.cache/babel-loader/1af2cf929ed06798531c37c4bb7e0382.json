{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Chat/ConversationList/index.js\";\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Toolbar, Input, IconButton, Tooltip, Divider, List } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ConversationListItem from './ConversationListItem';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      backgroundColor: theme.palette.common.white\n    },\n    searchInput: {\n      flexGrow: 1\n    }\n  };\n});\n\nfunction ConversationList(_ref) {\n  var _this = this;\n\n  var conversations = _ref.conversations,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"conversations\", \"className\"]);\n\n  var classes = useStyles();\n  var params = useParams();\n  var selectedConversation = params.id;\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    className: classes.searchInput,\n    disableUnderline: true,\n    placeholder: \"Search contacts\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    title: \"Search\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    edge: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  })))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    disablePadding: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, conversations.map(function (conversation, i) {\n    return /*#__PURE__*/React.createElement(ConversationListItem, {\n      active: conversation.id === selectedConversation,\n      conversation: conversation,\n      divider: i < conversations.length - 1,\n      key: conversation.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    });\n  })));\n}\n\nConversationList.propTypes = {\n  className: PropTypes.string,\n  conversations: PropTypes.array.isRequired\n};\nexport default ConversationList;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Chat/ConversationList/index.js"],"names":["React","useParams","clsx","PropTypes","makeStyles","Toolbar","Input","IconButton","Tooltip","Divider","List","SearchIcon","ConversationListItem","useStyles","theme","root","backgroundColor","palette","common","white","searchInput","flexGrow","ConversationList","conversations","className","rest","classes","params","selectedConversation","id","map","conversation","i","length","propTypes","string","array","isRequired"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,SACEC,OADF,EAEEC,KAFF,EAGEC,UAHF,EAIEC,OAJF,EAKEC,OALF,EAMEC,IANF,QAOO,mBAPP;AAQA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AAEA,IAAMC,SAAS,GAAGT,UAAU,CAAC,UAACU,KAAD;AAAA,SAAY;AACvCC,IAAAA,IAAI,EAAE;AACJC,MAAAA,eAAe,EAAEF,KAAK,CAACG,OAAN,CAAcC,MAAd,CAAqBC;AADlC,KADiC;AAIvCC,IAAAA,WAAW,EAAE;AACXC,MAAAA,QAAQ,EAAE;AADC;AAJ0B,GAAZ;AAAA,CAAD,CAA5B;;AASA,SAASC,gBAAT,OAAiE;AAAA;;AAAA,MAArCC,aAAqC,QAArCA,aAAqC;AAAA,MAAtBC,SAAsB,QAAtBA,SAAsB;AAAA,MAARC,IAAQ;;AAC/D,MAAMC,OAAO,GAAGb,SAAS,EAAzB;AACA,MAAMc,MAAM,GAAG1B,SAAS,EAAxB;AACA,MAAM2B,oBAAoB,GAAGD,MAAM,CAACE,EAApC;AAEA,sBACE,6CACMJ,IADN;AAEE,IAAA,SAAS,EAAEvB,IAAI,CAACwB,OAAO,CAACX,IAAT,EAAeS,SAAf,CAFjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAIE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,SAAS,EAAEE,OAAO,CAACN,WADrB;AAEE,IAAA,gBAAgB,MAFlB;AAGE,IAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CANF,CAJF,eAgBE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,eAiBE,oBAAC,IAAD;AAAM,IAAA,cAAc,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,aAAa,CAACO,GAAd,CAAkB,UAACC,YAAD,EAAeC,CAAf;AAAA,wBACjB,oBAAC,oBAAD;AACE,MAAA,MAAM,EAAED,YAAY,CAACF,EAAb,KAAoBD,oBAD9B;AAEE,MAAA,YAAY,EAAEG,YAFhB;AAGE,MAAA,OAAO,EAAEC,CAAC,GAAGT,aAAa,CAACU,MAAd,GAAuB,CAHtC;AAIE,MAAA,GAAG,EAAEF,YAAY,CAACF,EAJpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADiB;AAAA,GAAlB,CADH,CAjBF,CADF;AA8BD;;AAEDP,gBAAgB,CAACY,SAAjB,GAA6B;AAC3BV,EAAAA,SAAS,EAAErB,SAAS,CAACgC,MADM;AAE3BZ,EAAAA,aAAa,EAAEpB,SAAS,CAACiC,KAAV,CAAgBC;AAFJ,CAA7B;AAKA,eAAef,gBAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Toolbar,\n  Input,\n  IconButton,\n  Tooltip,\n  Divider,\n  List\n} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport ConversationListItem from './ConversationListItem';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.common.white\n  },\n  searchInput: {\n    flexGrow: 1\n  }\n}));\n\nfunction ConversationList({ conversations, className, ...rest }) {\n  const classes = useStyles();\n  const params = useParams();\n  const selectedConversation = params.id;\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <Toolbar>\n        <Input\n          className={classes.searchInput}\n          disableUnderline\n          placeholder=\"Search contacts\"\n        />\n        <Tooltip title=\"Search\">\n          <IconButton edge=\"end\">\n            <SearchIcon />\n          </IconButton>\n        </Tooltip>\n      </Toolbar>\n      <Divider />\n      <List disablePadding>\n        {conversations.map((conversation, i) => (\n          <ConversationListItem\n            active={conversation.id === selectedConversation}\n            conversation={conversation}\n            divider={i < conversations.length - 1}\n            key={conversation.id}\n          />\n        ))}\n      </List>\n    </div>\n  );\n}\n\nConversationList.propTypes = {\n  className: PropTypes.string,\n  conversations: PropTypes.array.isRequired\n};\n\nexport default ConversationList;\n"]},"metadata":{},"sourceType":"module"}