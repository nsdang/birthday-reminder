{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/layouts/Dashboard/TopBar.js\";\n\n/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport { AppBar, Badge, Button, IconButton, Toolbar, Hidden, colors } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutline';\nimport InputIcon from '@material-ui/icons/Input';\nimport NotificationsPopover from 'src/components/NotificationsPopover';\nimport ChatBar from './ChatBar';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      boxShadow: 'none'\n    },\n    flexGrow: {\n      flexGrow: 1\n    },\n    chatButton: {\n      marginLeft: theme.spacing(1)\n    },\n    notificationsButton: {\n      marginLeft: theme.spacing(1)\n    },\n    notificationsBadge: {\n      backgroundColor: colors.orange[600]\n    },\n    logoutButton: {\n      marginLeft: theme.spacing(1)\n    },\n    logoutIcon: {\n      marginRight: theme.spacing(1)\n    }\n  };\n});\n\nfunction TopBar(_ref) {\n  var onOpenNavBarMobile = _ref.onOpenNavBarMobile,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"onOpenNavBarMobile\", \"className\"]);\n\n  var classes = useStyles();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var notificationsRef = useRef(null);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notifications = _useState2[0],\n      setNotifications = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      openNotifications = _useState4[0],\n      setOpenNotifications = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      openChatBar = _useState6[0],\n      setOpenChatBar = _useState6[1];\n\n  var handleLogout = function handleLogout() {\n    history.push('/auth/login'); // dispatch(logout());\n  };\n\n  var handleChatBarOpen = function handleChatBarOpen() {\n    setOpenChatBar(true);\n  };\n\n  var handleChatBarClose = function handleChatBarClose() {\n    setOpenChatBar(false);\n  };\n\n  var handleNotificationsOpen = function handleNotificationsOpen() {\n    setOpenNotifications(true);\n  };\n\n  var handleNotificationsClose = function handleNotificationsClose() {\n    setOpenNotifications(false);\n  };\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchNotifications = function fetchNotifications() {// Fetch data from server\n    };\n\n    fetchNotifications();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(AppBar, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Toolbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexGrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.chatButton,\n    color: \"inherit\",\n    onClick: handleChatBarOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: 0,\n    color: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(PeopleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Hidden, {\n    mdDown: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    className: classes.notificationsButton,\n    color: \"inherit\",\n    onClick: handleNotificationsOpen,\n    ref: notificationsRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Badge, {\n    badgeContent: notifications.length,\n    classes: {\n      badge: classes.notificationsBadge\n    },\n    variant: \"dot\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(NotificationsIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(Button, {\n    className: classes.logoutButton,\n    color: \"inherit\",\n    onClick: handleLogout,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(InputIcon, {\n    className: classes.logoutIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }), \"Sign out\"))), /*#__PURE__*/React.createElement(NotificationsPopover, {\n    anchorEl: notificationsRef.current,\n    notifications: notifications,\n    onClose: handleNotificationsClose,\n    open: openNotifications,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ChatBar, {\n    onClose: handleChatBarClose,\n    open: openChatBar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }));\n}\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onOpenNavBarMobile: PropTypes.func\n};\nexport default TopBar;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/layouts/Dashboard/TopBar.js"],"names":["React","useState","useRef","useEffect","useHistory","PropTypes","clsx","useDispatch","makeStyles","AppBar","Badge","Button","IconButton","Toolbar","Hidden","colors","NotificationsIcon","PeopleIcon","InputIcon","NotificationsPopover","ChatBar","useStyles","theme","root","boxShadow","flexGrow","chatButton","marginLeft","spacing","notificationsButton","notificationsBadge","backgroundColor","orange","logoutButton","logoutIcon","marginRight","TopBar","onOpenNavBarMobile","className","rest","classes","history","dispatch","notificationsRef","notifications","setNotifications","openNotifications","setOpenNotifications","openChatBar","setOpenChatBar","handleLogout","push","handleChatBarOpen","handleChatBarClose","handleNotificationsOpen","handleNotificationsClose","mounted","fetchNotifications","length","badge","current","propTypes","string","func"],"mappings":"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","sourcesContent":["/* eslint-disable no-unused-vars */\nimport React, { useState, useRef, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { useDispatch } from 'react-redux';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  AppBar,\n  Badge,\n  Button,\n  IconButton,\n  Toolbar,\n  Hidden,\n  colors\n} from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport PeopleIcon from '@material-ui/icons/PeopleOutline';\nimport InputIcon from '@material-ui/icons/Input';\nimport NotificationsPopover from 'src/components/NotificationsPopover';\nimport ChatBar from './ChatBar';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    boxShadow: 'none',\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  chatButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsButton: {\n    marginLeft: theme.spacing(1)\n  },\n  notificationsBadge: {\n    backgroundColor: colors.orange[600]\n  },\n  logoutButton: {\n    marginLeft: theme.spacing(1)\n  },\n  logoutIcon: {\n    marginRight: theme.spacing(1)\n  }\n}));\n\nfunction TopBar({\n  onOpenNavBarMobile,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const notificationsRef = useRef(null);\n  const [notifications, setNotifications] = useState([]);\n  const [openNotifications, setOpenNotifications] = useState(false);\n  const [openChatBar, setOpenChatBar] = useState(false);\n\n  const handleLogout = () => {\n    history.push('/auth/login');\n    // dispatch(logout());\n  };\n\n  const handleChatBarOpen = () => {\n    setOpenChatBar(true);\n  };\n\n  const handleChatBarClose = () => {\n    setOpenChatBar(false);\n  };\n\n  const handleNotificationsOpen = () => {\n    setOpenNotifications(true);\n  };\n\n  const handleNotificationsClose = () => {\n    setOpenNotifications(false);\n  };\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchNotifications = () => {\n      // Fetch data from server\n    };\n\n    fetchNotifications();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <AppBar\n      {...rest}\n      className={clsx(classes.root, className)}\n      color=\"primary\"\n    >\n      <Toolbar>\n        <div className={classes.flexGrow} />\n        <IconButton\n          className={classes.chatButton}\n          color=\"inherit\"\n          onClick={handleChatBarOpen}\n        >\n          <Badge\n            badgeContent={0}\n            color=\"secondary\"\n          >\n            <PeopleIcon />\n          </Badge>\n        </IconButton>\n        <Hidden mdDown>\n          <IconButton\n            className={classes.notificationsButton}\n            color=\"inherit\"\n            onClick={handleNotificationsOpen}\n            ref={notificationsRef}\n          >\n            <Badge\n              badgeContent={notifications.length}\n              classes={{ badge: classes.notificationsBadge }}\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <Button\n            className={classes.logoutButton}\n            color=\"inherit\"\n            onClick={handleLogout}\n          >\n            <InputIcon className={classes.logoutIcon} />\n            Sign out\n          </Button>\n        </Hidden>\n      </Toolbar>\n      <NotificationsPopover\n        anchorEl={notificationsRef.current}\n        notifications={notifications}\n        onClose={handleNotificationsClose}\n        open={openNotifications}\n      />\n      <ChatBar\n        onClose={handleChatBarClose}\n        open={openChatBar}\n      />\n    </AppBar>\n  );\n}\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onOpenNavBarMobile: PropTypes.func\n};\n\nexport default TopBar;\n"]},"metadata":{},"sourceType":"module"}