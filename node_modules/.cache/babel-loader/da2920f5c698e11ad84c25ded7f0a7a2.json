{"ast":null,"code":"import _objectSpread from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/KanbanBoard/TaskListItem.js\";\nimport React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Typography } from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport StackAvatars from 'src/components/StackAvatars';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      outline: 'none',\n      marginBottom: theme.spacing(2)\n    },\n    isDragging: {},\n    content: {\n      paddingTop: 0\n    },\n    stats: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    flexGrow: {\n      flexGrow: 1\n    },\n    files: {\n      color: theme.palette.icon,\n      marginLeft: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center'\n    },\n    comments: {\n      color: theme.palette.icon,\n      marginLeft: theme.spacing(2),\n      display: 'flex',\n      alignItems: 'center'\n    },\n    date: {\n      marginLeft: theme.spacing(2)\n    },\n    progress: {\n      marginTop: theme.spacing(2)\n    }\n  };\n});\n\nfunction TaskListItem(_ref) {\n  var task = _ref.task,\n      onOpen = _ref.onOpen,\n      provided = _ref.provided,\n      snapshot = _ref.snapshot,\n      className = _ref.className,\n      style = _ref.style,\n      rest = _objectWithoutProperties(_ref, [\"task\", \"onOpen\", \"provided\", \"snapshot\", \"className\", \"style\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    ref: provided.innerRef\n  }, provided.draggableProps, provided.dragHandleProps, {\n    className: clsx(classes.root, _defineProperty({}, classes.isDragging, snapshot.isDragging), className),\n    style: _objectSpread({}, style, {}, provided.draggableProps.style),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }),\n    subheader: \"#\".concat(task.ref),\n    subheaderTypographyProps: {\n      variant: 'overline'\n    },\n    title: task.title,\n    titleTypographyProps: {\n      variant: 'h5',\n      gutterBottom: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.stats,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StackAvatars, {\n    avatars: task.members,\n    limit: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 11\n    }\n  }), task.files > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.files,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AttachFileIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  })), task.comments > 0 && /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ChatIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.flexGrow,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.date,\n    color: \"textSecondary\",\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, moment(task.deadline).format('D MMM')))));\n}\n\nTaskListItem.propTypes = {\n  className: PropTypes.string,\n  onOpen: PropTypes.func,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  style: PropTypes.object,\n  task: PropTypes.object.isRequired\n};\nTaskListItem.defaultProps = {\n  style: {},\n  onOpen: function onOpen() {}\n};\nexport default TaskListItem;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/KanbanBoard/TaskListItem.js"],"names":["React","clsx","PropTypes","moment","makeStyles","Card","CardHeader","CardContent","Typography","AttachFileIcon","ChatIcon","StackAvatars","GenericMoreButton","useStyles","theme","root","outline","marginBottom","spacing","isDragging","content","paddingTop","stats","display","alignItems","flexGrow","files","color","palette","icon","marginLeft","comments","date","progress","marginTop","TaskListItem","task","onOpen","provided","snapshot","className","style","rest","classes","innerRef","draggableProps","dragHandleProps","ref","variant","title","gutterBottom","members","deadline","format","propTypes","string","func","object","isRequired","defaultProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Typography\n} from '@material-ui/core';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport StackAvatars from 'src/components/StackAvatars';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    outline: 'none',\n    marginBottom: theme.spacing(2)\n  },\n  isDragging: {},\n  content: {\n    paddingTop: 0\n  },\n  stats: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  flexGrow: {\n    flexGrow: 1\n  },\n  files: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  comments: {\n    color: theme.palette.icon,\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    alignItems: 'center'\n  },\n  date: {\n    marginLeft: theme.spacing(2)\n  },\n  progress: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction TaskListItem({\n  task,\n  // eslint-disable-next-line no-unused-vars\n  onOpen,\n  provided,\n  snapshot,\n  className,\n  style,\n  ...rest\n}) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      ref={provided.innerRef}\n      {...provided.draggableProps}\n      {...provided.dragHandleProps}\n      className={clsx(\n        classes.root,\n        {\n          [classes.isDragging]: snapshot.isDragging\n        },\n        className\n      )}\n      style={{ ...style, ...provided.draggableProps.style }}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        subheader={`#${task.ref}`}\n        subheaderTypographyProps={{ variant: 'overline' }}\n        title={task.title}\n        titleTypographyProps={{ variant: 'h5', gutterBottom: true }}\n      />\n      <CardContent className={classes.content}>\n        <div className={classes.stats}>\n          <StackAvatars\n            avatars={task.members}\n            limit={4}\n          />\n          {task.files > 0 && (\n            <div className={classes.files}>\n              <AttachFileIcon />\n            </div>\n          )}\n          {task.comments > 0 && (\n            <div className={classes.comments}>\n              <ChatIcon />\n            </div>\n          )}\n          <div className={classes.flexGrow} />\n          <Typography\n            className={classes.date}\n            color=\"textSecondary\"\n            variant=\"body2\"\n          >\n            {moment(task.deadline).format('D MMM')}\n          </Typography>\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nTaskListItem.propTypes = {\n  className: PropTypes.string,\n  onOpen: PropTypes.func,\n  provided: PropTypes.object.isRequired,\n  snapshot: PropTypes.object.isRequired,\n  style: PropTypes.object,\n  task: PropTypes.object.isRequired\n};\n\nTaskListItem.defaultProps = {\n  style: {},\n  onOpen: () => {}\n};\n\nexport default TaskListItem;\n"]},"metadata":{},"sourceType":"module"}