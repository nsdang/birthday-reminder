{"ast":null,"code":"import uuid from 'uuid/v1';\nimport moment from 'moment';\nimport { colors } from '@material-ui/core';\nimport mock from 'src/utils/mock';\nmock.onGet('/api/account/profile').reply(200, {\n  profile: {\n    avatar: '/images/avatars/avatar_11.png',\n    canHire: false,\n    country: 'USA',\n    email: 'shen.zhi@devias.io',\n    firstName: 'Shen',\n    isPublic: true,\n    lastName: 'Zhi',\n    phone: '+40 777666555',\n    state: 'Alabama',\n    timezone: '4:32PM (GMT-4)'\n  }\n});\nmock.onGet('/api/account/statistics').reply(200, {\n  statistics: {\n    payout: '4,250',\n    projects: '12,500',\n    visitors: '230',\n    watching: '5'\n  }\n});\nmock.onGet('/api/account/projects').reply(200, {\n  projects: [{\n    id: uuid(),\n    title: 'Mella Full Screen Slider',\n    price: '3K - 6K',\n    currency: '$',\n    type: 'Full-Time',\n    location: 'Europe',\n    author: {\n      name: 'Anje Keizer',\n      avatar: '/images/avatars/avatar_5.png'\n    },\n    tags: [{\n      id: uuid(),\n      text: 'Vue JS',\n      color: colors.green[600]\n    }],\n    updated_at: moment().subtract(24, 'minutes')\n  }]\n});\nmock.onGet('/api/account/todos').reply(200, {\n  todos: [{\n    id: uuid(),\n    title: 'Finish the proposal design and contract for the client ASAP',\n    deadline: moment().subtract(2, 'days'),\n    done: false\n  }, {\n    id: uuid(),\n    title: 'Finish the proposal design and contract for the client ASAP',\n    deadline: moment(),\n    done: false\n  }, {\n    id: uuid(),\n    title: 'Upload the files for the client @Adrian Stefan with the fonts, assets exported and all the fancy svgs',\n    deadline: moment().add(2, 'days'),\n    done: false\n  }, {\n    id: uuid(),\n    title: 'Re-write the card component with hooks and context',\n    deadline: moment().add(5, 'days'),\n    done: false\n  }, {\n    id: uuid(),\n    title: 'Send proposal for the fintech project',\n    deadline: moment().add(5, 'days'),\n    done: false\n  }, {\n    id: uuid(),\n    title: 'Create todo app with react hooks just to get a better understanding of the concept',\n    deadline: moment().add(7, 'days'),\n    done: true\n  }]\n});\nmock.onGet('/api/account/notifications').reply(200, {\n  notifications: [{\n    id: uuid(),\n    title: 'New order has been received',\n    type: 'order',\n    created_at: moment().subtract(2, 'hours')\n  }, {\n    id: uuid(),\n    title: 'New customer is registered',\n    type: 'user',\n    created_at: moment().subtract(1, 'day')\n  }, {\n    id: uuid(),\n    title: 'Project has been approved',\n    type: 'project',\n    created_at: moment().subtract(3, 'days')\n  }, {\n    id: uuid(),\n    title: 'New feature has been added',\n    type: 'feature',\n    created_at: moment().subtract(7, 'days')\n  }]\n});\nmock.onGet('/api/account/subscription').reply(200, {\n  subscription: {\n    name: 'Freelancer',\n    price: '5',\n    currency: '$',\n    proposalsLeft: 12,\n    templatesLeft: 5,\n    invitesLeft: 24,\n    adsLeft: 10,\n    hasAnalytics: true,\n    hasEmailAlerts: true\n  }\n});\nmock.onGet('/api/account/settings').reply(200, {\n  settings: {}\n});","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/mock/accountMock.js"],"names":["uuid","moment","colors","mock","onGet","reply","profile","avatar","canHire","country","email","firstName","isPublic","lastName","phone","state","timezone","statistics","payout","projects","visitors","watching","id","title","price","currency","type","location","author","name","tags","text","color","green","updated_at","subtract","todos","deadline","done","add","notifications","created_at","subscription","proposalsLeft","templatesLeft","invitesLeft","adsLeft","hasAnalytics","hasEmailAlerts","settings"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,SAAjB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AACA,OAAOC,IAAP,MAAiB,gBAAjB;AAEAA,IAAI,CAACC,KAAL,CAAW,sBAAX,EAAmCC,KAAnC,CAAyC,GAAzC,EAA8C;AAC5CC,EAAAA,OAAO,EAAE;AACPC,IAAAA,MAAM,EAAE,+BADD;AAEPC,IAAAA,OAAO,EAAE,KAFF;AAGPC,IAAAA,OAAO,EAAE,KAHF;AAIPC,IAAAA,KAAK,EAAE,oBAJA;AAKPC,IAAAA,SAAS,EAAE,MALJ;AAMPC,IAAAA,QAAQ,EAAE,IANH;AAOPC,IAAAA,QAAQ,EAAE,KAPH;AAQPC,IAAAA,KAAK,EAAE,eARA;AASPC,IAAAA,KAAK,EAAE,SATA;AAUPC,IAAAA,QAAQ,EAAE;AAVH;AADmC,CAA9C;AAeAb,IAAI,CAACC,KAAL,CAAW,yBAAX,EAAsCC,KAAtC,CAA4C,GAA5C,EAAiD;AAC/CY,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,OADE;AAEVC,IAAAA,QAAQ,EAAE,QAFA;AAGVC,IAAAA,QAAQ,EAAE,KAHA;AAIVC,IAAAA,QAAQ,EAAE;AAJA;AADmC,CAAjD;AASAlB,IAAI,CAACC,KAAL,CAAW,uBAAX,EAAoCC,KAApC,CAA0C,GAA1C,EAA+C;AAC7Cc,EAAAA,QAAQ,EAAE,CACR;AACEG,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,0BAFT;AAGEC,IAAAA,KAAK,EAAE,SAHT;AAIEC,IAAAA,QAAQ,EAAE,GAJZ;AAKEC,IAAAA,IAAI,EAAE,WALR;AAMEC,IAAAA,QAAQ,EAAE,QANZ;AAOEC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAE,aADA;AAENtB,MAAAA,MAAM,EAAE;AAFF,KAPV;AAWEuB,IAAAA,IAAI,EAAE,CACJ;AACER,MAAAA,EAAE,EAAEtB,IAAI,EADV;AAEE+B,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,KAAK,EAAE9B,MAAM,CAAC+B,KAAP,CAAa,GAAb;AAHT,KADI,CAXR;AAkBEC,IAAAA,UAAU,EAAEjC,MAAM,GAAGkC,QAAT,CAAkB,EAAlB,EAAsB,SAAtB;AAlBd,GADQ;AADmC,CAA/C;AAyBAhC,IAAI,CAACC,KAAL,CAAW,oBAAX,EAAiCC,KAAjC,CAAuC,GAAvC,EAA4C;AAC1C+B,EAAAA,KAAK,EAAE,CACL;AACEd,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,6DAFT;AAGEc,IAAAA,QAAQ,EAAEpC,MAAM,GAAGkC,QAAT,CAAkB,CAAlB,EAAqB,MAArB,CAHZ;AAIEG,IAAAA,IAAI,EAAE;AAJR,GADK,EAOL;AACEhB,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,6DAFT;AAGEc,IAAAA,QAAQ,EAAEpC,MAAM,EAHlB;AAIEqC,IAAAA,IAAI,EAAE;AAJR,GAPK,EAaL;AACEhB,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EACH,uGAHJ;AAIEc,IAAAA,QAAQ,EAAEpC,MAAM,GAAGsC,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAJZ;AAKED,IAAAA,IAAI,EAAE;AALR,GAbK,EAoBL;AACEhB,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,oDAFT;AAGEc,IAAAA,QAAQ,EAAEpC,MAAM,GAAGsC,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAHZ;AAIED,IAAAA,IAAI,EAAE;AAJR,GApBK,EA0BL;AACEhB,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,uCAFT;AAGEc,IAAAA,QAAQ,EAAEpC,MAAM,GAAGsC,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAHZ;AAIED,IAAAA,IAAI,EAAE;AAJR,GA1BK,EAgCL;AACEhB,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EACH,oFAHJ;AAIEc,IAAAA,QAAQ,EAAEpC,MAAM,GAAGsC,GAAT,CAAa,CAAb,EAAgB,MAAhB,CAJZ;AAKED,IAAAA,IAAI,EAAE;AALR,GAhCK;AADmC,CAA5C;AA2CAnC,IAAI,CAACC,KAAL,CAAW,4BAAX,EAAyCC,KAAzC,CAA+C,GAA/C,EAAoD;AAClDmC,EAAAA,aAAa,EAAE,CACb;AACElB,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,6BAFT;AAGEG,IAAAA,IAAI,EAAE,OAHR;AAIEe,IAAAA,UAAU,EAAExC,MAAM,GAAGkC,QAAT,CAAkB,CAAlB,EAAqB,OAArB;AAJd,GADa,EAOb;AACEb,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,4BAFT;AAGEG,IAAAA,IAAI,EAAE,MAHR;AAIEe,IAAAA,UAAU,EAAExC,MAAM,GAAGkC,QAAT,CAAkB,CAAlB,EAAqB,KAArB;AAJd,GAPa,EAab;AACEb,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,2BAFT;AAGEG,IAAAA,IAAI,EAAE,SAHR;AAIEe,IAAAA,UAAU,EAAExC,MAAM,GAAGkC,QAAT,CAAkB,CAAlB,EAAqB,MAArB;AAJd,GAba,EAmBb;AACEb,IAAAA,EAAE,EAAEtB,IAAI,EADV;AAEEuB,IAAAA,KAAK,EAAE,4BAFT;AAGEG,IAAAA,IAAI,EAAE,SAHR;AAIEe,IAAAA,UAAU,EAAExC,MAAM,GAAGkC,QAAT,CAAkB,CAAlB,EAAqB,MAArB;AAJd,GAnBa;AADmC,CAApD;AA6BAhC,IAAI,CAACC,KAAL,CAAW,2BAAX,EAAwCC,KAAxC,CAA8C,GAA9C,EAAmD;AACjDqC,EAAAA,YAAY,EAAE;AACZb,IAAAA,IAAI,EAAE,YADM;AAEZL,IAAAA,KAAK,EAAE,GAFK;AAGZC,IAAAA,QAAQ,EAAE,GAHE;AAIZkB,IAAAA,aAAa,EAAE,EAJH;AAKZC,IAAAA,aAAa,EAAE,CALH;AAMZC,IAAAA,WAAW,EAAE,EAND;AAOZC,IAAAA,OAAO,EAAE,EAPG;AAQZC,IAAAA,YAAY,EAAE,IARF;AASZC,IAAAA,cAAc,EAAE;AATJ;AADmC,CAAnD;AAcA7C,IAAI,CAACC,KAAL,CAAW,uBAAX,EAAoCC,KAApC,CAA0C,GAA1C,EAA+C;AAC7C4C,EAAAA,QAAQ,EAAE;AADmC,CAA/C","sourcesContent":["import uuid from 'uuid/v1';\nimport moment from 'moment';\nimport { colors } from '@material-ui/core';\nimport mock from 'src/utils/mock';\n\nmock.onGet('/api/account/profile').reply(200, {\n  profile: {\n    avatar: '/images/avatars/avatar_11.png',\n    canHire: false,\n    country: 'USA',\n    email: 'shen.zhi@devias.io',\n    firstName: 'Shen',\n    isPublic: true,\n    lastName: 'Zhi',\n    phone: '+40 777666555',\n    state: 'Alabama',\n    timezone: '4:32PM (GMT-4)'\n  }\n});\n\nmock.onGet('/api/account/statistics').reply(200, {\n  statistics: {\n    payout: '4,250',\n    projects: '12,500',\n    visitors: '230',\n    watching: '5'\n  }\n});\n\nmock.onGet('/api/account/projects').reply(200, {\n  projects: [\n    {\n      id: uuid(),\n      title: 'Mella Full Screen Slider',\n      price: '3K - 6K',\n      currency: '$',\n      type: 'Full-Time',\n      location: 'Europe',\n      author: {\n        name: 'Anje Keizer',\n        avatar: '/images/avatars/avatar_5.png'\n      },\n      tags: [\n        {\n          id: uuid(),\n          text: 'Vue JS',\n          color: colors.green[600]\n        }\n      ],\n      updated_at: moment().subtract(24, 'minutes')\n    }\n  ]\n});\n\nmock.onGet('/api/account/todos').reply(200, {\n  todos: [\n    {\n      id: uuid(),\n      title: 'Finish the proposal design and contract for the client ASAP',\n      deadline: moment().subtract(2, 'days'),\n      done: false\n    },\n    {\n      id: uuid(),\n      title: 'Finish the proposal design and contract for the client ASAP',\n      deadline: moment(),\n      done: false\n    },\n    {\n      id: uuid(),\n      title:\n        'Upload the files for the client @Adrian Stefan with the fonts, assets exported and all the fancy svgs',\n      deadline: moment().add(2, 'days'),\n      done: false\n    },\n    {\n      id: uuid(),\n      title: 'Re-write the card component with hooks and context',\n      deadline: moment().add(5, 'days'),\n      done: false\n    },\n    {\n      id: uuid(),\n      title: 'Send proposal for the fintech project',\n      deadline: moment().add(5, 'days'),\n      done: false\n    },\n    {\n      id: uuid(),\n      title:\n        'Create todo app with react hooks just to get a better understanding of the concept',\n      deadline: moment().add(7, 'days'),\n      done: true\n    }\n  ]\n});\n\nmock.onGet('/api/account/notifications').reply(200, {\n  notifications: [\n    {\n      id: uuid(),\n      title: 'New order has been received',\n      type: 'order',\n      created_at: moment().subtract(2, 'hours')\n    },\n    {\n      id: uuid(),\n      title: 'New customer is registered',\n      type: 'user',\n      created_at: moment().subtract(1, 'day')\n    },\n    {\n      id: uuid(),\n      title: 'Project has been approved',\n      type: 'project',\n      created_at: moment().subtract(3, 'days')\n    },\n    {\n      id: uuid(),\n      title: 'New feature has been added',\n      type: 'feature',\n      created_at: moment().subtract(7, 'days')\n    }\n  ]\n});\n\nmock.onGet('/api/account/subscription').reply(200, {\n  subscription: {\n    name: 'Freelancer',\n    price: '5',\n    currency: '$',\n    proposalsLeft: 12,\n    templatesLeft: 5,\n    invitesLeft: 24,\n    adsLeft: 10,\n    hasAnalytics: true,\n    hasEmailAlerts: true\n  }\n});\n\nmock.onGet('/api/account/settings').reply(200, {\n  settings: {}\n});\n"]},"metadata":{},"sourceType":"module"}