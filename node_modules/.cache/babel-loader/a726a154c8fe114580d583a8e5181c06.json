{"ast":null,"code":"import _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Chat/ConversationList/ConversationListItem.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport { Typography, ListItem, ListItemAvatar, ListItemText, Avatar, colors } from '@material-ui/core';\nimport Label from 'src/components/Label';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    active: {\n      boxShadow: \"inset 4px 0px 0px \".concat(theme.palette.primary.main),\n      backgroundColor: colors.grey[50]\n    },\n    avatar: {\n      height: 40,\n      width: 40\n    },\n    details: {\n      marginLeft: theme.spacing(2),\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'flex-end'\n    },\n    unread: {\n      marginTop: 2,\n      padding: 2,\n      height: 18,\n      minWidth: 18\n    }\n  };\n});\n\nfunction ConversationListItem(_ref) {\n  var active = _ref.active,\n      conversation = _ref.conversation,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"active\", \"conversation\", \"className\"]);\n\n  var classes = useStyles();\n  var lastMessage = conversation.messages[conversation.messages.length - 1];\n  return /*#__PURE__*/React.createElement(ListItem, Object.assign({}, rest, {\n    button: true,\n    className: clsx(_defineProperty({}, classes.active, active), className),\n    component: RouterLink,\n    to: \"/chat/\".concat(conversation.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Person\",\n    className: classes.avatar,\n    src: conversation.otherUser.avatar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    primary: conversation.otherUser.name,\n    primaryTypographyProps: {\n      noWrap: true,\n      variant: 'h6'\n    },\n    secondary: \"\".concat(lastMessage.sender.name, \": \").concat(lastMessage.content),\n    secondaryTypographyProps: {\n      noWrap: true,\n      variant: 'body1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.details,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    noWrap: true,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, moment(lastMessage.created_at).isSame(moment(), 'day') ? moment(lastMessage.created_at).format('LT') : moment(lastMessage.created_at).fromNow()), conversation.unread > 0 && /*#__PURE__*/React.createElement(Label, {\n    className: classes.unread,\n    color: colors.red[500],\n    shape: \"rounded\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, conversation.unread)));\n}\n\nConversationListItem.propTypes = {\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  conversation: PropTypes.object.isRequired\n};\nexport default ConversationListItem;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Chat/ConversationList/ConversationListItem.js"],"names":["React","Link","RouterLink","PropTypes","clsx","moment","makeStyles","Typography","ListItem","ListItemAvatar","ListItemText","Avatar","colors","Label","useStyles","theme","active","boxShadow","palette","primary","main","backgroundColor","grey","avatar","height","width","details","marginLeft","spacing","display","flexDirection","alignItems","unread","marginTop","padding","minWidth","ConversationListItem","conversation","className","rest","classes","lastMessage","messages","length","id","otherUser","name","noWrap","variant","sender","content","created_at","isSame","format","fromNow","red","propTypes","bool","string","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  Avatar,\n  colors\n} from '@material-ui/core';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  active: {\n    boxShadow: `inset 4px 0px 0px ${theme.palette.primary.main}`,\n    backgroundColor: colors.grey[50]\n  },\n  avatar: {\n    height: 40,\n    width: 40\n  },\n  details: {\n    marginLeft: theme.spacing(2),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'flex-end'\n  },\n  unread: {\n    marginTop: 2,\n    padding: 2,\n    height: 18,\n    minWidth: 18\n  }\n}));\n\nfunction ConversationListItem({\n  active, conversation, className, ...rest\n}) {\n  const classes = useStyles();\n  const lastMessage = conversation.messages[conversation.messages.length - 1];\n\n  return (\n    <ListItem\n      {...rest}\n      button\n      className={clsx(\n        {\n          [classes.active]: active\n        },\n        className\n      )}\n      component={RouterLink}\n      to={`/chat/${conversation.id}`}\n    >\n      <ListItemAvatar>\n        <Avatar\n          alt=\"Person\"\n          className={classes.avatar}\n          src={conversation.otherUser.avatar}\n        />\n      </ListItemAvatar>\n      <ListItemText\n        primary={conversation.otherUser.name}\n        primaryTypographyProps={{\n          noWrap: true,\n          variant: 'h6'\n        }}\n        secondary={`${lastMessage.sender.name}: ${lastMessage.content}`}\n        secondaryTypographyProps={{\n          noWrap: true,\n          variant: 'body1'\n        }}\n      />\n      <div className={classes.details}>\n        <Typography\n          noWrap\n          variant=\"body2\"\n        >\n          {moment(lastMessage.created_at).isSame(moment(), 'day')\n            ? moment(lastMessage.created_at).format('LT')\n            : moment(lastMessage.created_at).fromNow()}\n        </Typography>\n        {conversation.unread > 0 && (\n          <Label\n            className={classes.unread}\n            color={colors.red[500]}\n            shape=\"rounded\"\n          >\n            {conversation.unread}\n          </Label>\n        )}\n      </div>\n    </ListItem>\n  );\n}\n\nConversationListItem.propTypes = {\n  active: PropTypes.bool,\n  className: PropTypes.string,\n  conversation: PropTypes.object.isRequired\n};\n\nexport default ConversationListItem;\n"]},"metadata":{},"sourceType":"module"}