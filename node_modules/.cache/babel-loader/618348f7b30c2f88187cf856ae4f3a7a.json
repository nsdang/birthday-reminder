{"ast":null,"code":"import uuid from 'uuid/v1';\nimport moment from 'moment';\nimport mock from 'src/utils/mock';\nmock.onGet('/api/orders').reply(200, {\n  orders: [{\n    id: uuid(),\n    created_at: moment().subtract(10, 'minutes'),\n    customer: {\n      name: 'Ekaterina Tankova'\n    },\n    payment: {\n      ref: 'FAD103',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(32, 'minutes').subtract(23, 'seconds'),\n    customer: {\n      name: 'Cao Yu'\n    },\n    payment: {\n      ref: 'FAD102',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(36, 'minutes').subtract(51, 'seconds'),\n    customer: {\n      name: 'Alexa Richardson'\n    },\n    payment: {\n      ref: 'FAD101',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(38, 'minutes').subtract(55, 'seconds'),\n    customer: {\n      name: 'Anje Keizer'\n    },\n    payment: {\n      ref: 'FAD100',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(40, 'minutes').subtract(3, 'seconds'),\n    customer: {\n      name: 'Clarke Gillebert'\n    },\n    payment: {\n      ref: 'FAD99',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(45, 'minutes').subtract(32, 'seconds'),\n    customer: {\n      name: 'Adam Denisov'\n    },\n    payment: {\n      ref: 'FAD98',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(48, 'minutes').subtract(57, 'seconds'),\n    customer: {\n      name: 'Ava Gregoraci',\n      avatar: '/images/avatars/avatar_8.png'\n    },\n    payment: {\n      ref: 'FAD97',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'pending'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(49, 'minutes').subtract(4, 'seconds'),\n    customer: {\n      name: 'Emilee Simchenko'\n    },\n    payment: {\n      ref: 'FAD96',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'completed'\n    },\n    status: 'active'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(57, 'minutes').subtract(43, 'seconds'),\n    customer: {\n      name: 'Kwak Seong-Min'\n    },\n    payment: {\n      ref: 'FAD95',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'rejected'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(59, 'minutes').subtract(6, 'seconds'),\n    customer: {\n      name: 'Shen Zhi'\n    },\n    payment: {\n      ref: 'FAD94',\n      method: 'CreditCard',\n      total: '500.00',\n      currency: '$',\n      status: 'canceled'\n    },\n    status: 'inactive'\n  }, {\n    id: uuid(),\n    created_at: moment().subtract(1, 'hour').subtract(15, 'minutes').subtract(43, 'seconds'),\n    customer: {\n      name: 'Merrile Burgett'\n    },\n    payment: {\n      ref: 'FAD93',\n      method: 'PayPal',\n      total: '500.00',\n      currency: '$',\n      status: 'canceled'\n    },\n    status: 'inactive'\n  }]\n});\nmock.onGet('/api/orders/1').reply(200, {\n  order: {\n    id: uuid(),\n    ref: 'FAD107',\n    promoCode: null,\n    value: '55.25',\n    currency: '$',\n    status: 'canceled',\n    customer: {\n      name: 'Ekaterina Tankova',\n      address: 'Street King William, 42456',\n      city: 'Montgomery',\n      country: 'United States'\n    },\n    items: [{\n      id: uuid(),\n      name: 'Project Points',\n      cuantity: 25,\n      billing: 'monthly',\n      status: 'completed',\n      value: '50.25',\n      currency: '$'\n    }, {\n      id: uuid(),\n      name: 'Freelancer Subscription',\n      cuantity: 1,\n      billing: 'monthly',\n      status: 'completed',\n      value: '5.00',\n      currency: '$'\n    }],\n    created_at: moment()\n  }\n});","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/mock/orderMock.js"],"names":["uuid","moment","mock","onGet","reply","orders","id","created_at","subtract","customer","name","payment","ref","method","total","currency","status","avatar","order","promoCode","value","address","city","country","items","cuantity","billing"],"mappings":"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","sourcesContent":["import uuid from 'uuid/v1';\nimport moment from 'moment';\nimport mock from 'src/utils/mock';\n\nmock.onGet('/api/orders').reply(200, {\n  orders: [\n    {\n      id: uuid(),\n      created_at: moment().subtract(10, 'minutes'),\n      customer: {\n        name: 'Ekaterina Tankova'\n      },\n      payment: {\n        ref: 'FAD103',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(32, 'minutes')\n        .subtract(23, 'seconds'),\n      customer: {\n        name: 'Cao Yu'\n      },\n      payment: {\n        ref: 'FAD102',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(36, 'minutes')\n        .subtract(51, 'seconds'),\n      customer: {\n        name: 'Alexa Richardson'\n      },\n      payment: {\n        ref: 'FAD101',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(38, 'minutes')\n        .subtract(55, 'seconds'),\n      customer: {\n        name: 'Anje Keizer'\n      },\n      payment: {\n        ref: 'FAD100',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(40, 'minutes')\n        .subtract(3, 'seconds'),\n      customer: {\n        name: 'Clarke Gillebert'\n      },\n      payment: {\n        ref: 'FAD99',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(45, 'minutes')\n        .subtract(32, 'seconds'),\n      customer: {\n        name: 'Adam Denisov'\n      },\n      payment: {\n        ref: 'FAD98',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(48, 'minutes')\n        .subtract(57, 'seconds'),\n      customer: {\n        name: 'Ava Gregoraci',\n        avatar: '/images/avatars/avatar_8.png'\n      },\n      payment: {\n        ref: 'FAD97',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'pending'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(49, 'minutes')\n        .subtract(4, 'seconds'),\n      customer: {\n        name: 'Emilee Simchenko'\n      },\n      payment: {\n        ref: 'FAD96',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'completed'\n      },\n      status: 'active'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(57, 'minutes')\n        .subtract(43, 'seconds'),\n      customer: {\n        name: 'Kwak Seong-Min'\n      },\n      payment: {\n        ref: 'FAD95',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'rejected'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(59, 'minutes')\n        .subtract(6, 'seconds'),\n      customer: {\n        name: 'Shen Zhi'\n      },\n      payment: {\n        ref: 'FAD94',\n        method: 'CreditCard',\n        total: '500.00',\n        currency: '$',\n        status: 'canceled'\n      },\n      status: 'inactive'\n    },\n    {\n      id: uuid(),\n      created_at: moment()\n        .subtract(1, 'hour')\n        .subtract(15, 'minutes')\n        .subtract(43, 'seconds'),\n      customer: {\n        name: 'Merrile Burgett'\n      },\n      payment: {\n        ref: 'FAD93',\n        method: 'PayPal',\n        total: '500.00',\n        currency: '$',\n        status: 'canceled'\n      },\n      status: 'inactive'\n    }\n  ]\n});\n\nmock.onGet('/api/orders/1').reply(200, {\n  order: {\n    id: uuid(),\n    ref: 'FAD107',\n    promoCode: null,\n    value: '55.25',\n    currency: '$',\n    status: 'canceled',\n    customer: {\n      name: 'Ekaterina Tankova',\n      address: 'Street King William, 42456',\n      city: 'Montgomery',\n      country: 'United States'\n    },\n    items: [\n      {\n        id: uuid(),\n        name: 'Project Points',\n        cuantity: 25,\n        billing: 'monthly',\n        status: 'completed',\n        value: '50.25',\n        currency: '$'\n      },\n      {\n        id: uuid(),\n        name: 'Freelancer Subscription',\n        cuantity: 1,\n        billing: 'monthly',\n        status: 'completed',\n        value: '5.00',\n        currency: '$'\n      }\n    ],\n    created_at: moment()\n  }\n});\n"]},"metadata":{},"sourceType":"module"}