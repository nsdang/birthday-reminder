{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/MostProfitableProducts/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardActions, CardHeader, CardContent, Divider, Table, TableRow, TableCell, Typography, Button, colors, TableBody } from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    content: {\n      padding: 0,\n      '&:last-child': {\n        paddingBottom: 0\n      }\n    },\n    inner: {\n      minWidth: 700\n    },\n    details: {\n      display: 'flex',\n      alignItems: 'center'\n    },\n    image: {\n      marginRight: theme.spacing(2),\n      flexShrink: 0,\n      height: 56,\n      width: 56\n    },\n    subscriptions: {\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    price: {\n      whiteSpace: 'nowrap'\n    },\n    value: {\n      color: colors.green[600],\n      fontWeight: theme.typography.fontWeightMedium\n    },\n    conversion: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end'\n    },\n    conversionStats: {\n      whiteSpace: 'nowrap',\n      marginRight: theme.spacing(2)\n    },\n    actions: {\n      justifyContent: 'flex-end'\n    },\n    arrowForwardIcon: {\n      marginLeft: theme.spacing(1)\n    }\n  };\n});\n\nfunction MostProfitableProducts(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      products = _useState2[0],\n      setProducts = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchProducts = function fetchProducts() {\n      axios.get('/api/dashboard/profitable-products').then(function (response) {\n        if (mounted) {\n          setProducts(response.data.products);\n        }\n      });\n    };\n\n    fetchProducts();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }),\n    title: \"Most Profitable Products\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PerfectScrollbar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.inner,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, products.map(function (product) {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      key: product.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.details,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      alt: \"Product\",\n      className: classes.image,\n      src: product.image,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 27\n      }\n    }, product.name), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.subscriptions,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, product.subscriptions), ' ', \"Active\")))), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 23\n      }\n    }, \"Price\"), /*#__PURE__*/React.createElement(Typography, {\n      className: classes.price,\n      variant: \"subtitle2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 25\n      }\n    }, product.currency, product.price), ' ', \"monthly\")), /*#__PURE__*/React.createElement(TableCell, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.conversion,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.conversionStats,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"right\",\n      variant: \"h6\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 27\n      }\n    }, product.progress, \"%\"), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"subtitle2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 27\n      }\n    }, \"Conversion Rate\")), /*#__PURE__*/React.createElement(CircularProgress, {\n      value: product.progress,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }))));\n  })))))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    component: RouterLink,\n    size: \"small\",\n    to: \"#\",\n    variant: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  }, \"See all\", /*#__PURE__*/React.createElement(ArrowForwardIcon, {\n    className: classes.arrowForwardIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }))));\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\nexport default MostProfitableProducts;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/MostProfitableProducts/index.js"],"names":["React","useState","useEffect","Link","RouterLink","clsx","PerfectScrollbar","PropTypes","makeStyles","Card","CardActions","CardHeader","CardContent","Divider","Table","TableRow","TableCell","Typography","Button","colors","TableBody","ArrowForwardIcon","axios","GenericMoreButton","CircularProgress","useStyles","theme","root","content","padding","paddingBottom","inner","minWidth","details","display","alignItems","image","marginRight","spacing","flexShrink","height","width","subscriptions","fontWeight","typography","fontWeightMedium","price","whiteSpace","value","color","green","conversion","justifyContent","conversionStats","actions","arrowForwardIcon","marginLeft","MostProfitableProducts","className","rest","classes","products","setProducts","mounted","fetchProducts","get","then","response","data","map","product","id","name","currency","progress","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardActions,\n  CardHeader,\n  CardContent,\n  Divider,\n  Table,\n  TableRow,\n  TableCell,\n  Typography,\n  Button,\n  colors,\n  TableBody\n} from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton  from 'src/components/GenericMoreButton';\nimport CircularProgress from './CircularProgress';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  },\n  inner: {\n    minWidth: 700\n  },\n  details: {\n    display: 'flex',\n    alignItems: 'center'\n  },\n  image: {\n    marginRight: theme.spacing(2),\n    flexShrink: 0,\n    height: 56,\n    width: 56\n  },\n  subscriptions: {\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  price: {\n    whiteSpace: 'nowrap'\n  },\n  value: {\n    color: colors.green[600],\n    fontWeight: theme.typography.fontWeightMedium\n  },\n  conversion: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end'\n  },\n  conversionStats: {\n    whiteSpace: 'nowrap',\n    marginRight: theme.spacing(2)\n  },\n  actions: {\n    justifyContent: 'flex-end'\n  },\n  arrowForwardIcon: {\n    marginLeft: theme.spacing(1)\n  }\n}));\n\nfunction MostProfitableProducts({ className, ...rest }) {\n  const classes = useStyles();\n  const [products, setProducts] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchProducts = () => {\n      axios.get('/api/dashboard/profitable-products').then(response => {\n        if (mounted) {\n          setProducts(response.data.products);\n        }\n      });\n    }\n\n    fetchProducts();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Most Profitable Products\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <PerfectScrollbar>\n          <div className={classes.inner}>\n            <Table>\n              <TableBody>\n                {products.map(product => (\n                  <TableRow\n                    hover\n                    key={product.id}\n                  >\n                    <TableCell>\n                      <div className={classes.details}>\n                        <img\n                          alt=\"Product\"\n                          className={classes.image}\n                          src={product.image}\n                        />\n                        <div>\n                          <Typography variant=\"h6\">{product.name}</Typography>\n                          <Typography variant=\"subtitle2\">\n                            <span className={classes.subscriptions}>\n                              {product.subscriptions}\n                            </span>{' '}\n                            Active\n                          </Typography>\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant=\"h6\">Price</Typography>\n                      <Typography\n                        className={classes.price}\n                        variant=\"subtitle2\"\n                      >\n                        <span className={classes.value}>\n                          {product.currency}\n                          {product.price}\n                        </span>{' '}\n                        monthly\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <div className={classes.conversion}>\n                        <div className={classes.conversionStats}>\n                          <Typography\n                            align=\"right\"\n                            variant=\"h6\"\n                          >\n                            {product.progress}%\n                          </Typography>\n                          <Typography variant=\"subtitle2\">\n                            Conversion Rate\n                          </Typography>\n                        </div>\n                        <CircularProgress value={product.progress} />\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </PerfectScrollbar>\n      </CardContent>\n      <Divider />\n      <CardActions className={classes.actions}>\n        <Button\n          color=\"primary\"\n          component={RouterLink}\n          size=\"small\"\n          to=\"#\"\n          variant=\"text\"\n        >\n          See all\n          <ArrowForwardIcon className={classes.arrowForwardIcon} />\n        </Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nMostProfitableProducts.propTypes = {\n  className: PropTypes.string\n};\n\nexport default MostProfitableProducts;\n"]},"metadata":{},"sourceType":"module"}