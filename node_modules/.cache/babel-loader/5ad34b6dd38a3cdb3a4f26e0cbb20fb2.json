{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/layouts/Dashboard/ChatBar.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Drawer, List, ListItem, ListItemAvatar, ListItemText, ListSubheader, Typography } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport StatusBullet from 'src/components/StatusBullet';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    drawer: {\n      width: 280\n    },\n    root: {\n      backgroundColor: theme.palette.common.white\n    },\n    list: {\n      padding: theme.spacing(1, 3)\n    },\n    listItemText: {\n      marginRight: theme.spacing(1)\n    },\n    lastActivity: {\n      whiteSpace: 'nowrap'\n    }\n  };\n});\n\nfunction ChatBar(_ref) {\n  var open = _ref.open,\n      onClose = _ref.onClose,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"open\", \"onClose\", \"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      data = _useState2[0],\n      setData = _useState2[1]; // useEffect(() => {\n  //   let mounted = true;\n  //   const fetchData = () => {\n  //     axios.get('/api/chat/activity').then((response) => {\n  //       if (mounted) {\n  //         setData(response.data);\n  //       }\n  //     });\n  //   };\n  //   fetchData();\n  //   return () => {\n  //     mounted = false;\n  //   };\n  // }, []);\n  // if (!data) {\n  //   return null;\n  // }\n\n\n  return /*#__PURE__*/React.createElement(Drawer, {\n    anchor: \"right\",\n    classes: {\n      paper: classes.drawer\n    },\n    elevation: 1,\n    onClose: onClose,\n    open: open,\n    variant: \"temporary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    className: classes.list // key={group.id}\n    ,\n    subheader: /*#__PURE__*/React.createElement(ListSubheader, {\n      disableGutters: true,\n      disableSticky: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItem, {\n    disableGutters: true // key={connection.id}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    alt: \"Person\",\n    component: RouterLink // src={connection.avatar}\n    ,\n    to: \"/profile/1/timeline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    className: classes.listItemText,\n    disableTypography: true,\n    primary: /*#__PURE__*/React.createElement(Typography, {\n      component: RouterLink,\n      display: \"block\",\n      noWrap: true,\n      to: \"/profile/1/timeline\",\n      variant: \"h6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 23\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(StatusBullet, {\n    color: \"success\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.lastActivity,\n    variant: \"body2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 21\n    }\n  })))));\n}\n\nChatBar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\nexport default ChatBar;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/layouts/Dashboard/ChatBar.js"],"names":["React","useState","useEffect","Link","RouterLink","clsx","moment","PropTypes","makeStyles","Avatar","Drawer","List","ListItem","ListItemAvatar","ListItemText","ListSubheader","Typography","axios","StatusBullet","useStyles","theme","drawer","width","root","backgroundColor","palette","common","white","list","padding","spacing","listItemText","marginRight","lastActivity","whiteSpace","ChatBar","open","onClose","className","rest","classes","data","setData","paper","propTypes","string","func","bool"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport clsx from 'clsx';\nimport moment from 'moment';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Drawer,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  ListSubheader,\n  Typography,\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport StatusBullet from 'src/components/StatusBullet';\n\nconst useStyles = makeStyles((theme) => ({\n  drawer: {\n    width: 280\n  },\n  root: {\n    backgroundColor: theme.palette.common.white\n  },\n  list: {\n    padding: theme.spacing(1, 3)\n  },\n  listItemText: {\n    marginRight: theme.spacing(1)\n  },\n  lastActivity: {\n    whiteSpace: 'nowrap'\n  }\n}));\n\nfunction ChatBar({\n  open,\n  onClose,\n  className,\n  ...rest\n}) {\n  const classes = useStyles();\n  const [data, setData] = useState([]);\n\n  // useEffect(() => {\n  //   let mounted = true;\n\n  //   const fetchData = () => {\n  //     axios.get('/api/chat/activity').then((response) => {\n  //       if (mounted) {\n  //         setData(response.data);\n  //       }\n  //     });\n  //   };\n\n  //   fetchData();\n\n  //   return () => {\n  //     mounted = false;\n  //   };\n  // }, []);\n\n  // if (!data) {\n  //   return null;\n  // }\n\n  return (\n    <Drawer\n      anchor=\"right\"\n      classes={{ paper: classes.drawer }}\n      elevation={1}\n      onClose={onClose}\n      open={open}\n      variant=\"temporary\"\n    >\n      <div\n        {...rest}\n        className={clsx(classes.root, className)}\n      >\n        {/* {data.groups.map((group) => ( */}\n          <List\n            className={classes.list}\n            // key={group.id}\n            subheader={(\n              <ListSubheader\n                disableGutters\n                disableSticky\n              >\n                {/* {group.name} */}\n              </ListSubheader>\n            )}\n          >\n            {/* {data.connections\n              .filter((connection) => group.id === connection.group)\n              .map((connection) => ( */}\n                <ListItem\n                  disableGutters\n                  // key={connection.id}\n                >\n                  <ListItemAvatar>\n                    <Avatar\n                      alt=\"Person\"\n                      component={RouterLink}\n                      // src={connection.avatar}\n                      to=\"/profile/1/timeline\"\n                    />\n                  </ListItemAvatar>\n                  <ListItemText\n                    className={classes.listItemText}\n                    disableTypography\n                    primary={(\n                      <Typography\n                        component={RouterLink}\n                        display=\"block\"\n                        noWrap\n                        to=\"/profile/1/timeline\"\n                        variant=\"h6\"\n                      >\n                        {/* {connection.name} */}\n                      </Typography>\n                    )}\n                  />\n                  {/* {connection.active ? ( */}\n                    <StatusBullet\n                      color=\"success\"\n                      size=\"small\"\n                    />\n                  {/* ) : ( */}\n                    <Typography\n                      className={classes.lastActivity}\n                      variant=\"body2\"\n                    >\n                      {/* {moment(connection.lastActivity).fromNow()} */}\n                    </Typography>\n                  {/* )} */}\n                </ListItem>\n              {/* ))} */}\n          </List>\n        {/* ))} */}\n      </div>\n    </Drawer>\n  );\n}\n\nChatBar.propTypes = {\n  className: PropTypes.string,\n  onClose: PropTypes.func,\n  open: PropTypes.bool\n};\n\nexport default ChatBar;\n"]},"metadata":{},"sourceType":"module"}