{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/EarningsSegmentation/index.js\";\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Card, CardHeader, CardContent, Divider, Typography } from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {},\n    content: {\n      padding: 0,\n      '&:last-child': {\n        paddingBottom: 0\n      }\n    },\n    chartContainer: {\n      padding: theme.spacing(3)\n    },\n    chart: {\n      height: 281\n    },\n    statsContainer: {\n      display: 'flex'\n    },\n    statsItem: {\n      flexGrow: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      justifyContent: 'center',\n      padding: theme.spacing(3, 2),\n      '&:not(:last-of-type)': {\n        borderRight: \"1px solid \".concat(theme.palette.divider)\n      }\n    }\n  };\n});\n\nfunction EarningsSegmentation(_ref) {\n  var _this = this;\n\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      earnings = _useState2[0],\n      setEarnings = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchEarnings = function fetchEarnings() {\n      axios.get('/api/dashboard/earnings').then(function (response) {\n        if (mounted) {\n          setEarnings(response.data.earnings);\n        }\n      });\n    };\n\n    fetchEarnings();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    action: /*#__PURE__*/React.createElement(GenericMoreButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }),\n    title: \"Earnings Segmentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.chartContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Chart, {\n    className: classes.chart,\n    data: earnings,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.statsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, earnings.map(function (earning) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes.statsItem,\n      key: earning.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      component: \"h6\",\n      gutterBottom: true,\n      variant: \"overline\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, earning.label), /*#__PURE__*/React.createElement(Typography, {\n      align: \"center\",\n      variant: \"h4\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }, earning.value, \"%\"));\n  }))));\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\nexport default EarningsSegmentation;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/DashboardAnalytics/EarningsSegmentation/index.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","Card","CardHeader","CardContent","Divider","Typography","axios","GenericMoreButton","Chart","useStyles","theme","root","content","padding","paddingBottom","chartContainer","spacing","chart","height","statsContainer","display","statsItem","flexGrow","flexDirection","justifyContent","borderRight","palette","divider","EarningsSegmentation","className","rest","classes","earnings","setEarnings","mounted","fetchEarnings","get","then","response","data","map","earning","id","label","value","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Card,\n  CardHeader,\n  CardContent,\n  Divider,\n  Typography\n} from '@material-ui/core';\nimport axios from 'src/utils/axios';\nimport GenericMoreButton  from 'src/components/GenericMoreButton';\nimport Chart from './Chart';\n\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  content: {\n    padding: 0,\n    '&:last-child': {\n      paddingBottom: 0\n    }\n  },\n  chartContainer: {\n    padding: theme.spacing(3)\n  },\n  chart: {\n    height: 281\n  },\n  statsContainer: {\n    display: 'flex'\n  },\n  statsItem: {\n    flexGrow: 1,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    padding: theme.spacing(3, 2),\n    '&:not(:last-of-type)': {\n      borderRight: `1px solid ${theme.palette.divider}`\n    }\n  }\n}));\n\nfunction EarningsSegmentation({ className, ...rest }) {\n  const classes = useStyles();\n  const [earnings, setEarnings] = useState([]);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchEarnings = () => {\n      axios.get('/api/dashboard/earnings').then(response => {\n        if (mounted) {\n          setEarnings(response.data.earnings);\n        }\n      });\n    }\n\n    fetchEarnings();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        action={<GenericMoreButton />}\n        title=\"Earnings Segmentation\"\n      />\n      <Divider />\n      <CardContent className={classes.content}>\n        <div className={classes.chartContainer}>\n          <Chart\n            className={classes.chart}\n            data={earnings}\n          />\n        </div>\n        <Divider />\n        <div className={classes.statsContainer}>\n          {earnings.map(earning => (\n            <div\n              className={classes.statsItem}\n              key={earning.id}\n            >\n              <Typography\n                align=\"center\"\n                component=\"h6\"\n                gutterBottom\n                variant=\"overline\"\n              >\n                {earning.label}\n              </Typography>\n              <Typography\n                align=\"center\"\n                variant=\"h4\"\n              >\n                {earning.value}%\n              </Typography>\n            </div>\n          ))}\n        </div>\n      </CardContent>\n    </Card>\n  );\n}\n\nEarningsSegmentation.propTypes = {\n  className: PropTypes.string\n};\n\nexport default EarningsSegmentation;\n"]},"metadata":{},"sourceType":"module"}