{"ast":null,"code":"import _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectDetails/Overview/Members.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Avatar, Button, Card, CardActions, CardContent, CardHeader, List, ListItem, ListItemAvatar, ListItemText, colors } from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\nvar useStyles = makeStyles(function () {\n  return {\n    root: {},\n    header: {\n      paddingBottom: 0\n    },\n    content: {\n      paddingTop: 0\n    },\n    actions: {\n      backgroundColor: colors.grey[50]\n    }\n  };\n});\n\nfunction Members(_ref) {\n  var _this = this;\n\n  var members = _ref.members,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"members\", \"className\"]);\n\n  var classes = useStyles();\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CardHeader, {\n    className: classes.header,\n    title: \"Project members\",\n    titleTypographyProps: {\n      variant: 'overline'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CardContent, {\n    className: classes.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, members.map(function (member) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      disableGutters: true,\n      key: member.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(ListItemAvatar, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Avatar, {\n      alt: \"Author\",\n      className: classes.avatar,\n      src: member.avatar,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, getInitials(member.name))), /*#__PURE__*/React.createElement(ListItemText, {\n      primary: member.name,\n      primaryTypographyProps: {\n        variant: 'h6'\n      },\n      secondary: member.bio,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 15\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(CardActions, {\n    className: classes.actions,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Manage users\")));\n}\n\nMembers.propTypes = {\n  className: PropTypes.string,\n  members: PropTypes.array.isRequired\n};\nexport default Members;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/ProjectDetails/Overview/Members.js"],"names":["React","PropTypes","clsx","makeStyles","Avatar","Button","Card","CardActions","CardContent","CardHeader","List","ListItem","ListItemAvatar","ListItemText","colors","getInitials","useStyles","root","header","paddingBottom","content","paddingTop","actions","backgroundColor","grey","Members","members","className","rest","classes","variant","map","member","id","avatar","name","bio","propTypes","string","array","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Avatar,\n  Button,\n  Card,\n  CardActions,\n  CardContent,\n  CardHeader,\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemText,\n  colors\n} from '@material-ui/core';\nimport getInitials from 'src/utils/getInitials';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  header: {\n    paddingBottom: 0\n  },\n  content: {\n    paddingTop: 0\n  },\n  actions: {\n    backgroundColor: colors.grey[50]\n  }\n}));\n\nfunction Members({ members, className, ...rest }) {\n  const classes = useStyles();\n\n  return (\n    <Card\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <CardHeader\n        className={classes.header}\n        title=\"Project members\"\n        titleTypographyProps={{\n          variant: 'overline'\n        }}\n      />\n      <CardContent className={classes.content}>\n        <List>\n          {members.map((member) => (\n            <ListItem\n              disableGutters\n              key={member.id}\n            >\n              <ListItemAvatar>\n                <Avatar\n                  alt=\"Author\"\n                  className={classes.avatar}\n                  src={member.avatar}\n                >\n                  {getInitials(member.name)}\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText\n                primary={member.name}\n                primaryTypographyProps={{ variant: 'h6' }}\n                secondary={member.bio}\n              />\n            </ListItem>\n          ))}\n        </List>\n      </CardContent>\n      <CardActions className={classes.actions}>\n        <Button fullWidth>Manage users</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nMembers.propTypes = {\n  className: PropTypes.string,\n  members: PropTypes.array.isRequired\n};\n\nexport default Members;\n"]},"metadata":{},"sourceType":"module"}