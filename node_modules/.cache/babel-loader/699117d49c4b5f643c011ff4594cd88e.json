{"ast":null,"code":"import _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Mail/EmailFolders.js\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport { Button, Divider, List, ListItem, Typography, colors } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport InboxIcon from '@material-ui/icons/InboxOutlined';\nimport SendIcon from '@material-ui/icons/SendOutlined';\nimport DraftsIcon from '@material-ui/icons/DraftsOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport FlagIcon from '@material-ui/icons/OutlinedFlag';\nimport Label from 'src/components/Label';\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      height: '100%',\n      backgroundColor: theme.palette.common.white\n    },\n    toolbar: {\n      padding: theme.spacing(2, 3)\n    },\n    addIcon: {\n      marginRight: theme.spacing(1)\n    },\n    button: {\n      justifyContent: 'flex-start',\n      textTransform: 'none',\n      letterSpacing: 0,\n      fontWeight: theme.typography.fontWeightRegular\n    },\n    folderIcon: {\n      marginRight: theme.spacing(1),\n      color: theme.palette.icon\n    },\n    totalItems: {\n      marginLeft: theme.spacing(1)\n    },\n    newItems: {\n      marginLeft: 'auto'\n    },\n    active: {\n      fontWeight: theme.typography.fontWeightMedium,\n      color: theme.palette.primary.main,\n      '& $folderIcon': {\n        color: theme.palette.primary.main\n      }\n    }\n  };\n});\n\nfunction EmailFolders(_ref) {\n  var _this = this;\n\n  var onFolderOpen = _ref.onFolderOpen,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"onFolderOpen\", \"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState('inbox'),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var folders = [{\n    id: 'inbox',\n    title: 'Inbox',\n    total_items: 200,\n    new_items: 2,\n    icon: /*#__PURE__*/React.createElement(InboxIcon, {\n      className: classes.folderIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })\n  }, {\n    id: 'draft',\n    title: 'Draft',\n    total_items: 0,\n    icon: /*#__PURE__*/React.createElement(DraftsIcon, {\n      className: classes.folderIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    })\n  }, {\n    id: 'sent',\n    title: 'Sent',\n    total_items: 78,\n    icon: /*#__PURE__*/React.createElement(SendIcon, {\n      className: classes.folderIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }\n    })\n  }, {\n    id: 'spam',\n    title: 'Spam',\n    total_items: 0,\n    icon: /*#__PURE__*/React.createElement(FlagIcon, {\n      className: classes.folderIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    })\n  }, {\n    id: 'trash',\n    title: 'Trash',\n    total_items: 31,\n    icon: /*#__PURE__*/React.createElement(DeleteIcon, {\n      className: classes.folderIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    })\n  }];\n\n  var handleSelect = function handleSelect(folder) {\n    setActive(folder.id);\n\n    if (onFolderOpen) {\n      onFolderOpen(folder.id);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbar,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    fullWidth: true,\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    className: classes.addIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }), \"Compose message\")), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, folders.map(function (folder) {\n    return /*#__PURE__*/React.createElement(ListItem, {\n      className: classes.listItem,\n      key: folder.title,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      className: clsx(classes.button, _defineProperty({}, classes.active, active === folder.id)),\n      fullWidth: true,\n      onClick: function onClick() {\n        return handleSelect(folder);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, folder.icon, folder.title, folder.total_items > 0 && /*#__PURE__*/React.createElement(Typography, {\n      className: classes.totalItems,\n      variant: \"body2\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, \"(\", folder.total_items > 99 ? '99+' : folder.total_items, \")\"), folder.new_items && /*#__PURE__*/React.createElement(Label, {\n      className: classes.newItems,\n      color: colors.red[600],\n      shape: \"rounded\",\n      variant: \"contained\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }\n    }, folder.new_items)));\n  })));\n}\n\nEmailFolders.propTypes = {\n  className: PropTypes.string,\n  onFolderOpen: PropTypes.func\n};\nexport default EmailFolders;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/Mail/EmailFolders.js"],"names":["React","useState","PropTypes","clsx","makeStyles","Button","Divider","List","ListItem","Typography","colors","AddIcon","InboxIcon","SendIcon","DraftsIcon","DeleteIcon","FlagIcon","Label","useStyles","theme","root","height","backgroundColor","palette","common","white","toolbar","padding","spacing","addIcon","marginRight","button","justifyContent","textTransform","letterSpacing","fontWeight","typography","fontWeightRegular","folderIcon","color","icon","totalItems","marginLeft","newItems","active","fontWeightMedium","primary","main","EmailFolders","onFolderOpen","className","rest","classes","setActive","folders","id","title","total_items","new_items","handleSelect","folder","map","listItem","red","propTypes","string","func"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/styles';\nimport {\n  Button,\n  Divider,\n  List,\n  ListItem,\n  Typography,\n  colors\n} from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport InboxIcon from '@material-ui/icons/InboxOutlined';\nimport SendIcon from '@material-ui/icons/SendOutlined';\nimport DraftsIcon from '@material-ui/icons/DraftsOutlined';\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport FlagIcon from '@material-ui/icons/OutlinedFlag';\nimport Label from 'src/components/Label';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: '100%',\n    backgroundColor: theme.palette.common.white\n  },\n  toolbar: {\n    padding: theme.spacing(2, 3)\n  },\n  addIcon: {\n    marginRight: theme.spacing(1)\n  },\n  button: {\n    justifyContent: 'flex-start',\n    textTransform: 'none',\n    letterSpacing: 0,\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  folderIcon: {\n    marginRight: theme.spacing(1),\n    color: theme.palette.icon\n  },\n  totalItems: {\n    marginLeft: theme.spacing(1)\n  },\n  newItems: {\n    marginLeft: 'auto'\n  },\n  active: {\n    fontWeight: theme.typography.fontWeightMedium,\n    color: theme.palette.primary.main,\n    '& $folderIcon': {\n      color: theme.palette.primary.main\n    }\n  }\n}));\n\nfunction EmailFolders({ onFolderOpen, className, ...rest }) {\n  const classes = useStyles();\n  const [active, setActive] = useState('inbox');\n  const folders = [\n    {\n      id: 'inbox',\n      title: 'Inbox',\n      total_items: 200,\n      new_items: 2,\n      icon: <InboxIcon className={classes.folderIcon} />\n    },\n    {\n      id: 'draft',\n      title: 'Draft',\n      total_items: 0,\n      icon: <DraftsIcon className={classes.folderIcon} />\n    },\n    {\n      id: 'sent',\n      title: 'Sent',\n      total_items: 78,\n      icon: <SendIcon className={classes.folderIcon} />\n    },\n    {\n      id: 'spam',\n      title: 'Spam',\n      total_items: 0,\n      icon: <FlagIcon className={classes.folderIcon} />\n    },\n    {\n      id: 'trash',\n      title: 'Trash',\n      total_items: 31,\n      icon: <DeleteIcon className={classes.folderIcon} />\n    }\n  ];\n\n  const handleSelect = (folder) => {\n    setActive(folder.id);\n\n    if (onFolderOpen) {\n      onFolderOpen(folder.id);\n    }\n  };\n\n  return (\n    <div\n      {...rest}\n      className={clsx(classes.root, className)}\n    >\n      <div className={classes.toolbar}>\n        <Button\n          color=\"primary\"\n          fullWidth\n          variant=\"contained\"\n        >\n          <AddIcon className={classes.addIcon} />\n          Compose message\n        </Button>\n      </div>\n      <Divider />\n      <List>\n        {folders.map((folder) => (\n          <ListItem\n            className={classes.listItem}\n            key={folder.title}\n          >\n            <Button\n              className={clsx(classes.button, {\n                [classes.active]: active === folder.id\n              })}\n              fullWidth\n              onClick={() => handleSelect(folder)}\n            >\n              {folder.icon}\n              {folder.title}\n              {folder.total_items > 0 && (\n                <Typography\n                  className={classes.totalItems}\n                  variant=\"body2\"\n                >\n                  (\n                    {folder.total_items > 99 ? '99+' : folder.total_items}\n                  )\n                </Typography>\n              )}\n              {folder.new_items && (\n                <Label\n                  className={classes.newItems}\n                  color={colors.red[600]}\n                  shape=\"rounded\"\n                  variant=\"contained\"\n                >\n                  {folder.new_items}\n                </Label>\n              )}\n            </Button>\n          </ListItem>\n        ))}\n      </List>\n    </div>\n  );\n}\n\nEmailFolders.propTypes = {\n  className: PropTypes.string,\n  onFolderOpen: PropTypes.func\n};\n\nexport default EmailFolders;\n"]},"metadata":{},"sourceType":"module"}