{"ast":null,"code":"import _slicedToArray from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/HomePage/Statistics.js\";\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, Typography, Grid, colors } from \"@material-ui/core\";\nimport axios from \"src/utils/axios\";\nimport Label from \"src/components/Label\";\nvar useStyles = makeStyles(function (theme) {\n  var _item;\n\n  return {\n    root: {},\n    content: {\n      padding: 0\n    },\n    item: (_item = {\n      padding: theme.spacing(3),\n      textAlign: \"center\"\n    }, _defineProperty(_item, theme.breakpoints.up(\"md\"), {\n      \"&:not(:last-of-type)\": {\n        borderRight: \"1px solid \".concat(theme.palette.divider)\n      }\n    }), _defineProperty(_item, theme.breakpoints.down(\"sm\"), {\n      \"&:not(:last-of-type)\": {\n        borderBottom: \"1px solid \".concat(theme.palette.divider)\n      }\n    }), _item),\n    titleWrapper: {\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    label: {\n      marginLeft: theme.spacing(1)\n    },\n    overline: {\n      marginTop: theme.spacing(1)\n    }\n  };\n});\n\nfunction Statistics(_ref) {\n  var className = _ref.className,\n      rest = _objectWithoutProperties(_ref, [\"className\"]);\n\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      statistics = _useState2[0],\n      setStatistics = _useState2[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchStatistics = function fetchStatistics() {\n      axios.get(\"/api/account/statistics\").then(function (response) {\n        if (mounted) {\n          setStatistics(response.data.statistics);\n        }\n      });\n    };\n\n    fetchStatistics();\n    return function () {\n      mounted = false;\n    };\n  }, []);\n\n  if (!statistics) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(Card, Object.assign({}, rest, {\n    className: clsx(classes.root, className),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    alignItems: \"center\",\n    container: true,\n    justify: \"space-between\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 3,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, \"$\", statistics.payout), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.overline,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, \"Total friends\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 3,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, \"$\", statistics.projects), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.overline,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, \"This month\")), /*#__PURE__*/React.createElement(Grid, {\n    className: classes.item,\n    item: true,\n    md: 3,\n    sm: 6,\n    xs: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.titleWrapper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"span\",\n    variant: \"h2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, statistics.watching), /*#__PURE__*/React.createElement(Label, {\n    className: classes.label,\n    color: colors.green[600],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Live\")), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.overline,\n    variant: \"overline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Next month\"))));\n}\n\nStatistics.propTypes = {\n  className: PropTypes.string\n};\nexport default Statistics;","map":{"version":3,"sources":["/Users/anhnguyen/Desktop/GitHub/Projects/TimeMatcher/birthday-reminder/src/views/HomePage/Statistics.js"],"names":["React","useState","useEffect","PropTypes","clsx","makeStyles","Card","Typography","Grid","colors","axios","Label","useStyles","theme","root","content","padding","item","spacing","textAlign","breakpoints","up","borderRight","palette","divider","down","borderBottom","titleWrapper","display","alignItems","justifyContent","label","marginLeft","overline","marginTop","Statistics","className","rest","classes","statistics","setStatistics","mounted","fetchStatistics","get","then","response","data","payout","projects","watching","green","propTypes","string"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/styles\";\nimport { Card, Typography, Grid, colors } from \"@material-ui/core\";\nimport axios from \"src/utils/axios\";\nimport Label from \"src/components/Label\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {},\n  content: {\n    padding: 0,\n  },\n  item: {\n    padding: theme.spacing(3),\n    textAlign: \"center\",\n    [theme.breakpoints.up(\"md\")]: {\n      \"&:not(:last-of-type)\": {\n        borderRight: `1px solid ${theme.palette.divider}`,\n      },\n    },\n    [theme.breakpoints.down(\"sm\")]: {\n      \"&:not(:last-of-type)\": {\n        borderBottom: `1px solid ${theme.palette.divider}`,\n      },\n    },\n  },\n  titleWrapper: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  label: {\n    marginLeft: theme.spacing(1),\n  },\n  overline: {\n    marginTop: theme.spacing(1),\n  },\n}));\n\nfunction Statistics({ className, ...rest }) {\n  const classes = useStyles();\n  const [statistics, setStatistics] = useState(null);\n\n  useEffect(() => {\n    let mounted = true;\n\n    const fetchStatistics = () => {\n      axios.get(\"/api/account/statistics\").then((response) => {\n        if (mounted) {\n          setStatistics(response.data.statistics);\n        }\n      });\n    };\n\n    fetchStatistics();\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  if (!statistics) {\n    return null;\n  }\n\n  return (\n    <Card {...rest} className={clsx(classes.root, className)}>\n      <Grid alignItems=\"center\" container justify=\"space-between\">\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography variant=\"h2\">${statistics.payout}</Typography>\n          <Typography className={classes.overline} variant=\"overline\">\n            Total friends\n          </Typography>\n        </Grid>\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <Typography variant=\"h2\">${statistics.projects}</Typography>\n          <Typography className={classes.overline} variant=\"overline\">\n            This month\n          </Typography>\n        </Grid>\n        {/* <Grid\n          className={classes.item}\n          item\n          md={3}\n          sm={6}\n          xs={12}\n        >\n          <Typography variant=\"h2\">{statistics.visitors}</Typography>\n          <Typography\n            className={classes.overline}\n            variant=\"overline\"\n          >\n            Today&apos;s Visitors\n          </Typography>\n        </Grid> */}\n        <Grid className={classes.item} item md={3} sm={6} xs={12}>\n          <div className={classes.titleWrapper}>\n            <Typography component=\"span\" variant=\"h2\">\n              {statistics.watching}\n            </Typography>\n            <Label className={classes.label} color={colors.green[600]}>\n              Live\n            </Label>\n          </div>\n          <Typography className={classes.overline} variant=\"overline\">\n            Next month\n          </Typography>\n        </Grid>\n      </Grid>\n    </Card>\n  );\n}\n\nStatistics.propTypes = {\n  className: PropTypes.string,\n};\n\nexport default Statistics;\n"]},"metadata":{},"sourceType":"module"}